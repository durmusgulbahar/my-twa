import { SendTransactionRpcRequest, SendTransactionRpcResponseError, SendTransactionRpcResponseSuccess } from '@tonconnect/protocol';
import { SendTransactionRequest, SendTransactionResponse } from "../models/methods";
import { RpcParser } from "./rpc-parser";
import { WithoutId } from "../utils/types";
declare class SendTransactionParser extends RpcParser<'sendTransaction'> {
    convertToRpcRequest(request: Omit<SendTransactionRequest, 'validUntil'> & {
        valid_until: number;
    }): WithoutId<SendTransactionRpcRequest>;
    parseAndThrowError(response: WithoutId<SendTransactionRpcResponseError>): never;
    convertFromRpcResponse(rpcResponse: WithoutId<SendTransactionRpcResponseSuccess>): SendTransactionResponse;
}
export declare const sendTransactionParser: SendTransactionParser;
export {};
