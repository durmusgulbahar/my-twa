{
  "version": 3,
  "sources": ["../../fp-ts/es6/function.js", "../../fp-ts/es6/internal.js", "../../fp-ts/es6/Apply.js", "../../fp-ts/es6/Functor.js", "../../fp-ts/es6/Applicative.js", "../../fp-ts/es6/Chain.js", "../../fp-ts/es6/ChainRec.js", "../../fp-ts/es6/FromEither.js", "../../fp-ts/es6/Separated.js", "../../fp-ts/es6/Witherable.js", "../../fp-ts/es6/Either.js", "../../io-ts/es6/index.js", "../../fp-ts/lib/function.js", "../../fp-ts/lib/internal.js", "../../fp-ts/lib/Apply.js", "../../fp-ts/lib/Functor.js", "../../fp-ts/lib/Applicative.js", "../../fp-ts/lib/Chain.js", "../../fp-ts/lib/ChainRec.js", "../../fp-ts/lib/FromEither.js", "../../fp-ts/lib/Separated.js", "../../fp-ts/lib/Witherable.js", "../../fp-ts/lib/Either.js", "../../fp-ts/es6/Eq.js", "../../fp-ts/es6/Ord.js", "../../fp-ts/es6/Magma.js", "../../fp-ts/es6/Semigroup.js", "../../fp-ts/es6/ReadonlyNonEmptyArray.js", "../../fp-ts/es6/NonEmptyArray.js", "../../fp-ts/es6/number.js", "../../fp-ts/es6/Zero.js", "../../fp-ts/es6/ReadonlyArray.js", "../../fp-ts/es6/Array.js", "../../fp-ts/es6/Predicate.js", "../../fp-ts/es6/Option.js", "../../fp-ts/es6/string.js", "../../fp-ts/es6/ReadonlyRecord.js", "../../fp-ts/es6/Record.js", "../../fp-ts/es6/pipeable.js", "../../io-ts-reporters/src/utils.ts", "../../io-ts-reporters/src/index.ts", "../../ton/dist/client/api/TonCache.js", "../../dataloader/index.js", "../../axios/lib/helpers/bind.js", "../../axios/lib/utils.js", "../../axios/lib/helpers/buildURL.js", "../../axios/lib/core/InterceptorManager.js", "../../axios/lib/helpers/normalizeHeaderName.js", "../../axios/lib/core/enhanceError.js", "../../axios/lib/core/createError.js", "../../axios/lib/core/settle.js", "../../axios/lib/helpers/cookies.js", "../../axios/lib/helpers/isAbsoluteURL.js", "../../axios/lib/helpers/combineURLs.js", "../../axios/lib/core/buildFullPath.js", "../../axios/lib/helpers/parseHeaders.js", "../../axios/lib/helpers/isURLSameOrigin.js", "../../axios/lib/cancel/Cancel.js", "../../axios/lib/adapters/xhr.js", "../../axios/lib/defaults.js", "../../axios/lib/core/transformData.js", "../../axios/lib/cancel/isCancel.js", "../../axios/lib/core/dispatchRequest.js", "../../axios/lib/core/mergeConfig.js", "../../axios/lib/env/data.js", "../../axios/lib/helpers/validator.js", "../../axios/lib/core/Axios.js", "../../axios/lib/cancel/CancelToken.js", "../../axios/lib/helpers/spread.js", "../../axios/lib/helpers/isAxiosError.js", "../../axios/lib/axios.js", "../../axios/index.js", "../../ton/package.json", "../../ton/dist/client/api/HttpApi.js", "../../ton/dist/client/TonClient.js", "../../ton/dist/utils/toUrlSafe.js", "../../ton/dist/client/TonClient4.js", "../../ton/dist/wallets/signing/createWalletTransfer.js", "../../ton/dist/wallets/WalletContractV1R1.js", "../../ton/dist/wallets/WalletContractV1R2.js", "../../ton/dist/wallets/WalletContractV1R3.js", "../../ton/dist/wallets/WalletContractV2R1.js", "../../ton/dist/wallets/WalletContractV2R2.js", "../../ton/dist/wallets/WalletContractV3R1.js", "../../ton/dist/wallets/WalletContractV3R2.js", "../../ton/dist/wallets/WalletContractV4.js", "../../ton/dist/jetton/JettonMaster.js", "../../ton/dist/jetton/JettonWallet.js", "../../ton/dist/index.js"],
  "sourcesContent": ["// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var getBooleanAlgebra = function (B) {\n    return function () { return ({\n        meet: function (x, y) { return function (a) { return B.meet(x(a), y(a)); }; },\n        join: function (x, y) { return function (a) { return B.join(x(a), y(a)); }; },\n        zero: function () { return B.zero; },\n        one: function () { return B.one; },\n        implies: function (x, y) { return function (a) { return B.implies(x(a), y(a)); }; },\n        not: function (x) { return function (a) { return B.not(x(a)); }; }\n    }); };\n};\n/**\n * Unary functions form a semigroup as long as you can provide a semigroup for the codomain.\n *\n * @example\n * import { Predicate, getSemigroup } from 'fp-ts/function'\n * import * as B from 'fp-ts/boolean'\n *\n * const f: Predicate<number> = (n) => n <= 2\n * const g: Predicate<number> = (n) => n >= 0\n *\n * const S1 = getSemigroup(B.SemigroupAll)<number>()\n *\n * assert.deepStrictEqual(S1.concat(f, g)(1), true)\n * assert.deepStrictEqual(S1.concat(f, g)(3), false)\n *\n * const S2 = getSemigroup(B.SemigroupAny)<number>()\n *\n * assert.deepStrictEqual(S2.concat(f, g)(1), true)\n * assert.deepStrictEqual(S2.concat(f, g)(3), true)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var getSemigroup = function (S) {\n    return function () { return ({\n        concat: function (f, g) { return function (a) { return S.concat(f(a), g(a)); }; }\n    }); };\n};\n/**\n * Unary functions form a monoid as long as you can provide a monoid for the codomain.\n *\n * @example\n * import { Predicate } from 'fp-ts/Predicate'\n * import { getMonoid } from 'fp-ts/function'\n * import * as B from 'fp-ts/boolean'\n *\n * const f: Predicate<number> = (n) => n <= 2\n * const g: Predicate<number> = (n) => n >= 0\n *\n * const M1 = getMonoid(B.MonoidAll)<number>()\n *\n * assert.deepStrictEqual(M1.concat(f, g)(1), true)\n * assert.deepStrictEqual(M1.concat(f, g)(3), false)\n *\n * const M2 = getMonoid(B.MonoidAny)<number>()\n *\n * assert.deepStrictEqual(M2.concat(f, g)(1), true)\n * assert.deepStrictEqual(M2.concat(f, g)(3), true)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var getMonoid = function (M) {\n    var getSemigroupM = getSemigroup(M);\n    return function () { return ({\n        concat: getSemigroupM().concat,\n        empty: function () { return M.empty; }\n    }); };\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var getSemiring = function (S) { return ({\n    add: function (f, g) { return function (x) { return S.add(f(x), g(x)); }; },\n    zero: function () { return S.zero; },\n    mul: function (f, g) { return function (x) { return S.mul(f(x), g(x)); }; },\n    one: function () { return S.one; }\n}); };\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var getRing = function (R) {\n    var S = getSemiring(R);\n    return {\n        add: S.add,\n        mul: S.mul,\n        one: S.one,\n        zero: S.zero,\n        sub: function (f, g) { return function (x) { return R.sub(f(x), g(x)); }; }\n    };\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nexport var apply = function (a) {\n    return function (f) {\n        return f(a);\n    };\n};\n/**\n * @since 2.0.0\n */\nexport function identity(a) {\n    return a;\n}\n/**\n * @since 2.0.0\n */\nexport var unsafeCoerce = identity;\n/**\n * @since 2.0.0\n */\nexport function constant(a) {\n    return function () { return a; };\n}\n/**\n * A thunk that returns always `true`.\n *\n * @since 2.0.0\n */\nexport var constTrue = /*#__PURE__*/ constant(true);\n/**\n * A thunk that returns always `false`.\n *\n * @since 2.0.0\n */\nexport var constFalse = /*#__PURE__*/ constant(false);\n/**\n * A thunk that returns always `null`.\n *\n * @since 2.0.0\n */\nexport var constNull = /*#__PURE__*/ constant(null);\n/**\n * A thunk that returns always `undefined`.\n *\n * @since 2.0.0\n */\nexport var constUndefined = /*#__PURE__*/ constant(undefined);\n/**\n * A thunk that returns always `void`.\n *\n * @since 2.0.0\n */\nexport var constVoid = constUndefined;\nexport function flip(f) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (args.length > 1) {\n            return f(args[1], args[0]);\n        }\n        return function (a) { return f(a)(args[0]); };\n    };\n}\nexport function flow(ab, bc, cd, de, ef, fg, gh, hi, ij) {\n    switch (arguments.length) {\n        case 1:\n            return ab;\n        case 2:\n            return function () {\n                return bc(ab.apply(this, arguments));\n            };\n        case 3:\n            return function () {\n                return cd(bc(ab.apply(this, arguments)));\n            };\n        case 4:\n            return function () {\n                return de(cd(bc(ab.apply(this, arguments))));\n            };\n        case 5:\n            return function () {\n                return ef(de(cd(bc(ab.apply(this, arguments)))));\n            };\n        case 6:\n            return function () {\n                return fg(ef(de(cd(bc(ab.apply(this, arguments))))));\n            };\n        case 7:\n            return function () {\n                return gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))));\n            };\n        case 8:\n            return function () {\n                return hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments))))))));\n            };\n        case 9:\n            return function () {\n                return ij(hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))))));\n            };\n    }\n    return;\n}\n/**\n * @since 2.0.0\n */\nexport function tuple() {\n    var t = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        t[_i] = arguments[_i];\n    }\n    return t;\n}\n/**\n * @since 2.0.0\n */\nexport function increment(n) {\n    return n + 1;\n}\n/**\n * @since 2.0.0\n */\nexport function decrement(n) {\n    return n - 1;\n}\n/**\n * @since 2.0.0\n */\nexport function absurd(_) {\n    throw new Error('Called `absurd` function which should be uncallable');\n}\n/**\n * Creates a tupled version of this function: instead of `n` arguments, it accepts a single tuple argument.\n *\n * @example\n * import { tupled } from 'fp-ts/function'\n *\n * const add = tupled((x: number, y: number): number => x + y)\n *\n * assert.strictEqual(add([1, 2]), 3)\n *\n * @since 2.4.0\n */\nexport function tupled(f) {\n    return function (a) { return f.apply(void 0, a); };\n}\n/**\n * Inverse function of `tupled`\n *\n * @since 2.4.0\n */\nexport function untupled(f) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return f(a);\n    };\n}\nexport function pipe(a, ab, bc, cd, de, ef, fg, gh, hi) {\n    switch (arguments.length) {\n        case 1:\n            return a;\n        case 2:\n            return ab(a);\n        case 3:\n            return bc(ab(a));\n        case 4:\n            return cd(bc(ab(a)));\n        case 5:\n            return de(cd(bc(ab(a))));\n        case 6:\n            return ef(de(cd(bc(ab(a)))));\n        case 7:\n            return fg(ef(de(cd(bc(ab(a))))));\n        case 8:\n            return gh(fg(ef(de(cd(bc(ab(a)))))));\n        case 9:\n            return hi(gh(fg(ef(de(cd(bc(ab(a))))))));\n        default: {\n            var ret = arguments[0];\n            for (var i = 1; i < arguments.length; i++) {\n                ret = arguments[i](ret);\n            }\n            return ret;\n        }\n    }\n}\n/**\n * Type hole simulation\n *\n * @since 2.7.0\n */\nexport var hole = absurd;\n/**\n * @since 2.11.0\n */\nexport var SK = function (_, b) { return b; };\n/**\n * Use `Predicate` module instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport function not(predicate) {\n    return function (a) { return !predicate(a); };\n}\n/**\n * Use `Endomorphism` module instead.\n *\n * @category zone of death\n * @since 2.10.0\n * @deprecated\n */\nexport var getEndomorphismMonoid = function () { return ({\n    concat: function (first, second) { return flow(first, second); },\n    empty: identity\n}); };\n", "var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\n// -------------------------------------------------------------------------------------\n// Option\n// -------------------------------------------------------------------------------------\n/** @internal */\nexport var isNone = function (fa) { return fa._tag === 'None'; };\n/** @internal */\nexport var isSome = function (fa) { return fa._tag === 'Some'; };\n/** @internal */\nexport var none = { _tag: 'None' };\n/** @internal */\nexport var some = function (a) { return ({ _tag: 'Some', value: a }); };\n// -------------------------------------------------------------------------------------\n// Either\n// -------------------------------------------------------------------------------------\n/** @internal */\nexport var isLeft = function (ma) { return ma._tag === 'Left'; };\n/** @internal */\nexport var isRight = function (ma) { return ma._tag === 'Right'; };\n/** @internal */\nexport var left = function (e) { return ({ _tag: 'Left', left: e }); };\n/** @internal */\nexport var right = function (a) { return ({ _tag: 'Right', right: a }); };\n// -------------------------------------------------------------------------------------\n// ReadonlyNonEmptyArray\n// -------------------------------------------------------------------------------------\n/** @internal */\nexport var singleton = function (a) { return [a]; };\n/** @internal */\nexport var isNonEmpty = function (as) { return as.length > 0; };\n/** @internal */\nexport var head = function (as) { return as[0]; };\n/** @internal */\nexport var tail = function (as) { return as.slice(1); };\n// -------------------------------------------------------------------------------------\n// empty\n// -------------------------------------------------------------------------------------\n/** @internal */\nexport var emptyReadonlyArray = [];\n/** @internal */\nexport var emptyRecord = {};\n// -------------------------------------------------------------------------------------\n// Record\n// -------------------------------------------------------------------------------------\n/** @internal */\nexport var has = Object.prototype.hasOwnProperty;\n// -------------------------------------------------------------------------------------\n// NonEmptyArray\n// -------------------------------------------------------------------------------------\n/** @internal */\nexport var fromReadonlyNonEmptyArray = function (as) { return __spreadArray([as[0]], as.slice(1), true); };\n", "import { tuple } from './function';\nimport * as _ from './internal';\nexport function ap(F, G) {\n    return function (fa) {\n        return function (fab) {\n            return F.ap(F.map(fab, function (gab) { return function (ga) { return G.ap(gab, ga); }; }), fa);\n        };\n    };\n}\nexport function apFirst(A) {\n    return function (second) { return function (first) {\n        return A.ap(A.map(first, function (a) { return function () { return a; }; }), second);\n    }; };\n}\nexport function apSecond(A) {\n    return function (second) {\n        return function (first) {\n            return A.ap(A.map(first, function () { return function (b) { return b; }; }), second);\n        };\n    };\n}\nexport function apS(F) {\n    return function (name, fb) {\n        return function (fa) {\n            return F.ap(F.map(fa, function (a) { return function (b) {\n                var _a;\n                return Object.assign({}, a, (_a = {}, _a[name] = b, _a));\n            }; }), fb);\n        };\n    };\n}\nexport function getApplySemigroup(F) {\n    return function (S) { return ({\n        concat: function (first, second) {\n            return F.ap(F.map(first, function (x) { return function (y) { return S.concat(x, y); }; }), second);\n        }\n    }); };\n}\nfunction curried(f, n, acc) {\n    return function (x) {\n        var combined = Array(acc.length + 1);\n        for (var i = 0; i < acc.length; i++) {\n            combined[i] = acc[i];\n        }\n        combined[acc.length] = x;\n        return n === 0 ? f.apply(null, combined) : curried(f, n - 1, combined);\n    };\n}\nvar tupleConstructors = {\n    1: function (a) { return [a]; },\n    2: function (a) { return function (b) { return [a, b]; }; },\n    3: function (a) { return function (b) { return function (c) { return [a, b, c]; }; }; },\n    4: function (a) { return function (b) { return function (c) { return function (d) { return [a, b, c, d]; }; }; }; },\n    5: function (a) { return function (b) { return function (c) { return function (d) { return function (e) { return [a, b, c, d, e]; }; }; }; }; }\n};\nfunction getTupleConstructor(len) {\n    if (!_.has.call(tupleConstructors, len)) {\n        tupleConstructors[len] = curried(tuple, len - 1, []);\n    }\n    return tupleConstructors[len];\n}\nexport function sequenceT(F) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var len = args.length;\n        var f = getTupleConstructor(len);\n        var fas = F.map(args[0], f);\n        for (var i = 1; i < len; i++) {\n            fas = F.ap(fas, args[i]);\n        }\n        return fas;\n    };\n}\nfunction getRecordConstructor(keys) {\n    var len = keys.length;\n    switch (len) {\n        case 1:\n            return function (a) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a);\n            };\n        case 2:\n            return function (a) { return function (b) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a[keys[1]] = b, _a);\n            }; };\n        case 3:\n            return function (a) { return function (b) { return function (c) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a[keys[1]] = b, _a[keys[2]] = c, _a);\n            }; }; };\n        case 4:\n            return function (a) { return function (b) { return function (c) { return function (d) {\n                var _a;\n                return (_a = {},\n                    _a[keys[0]] = a,\n                    _a[keys[1]] = b,\n                    _a[keys[2]] = c,\n                    _a[keys[3]] = d,\n                    _a);\n            }; }; }; };\n        case 5:\n            return function (a) { return function (b) { return function (c) { return function (d) { return function (e) {\n                var _a;\n                return (_a = {},\n                    _a[keys[0]] = a,\n                    _a[keys[1]] = b,\n                    _a[keys[2]] = c,\n                    _a[keys[3]] = d,\n                    _a[keys[4]] = e,\n                    _a);\n            }; }; }; }; };\n        default:\n            return curried(function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var r = {};\n                for (var i = 0; i < len; i++) {\n                    r[keys[i]] = args[i];\n                }\n                return r;\n            }, len - 1, []);\n    }\n}\nexport function sequenceS(F) {\n    return function (r) {\n        var keys = Object.keys(r);\n        var len = keys.length;\n        var f = getRecordConstructor(keys);\n        var fr = F.map(r[keys[0]], f);\n        for (var i = 1; i < len; i++) {\n            fr = F.ap(fr, r[keys[i]]);\n        }\n        return fr;\n    };\n}\n", "/**\n * A `Functor` is a type constructor which supports a mapping operation `map`.\n *\n * `map` can be used to turn functions `a -> b` into functions `f a -> f b` whose argument and return types use the type\n * constructor `f` to represent some computational context.\n *\n * Instances must satisfy the following laws:\n *\n * 1. Identity: `F.map(fa, a => a) <-> fa`\n * 2. Composition: `F.map(fa, a => bc(ab(a))) <-> F.map(F.map(fa, ab), bc)`\n *\n * @since 2.0.0\n */\nimport { pipe } from './function';\nexport function map(F, G) {\n    return function (f) { return function (fa) { return F.map(fa, function (ga) { return G.map(ga, f); }); }; };\n}\nexport function flap(F) {\n    return function (a) { return function (fab) { return F.map(fab, function (f) { return f(a); }); }; };\n}\nexport function bindTo(F) {\n    return function (name) { return function (fa) { return F.map(fa, function (a) {\n        var _a;\n        return (_a = {}, _a[name] = a, _a);\n    }); }; };\n}\nfunction let_(F) {\n    return function (name, f) { return function (fa) { return F.map(fa, function (a) {\n        var _a;\n        return Object.assign({}, a, (_a = {}, _a[name] = f(a), _a));\n    }); }; };\n}\nexport { \n/**\n * @since 2.13.0\n */\nlet_ as let };\n/** @deprecated */\nexport function getFunctorComposition(F, G) {\n    var _map = map(F, G);\n    return {\n        map: function (fga, f) { return pipe(fga, _map(f)); }\n    };\n}\n", "/**\n * The `Applicative` type class extends the `Apply` type class with a `of` function, which can be used to create values\n * of type `f a` from values of type `a`.\n *\n * Where `Apply` provides the ability to lift functions of two or more arguments to functions whose arguments are\n * wrapped using `f`, and `Functor` provides the ability to lift functions of one argument, `pure` can be seen as the\n * function which lifts functions of _zero_ arguments. That is, `Applicative` functors support a lifting operation for\n * any number of function arguments.\n *\n * Instances must satisfy the following laws in addition to the `Apply` laws:\n *\n * 1. Identity: `A.ap(A.of(a => a), fa) <-> fa`\n * 2. Homomorphism: `A.ap(A.of(ab), A.of(a)) <-> A.of(ab(a))`\n * 3. Interchange: `A.ap(fab, A.of(a)) <-> A.ap(A.of(ab => ab(a)), fab)`\n *\n * Note. `Functor`'s `map` can be derived: `A.map(x, f) = A.ap(A.of(f), x)`\n *\n * @since 2.0.0\n */\nimport { ap, getApplySemigroup } from './Apply';\nimport { pipe } from './function';\nimport { getFunctorComposition } from './Functor';\nexport function getApplicativeMonoid(F) {\n    var f = getApplySemigroup(F);\n    return function (M) { return ({\n        concat: f(M).concat,\n        empty: F.of(M.empty)\n    }); };\n}\n/** @deprecated */\nexport function getApplicativeComposition(F, G) {\n    var map = getFunctorComposition(F, G).map;\n    var _ap = ap(F, G);\n    return {\n        map: map,\n        of: function (a) { return F.of(G.of(a)); },\n        ap: function (fgab, fga) { return pipe(fgab, _ap(fga)); }\n    };\n}\n", "export function chainFirst(M) {\n    return function (f) { return function (first) { return M.chain(first, function (a) { return M.map(f(a), function () { return a; }); }); }; };\n}\nexport function bind(M) {\n    return function (name, f) { return function (ma) { return M.chain(ma, function (a) { return M.map(f(a), function (b) {\n        var _a;\n        return Object.assign({}, a, (_a = {}, _a[name] = b, _a));\n    }); }); }; };\n}\n", "/**\n * @since 2.0.0\n */\nexport var tailRec = function (startWith, f) {\n    var ab = f(startWith);\n    while (ab._tag === 'Left') {\n        ab = f(ab.left);\n    }\n    return ab.right;\n};\n", "/**\n * The `FromEither` type class represents those data types which support errors.\n *\n * @since 2.10.0\n */\nimport { chainFirst } from './Chain';\nimport { flow } from './function';\nimport * as _ from './internal';\nexport function fromOption(F) {\n    return function (onNone) { return function (ma) { return F.fromEither(_.isNone(ma) ? _.left(onNone()) : _.right(ma.value)); }; };\n}\nexport function fromPredicate(F) {\n    return function (predicate, onFalse) {\n        return function (a) {\n            return F.fromEither(predicate(a) ? _.right(a) : _.left(onFalse(a)));\n        };\n    };\n}\nexport function fromOptionK(F) {\n    var fromOptionF = fromOption(F);\n    return function (onNone) {\n        var from = fromOptionF(onNone);\n        return function (f) { return flow(f, from); };\n    };\n}\nexport function chainOptionK(F, M) {\n    var fromOptionKF = fromOptionK(F);\n    return function (onNone) {\n        var from = fromOptionKF(onNone);\n        return function (f) { return function (ma) { return M.chain(ma, from(f)); }; };\n    };\n}\nexport function fromEitherK(F) {\n    return function (f) { return flow(f, F.fromEither); };\n}\nexport function chainEitherK(F, M) {\n    var fromEitherKF = fromEitherK(F);\n    return function (f) { return function (ma) { return M.chain(ma, fromEitherKF(f)); }; };\n}\nexport function chainFirstEitherK(F, M) {\n    return flow(fromEitherK(F), chainFirst(M));\n}\nexport function filterOrElse(F, M) {\n    return function (predicate, onFalse) {\n        return function (ma) {\n            return M.chain(ma, function (a) { return F.fromEither(predicate(a) ? _.right(a) : _.left(onFalse(a))); });\n        };\n    };\n}\n", "/**\n * ```ts\n * interface Separated<E, A> {\n *    readonly left: E\n *    readonly right: A\n * }\n * ```\n *\n * Represents a result of separating a whole into two parts.\n *\n * @since 2.10.0\n */\nimport { pipe } from './function';\nimport { flap as flap_ } from './Functor';\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.10.0\n */\nexport var separated = function (left, right) { return ({ left: left, right: right }); };\nvar _map = function (fa, f) { return pipe(fa, map(f)); };\nvar _mapLeft = function (fa, f) { return pipe(fa, mapLeft(f)); };\nvar _bimap = function (fa, g, f) { return pipe(fa, bimap(g, f)); };\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category mapping\n * @since 2.10.0\n */\nexport var map = function (f) {\n    return function (fa) {\n        return separated(left(fa), f(right(fa)));\n    };\n};\n/**\n * Map a function over the first type argument of a bifunctor.\n *\n * @category error handling\n * @since 2.10.0\n */\nexport var mapLeft = function (f) {\n    return function (fa) {\n        return separated(f(left(fa)), right(fa));\n    };\n};\n/**\n * Map a pair of functions over the two type arguments of the bifunctor.\n *\n * @category mapping\n * @since 2.10.0\n */\nexport var bimap = function (f, g) {\n    return function (fa) {\n        return separated(f(left(fa)), g(right(fa)));\n    };\n};\n/**\n * @category type lambdas\n * @since 2.10.0\n */\nexport var URI = 'Separated';\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Bifunctor = {\n    URI: URI,\n    mapLeft: _mapLeft,\n    bimap: _bimap\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Functor = {\n    URI: URI,\n    map: _map\n};\n/**\n * @category mapping\n * @since 2.10.0\n */\nexport var flap = /*#__PURE__*/ flap_(Functor);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.10.0\n */\nexport var left = function (s) { return s.left; };\n/**\n * @since 2.10.0\n */\nexport var right = function (s) { return s.right; };\n", "import * as _ from './internal';\nexport function wiltDefault(T, C) {\n    return function (F) {\n        var traverseF = T.traverse(F);\n        return function (wa, f) { return F.map(traverseF(wa, f), C.separate); };\n    };\n}\nexport function witherDefault(T, C) {\n    return function (F) {\n        var traverseF = T.traverse(F);\n        return function (wa, f) { return F.map(traverseF(wa, f), C.compact); };\n    };\n}\nexport function filterE(W) {\n    return function (F) {\n        var witherF = W.wither(F);\n        return function (predicate) { return function (ga) { return witherF(ga, function (a) { return F.map(predicate(a), function (b) { return (b ? _.some(a) : _.none); }); }); }; };\n    };\n}\n", "import { getApplicativeMonoid } from './Applicative';\nimport { apFirst as apFirst_, apS as apS_, apSecond as apSecond_, getApplySemigroup as getApplySemigroup_ } from './Apply';\nimport { bind as bind_, chainFirst as chainFirst_ } from './Chain';\nimport { tailRec } from './ChainRec';\nimport { chainOptionK as chainOptionK_, filterOrElse as filterOrElse_, fromOption as fromOption_, fromOptionK as fromOptionK_, fromPredicate as fromPredicate_ } from './FromEither';\nimport { flow, identity, pipe } from './function';\nimport { bindTo as bindTo_, flap as flap_, let as let__ } from './Functor';\nimport * as _ from './internal';\nimport { separated } from './Separated';\nimport { wiltDefault, witherDefault } from './Witherable';\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Constructs a new `Either` holding a `Left` value. This usually represents a failure, due to the right-bias of this\n * structure.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var left = _.left;\n/**\n * Constructs a new `Either` holding a `Right` value. This usually represents a successful value due to the right bias\n * of this structure.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var right = _.right;\nvar _map = function (fa, f) { return pipe(fa, map(f)); };\nvar _ap = function (fab, fa) { return pipe(fab, ap(fa)); };\n/* istanbul ignore next */\nvar _chain = function (ma, f) { return pipe(ma, chain(f)); };\n/* istanbul ignore next */\nvar _reduce = function (fa, b, f) { return pipe(fa, reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) { return function (fa, f) {\n    var foldMapM = foldMap(M);\n    return pipe(fa, foldMapM(f));\n}; };\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return pipe(fa, reduceRight(b, f)); };\nvar _traverse = function (F) {\n    var traverseF = traverse(F);\n    return function (ta, f) { return pipe(ta, traverseF(f)); };\n};\nvar _bimap = function (fa, f, g) { return pipe(fa, bimap(f, g)); };\nvar _mapLeft = function (fa, f) { return pipe(fa, mapLeft(f)); };\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return pipe(fa, alt(that)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return pipe(wa, extend(f)); };\nvar _chainRec = function (a, f) {\n    return tailRec(f(a), function (e) {\n        return isLeft(e) ? right(left(e.left)) : isLeft(e.right) ? left(f(e.right.left)) : right(right(e.right.right));\n    });\n};\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexport var URI = 'Either';\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var getShow = function (SE, SA) { return ({\n    show: function (ma) { return (isLeft(ma) ? \"left(\".concat(SE.show(ma.left), \")\") : \"right(\".concat(SA.show(ma.right), \")\")); }\n}); };\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var getEq = function (EL, EA) { return ({\n    equals: function (x, y) {\n        return x === y || (isLeft(x) ? isLeft(y) && EL.equals(x.left, y.left) : isRight(y) && EA.equals(x.right, y.right));\n    }\n}); };\n/**\n * Semigroup returning the left-most non-`Left` value. If both operands are `Right`s then the inner values are\n * concatenated using the provided `Semigroup`\n *\n * @example\n * import { getSemigroup, left, right } from 'fp-ts/Either'\n * import { SemigroupSum } from 'fp-ts/number'\n *\n * const S = getSemigroup<string, number>(SemigroupSum)\n * assert.deepStrictEqual(S.concat(left('a'), left('b')), left('a'))\n * assert.deepStrictEqual(S.concat(left('a'), right(2)), right(2))\n * assert.deepStrictEqual(S.concat(right(1), left('b')), right(1))\n * assert.deepStrictEqual(S.concat(right(1), right(2)), right(3))\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getSemigroup = function (S) { return ({\n    concat: function (x, y) { return (isLeft(y) ? x : isLeft(x) ? y : right(S.concat(x.right, y.right))); }\n}); };\n/**\n * Builds a `Compactable` instance for `Either` given `Monoid` for the left side.\n *\n * @category filtering\n * @since 2.10.0\n */\nexport var getCompactable = function (M) {\n    var empty = left(M.empty);\n    return {\n        URI: URI,\n        _E: undefined,\n        compact: function (ma) { return (isLeft(ma) ? ma : ma.right._tag === 'None' ? empty : right(ma.right.value)); },\n        separate: function (ma) {\n            return isLeft(ma)\n                ? separated(ma, ma)\n                : isLeft(ma.right)\n                    ? separated(right(ma.right.left), empty)\n                    : separated(empty, right(ma.right.right));\n        }\n    };\n};\n/**\n * Builds a `Filterable` instance for `Either` given `Monoid` for the left side\n *\n * @category filtering\n * @since 2.10.0\n */\nexport var getFilterable = function (M) {\n    var empty = left(M.empty);\n    var _a = getCompactable(M), compact = _a.compact, separate = _a.separate;\n    var filter = function (ma, predicate) {\n        return isLeft(ma) ? ma : predicate(ma.right) ? ma : empty;\n    };\n    var partition = function (ma, p) {\n        return isLeft(ma)\n            ? separated(ma, ma)\n            : p(ma.right)\n                ? separated(empty, right(ma.right))\n                : separated(right(ma.right), empty);\n    };\n    return {\n        URI: URI,\n        _E: undefined,\n        map: _map,\n        compact: compact,\n        separate: separate,\n        filter: filter,\n        filterMap: function (ma, f) {\n            if (isLeft(ma)) {\n                return ma;\n            }\n            var ob = f(ma.right);\n            return ob._tag === 'None' ? empty : right(ob.value);\n        },\n        partition: partition,\n        partitionMap: function (ma, f) {\n            if (isLeft(ma)) {\n                return separated(ma, ma);\n            }\n            var e = f(ma.right);\n            return isLeft(e) ? separated(right(e.left), empty) : separated(empty, right(e.right));\n        }\n    };\n};\n/**\n * Builds `Witherable` instance for `Either` given `Monoid` for the left side\n *\n * @category filtering\n * @since 2.0.0\n */\nexport var getWitherable = function (M) {\n    var F_ = getFilterable(M);\n    var C = getCompactable(M);\n    return {\n        URI: URI,\n        _E: undefined,\n        map: _map,\n        compact: F_.compact,\n        separate: F_.separate,\n        filter: F_.filter,\n        filterMap: F_.filterMap,\n        partition: F_.partition,\n        partitionMap: F_.partitionMap,\n        traverse: _traverse,\n        sequence: sequence,\n        reduce: _reduce,\n        foldMap: _foldMap,\n        reduceRight: _reduceRight,\n        wither: witherDefault(Traversable, C),\n        wilt: wiltDefault(Traversable, C)\n    };\n};\n/**\n * The default [`Applicative`](#applicative) instance returns the first error, if you want to\n * get all errors you need to provide a way to concatenate them via a `Semigroup`.\n *\n * @example\n * import * as A from 'fp-ts/Apply'\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import * as S from 'fp-ts/Semigroup'\n * import * as string from 'fp-ts/string'\n *\n * const parseString = (u: unknown): E.Either<string, string> =>\n *   typeof u === 'string' ? E.right(u) : E.left('not a string')\n *\n * const parseNumber = (u: unknown): E.Either<string, number> =>\n *   typeof u === 'number' ? E.right(u) : E.left('not a number')\n *\n * interface Person {\n *   readonly name: string\n *   readonly age: number\n * }\n *\n * const parsePerson = (\n *   input: Record<string, unknown>\n * ): E.Either<string, Person> =>\n *   pipe(\n *     E.Do,\n *     E.apS('name', parseString(input.name)),\n *     E.apS('age', parseNumber(input.age))\n *   )\n *\n * assert.deepStrictEqual(parsePerson({}), E.left('not a string')) // <= first error\n *\n * const Applicative = E.getApplicativeValidation(\n *   pipe(string.Semigroup, S.intercalate(', '))\n * )\n *\n * const apS = A.apS(Applicative)\n *\n * const parsePersonAll = (\n *   input: Record<string, unknown>\n * ): E.Either<string, Person> =>\n *   pipe(\n *     E.Do,\n *     apS('name', parseString(input.name)),\n *     apS('age', parseNumber(input.age))\n *   )\n *\n * assert.deepStrictEqual(parsePersonAll({}), E.left('not a string, not a number')) // <= all errors\n *\n * @category error handling\n * @since 2.7.0\n */\nexport var getApplicativeValidation = function (SE) { return ({\n    URI: URI,\n    _E: undefined,\n    map: _map,\n    ap: function (fab, fa) {\n        return isLeft(fab)\n            ? isLeft(fa)\n                ? left(SE.concat(fab.left, fa.left))\n                : fab\n            : isLeft(fa)\n                ? fa\n                : right(fab.right(fa.right));\n    },\n    of: of\n}); };\n/**\n * The default [`Alt`](#alt) instance returns the last error, if you want to\n * get all errors you need to provide a way to concatenate them via a `Semigroup`.\n *\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import * as S from 'fp-ts/Semigroup'\n * import * as string from 'fp-ts/string'\n *\n * const parseString = (u: unknown): E.Either<string, string> =>\n *   typeof u === 'string' ? E.right(u) : E.left('not a string')\n *\n * const parseNumber = (u: unknown): E.Either<string, number> =>\n *   typeof u === 'number' ? E.right(u) : E.left('not a number')\n *\n * const parse = (u: unknown): E.Either<string, string | number> =>\n *   pipe(\n *     parseString(u),\n *     E.alt<string, string | number>(() => parseNumber(u))\n *   )\n *\n * assert.deepStrictEqual(parse(true), E.left('not a number')) // <= last error\n *\n * const Alt = E.getAltValidation(pipe(string.Semigroup, S.intercalate(', ')))\n *\n * const parseAll = (u: unknown): E.Either<string, string | number> =>\n *   Alt.alt<string | number>(parseString(u), () => parseNumber(u))\n *\n * assert.deepStrictEqual(parseAll(true), E.left('not a string, not a number')) // <= all errors\n *\n * @category error handling\n * @since 2.7.0\n */\nexport var getAltValidation = function (SE) { return ({\n    URI: URI,\n    _E: undefined,\n    map: _map,\n    alt: function (me, that) {\n        if (isRight(me)) {\n            return me;\n        }\n        var ea = that();\n        return isLeft(ea) ? left(SE.concat(me.left, ea.left)) : ea;\n    }\n}); };\n/**\n * @category mapping\n * @since 2.0.0\n */\nexport var map = function (f) { return function (fa) {\n    return isLeft(fa) ? fa : right(f(fa.right));\n}; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: _map\n};\n/**\n * @category constructors\n * @since 2.7.0\n */\nexport var of = right;\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Pointed = {\n    URI: URI,\n    of: of\n};\n/**\n * Less strict version of [`ap`](#ap).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @since 2.8.0\n */\nexport var apW = function (fa) { return function (fab) {\n    return isLeft(fab) ? fab : isLeft(fa) ? fa : right(fab.right(fa.right));\n}; };\n/**\n * @since 2.0.0\n */\nexport var ap = apW;\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Apply = {\n    URI: URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of\n};\n/**\n * Less strict version of [`chain`](#chain).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * const e1: E.Either<string, number> = E.right(1)\n * const e2: E.Either<number, number> = E.right(2)\n *\n * export const result1 = pipe(\n *   // @ts-expect-error\n *   e1,\n *   E.chain(() => e2)\n * )\n *\n * // merged error types -----v-------------v\n * // const result2: E.Either<string | number, number>\n * export const result2 = pipe(\n *   e1, // no error\n *   E.chainW(() => e2)\n * )\n *\n * @category sequencing\n * @since 2.6.0\n */\nexport var chainW = function (f) {\n    return function (ma) {\n        return isLeft(ma) ? ma : f(ma.right);\n    };\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category sequencing\n * @since 2.0.0\n */\nexport var chain = chainW;\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Chain = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain\n};\n/**\n * Left-associative fold of a structure.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n *\n * const startWith = 'prefix'\n * const concat = (a: string, b: string) => `${a}:${b}`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.reduce(startWith, concat)),\n *   'prefix:a'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.reduce(startWith, concat)),\n *   'prefix'\n * )\n *\n * @category folding\n * @since 2.0.0\n */\nexport var reduce = function (b, f) { return function (fa) {\n    return isLeft(fa) ? b : f(b, fa.right);\n}; };\n/**\n * Map each element of the structure to a monoid, and combine the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n * import * as S from 'fp-ts/string'\n *\n * const yell = (a: string) => `${a}!`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.foldMap(S.Monoid)(yell)),\n *   'a!'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.foldMap(S.Monoid)(yell)),\n *   S.Monoid.empty\n * )\n *\n * @category folding\n * @since 2.0.0\n */\nexport var foldMap = function (M) { return function (f) { return function (fa) {\n    return isLeft(fa) ? M.empty : f(fa.right);\n}; }; };\n/**\n * Right-associative fold of a structure.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n *\n * const startWith = 'postfix'\n * const concat = (a: string, b: string) => `${a}:${b}`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.reduceRight(startWith, concat)),\n *   'a:postfix'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.reduceRight(startWith, concat)),\n *   'postfix'\n * )\n *\n * @category folding\n * @since 2.0.0\n */\nexport var reduceRight = function (b, f) { return function (fa) {\n    return isLeft(fa) ? b : f(fa.right, b);\n}; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * Map each element of a structure to an action, evaluate these actions from left to right, and collect the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as E from 'fp-ts/Either'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(['a']), E.traverse(O.Applicative)(RA.head)),\n *   O.some(E.right('a'))\n *  )\n *\n * assert.deepStrictEqual(\n *   pipe(E.right([]), E.traverse(O.Applicative)(RA.head)),\n *   O.none\n * )\n *\n * @category traversing\n * @since 2.6.3\n */\nexport var traverse = function (F) {\n    return function (f) {\n        return function (ta) {\n            return isLeft(ta) ? F.of(left(ta.left)) : F.map(f(ta.right), right);\n        };\n    };\n};\n/**\n * Evaluate each monadic action in the structure from left to right, and collect the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(O.some('a')), E.sequence(O.Applicative)),\n *   O.some(E.right('a'))\n *  )\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(O.none), E.sequence(O.Applicative)),\n *   O.none\n * )\n *\n * @category traversing\n * @since 2.6.3\n */\nexport var sequence = function (F) {\n    return function (ma) {\n        return isLeft(ma) ? F.of(left(ma.left)) : F.map(ma.right, right);\n    };\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n    URI: URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence\n};\n/**\n * Map a pair of functions over the two type arguments of the bifunctor.\n *\n * @category mapping\n * @since 2.0.0\n */\nexport var bimap = function (f, g) { return function (fa) {\n    return isLeft(fa) ? left(f(fa.left)) : right(g(fa.right));\n}; };\n/**\n * Map a function over the first type argument of a bifunctor.\n *\n * @category error handling\n * @since 2.0.0\n */\nexport var mapLeft = function (f) { return function (fa) {\n    return isLeft(fa) ? left(f(fa.left)) : fa;\n}; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Bifunctor = {\n    URI: URI,\n    bimap: _bimap,\n    mapLeft: _mapLeft\n};\n/**\n * Less strict version of [`alt`](#alt).\n *\n * The `W` suffix (short for **W**idening) means that the error and the return types will be merged.\n *\n * @category error handling\n * @since 2.9.0\n */\nexport var altW = function (that) { return function (fa) {\n    return isLeft(fa) ? that() : fa;\n}; };\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `Either` returns the left-most non-`Left` value (or the right-most `Left` value if both values are `Left`).\n *\n * | x        | y        | pipe(x, alt(() => y) |\n * | -------- | -------- | -------------------- |\n * | left(a)  | left(b)  | left(b)              |\n * | left(a)  | right(2) | right(2)             |\n * | right(1) | left(b)  | right(1)             |\n * | right(1) | right(2) | right(1)             |\n *\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     E.left('a'),\n *     E.alt(() => E.left('b'))\n *   ),\n *   E.left('b')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.left('a'),\n *     E.alt(() => E.right(2))\n *   ),\n *   E.right(2)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.right(1),\n *     E.alt(() => E.left('b'))\n *   ),\n *   E.right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.right(1),\n *     E.alt(() => E.right(2))\n *   ),\n *   E.right(1)\n * )\n *\n * @category error handling\n * @since 2.0.0\n */\nexport var alt = altW;\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n    URI: URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @since 2.0.0\n */\nexport var extend = function (f) { return function (wa) {\n    return isLeft(wa) ? wa : right(f(wa));\n}; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Extend = {\n    URI: URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var ChainRec = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: _chainRec\n};\n/**\n * @since 2.6.3\n */\nexport var throwError = left;\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var MonadThrow = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain,\n    throwError: throwError\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var FromEither = {\n    URI: URI,\n    fromEither: identity\n};\n/**\n * @example\n * import { fromPredicate, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     1,\n *     fromPredicate(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     -1,\n *     fromPredicate(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   left('error')\n * )\n *\n * @category lifting\n * @since 2.0.0\n */\nexport var fromPredicate = /*#__PURE__*/ fromPredicate_(FromEither);\n// -------------------------------------------------------------------------------------\n// conversions\n// -------------------------------------------------------------------------------------\n/**\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     O.some(1),\n *     E.fromOption(() => 'error')\n *   ),\n *   E.right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     O.none,\n *     E.fromOption(() => 'error')\n *   ),\n *   E.left('error')\n * )\n *\n * @category conversions\n * @since 2.0.0\n */\nexport var fromOption = \n/*#__PURE__*/ fromOption_(FromEither);\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * Returns `true` if the either is an instance of `Left`, `false` otherwise.\n *\n * @category refinements\n * @since 2.0.0\n */\nexport var isLeft = _.isLeft;\n/**\n * Returns `true` if the either is an instance of `Right`, `false` otherwise.\n *\n * @category refinements\n * @since 2.0.0\n */\nexport var isRight = _.isRight;\n/**\n * Less strict version of [`match`](#match).\n *\n * The `W` suffix (short for **W**idening) means that the handler return types will be merged.\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexport var matchW = function (onLeft, onRight) {\n    return function (ma) {\n        return isLeft(ma) ? onLeft(ma.left) : onRight(ma.right);\n    };\n};\n/**\n * Alias of [`matchW`](#matchw).\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexport var foldW = matchW;\n/**\n * Takes two functions and an `Either` value, if the value is a `Left` the inner value is applied to the first function,\n * if the value is a `Right` the inner value is applied to the second function.\n *\n * @example\n * import { match, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * function onLeft(errors: Array<string>): string {\n *   return `Errors: ${errors.join(', ')}`\n * }\n *\n * function onRight(value: number): string {\n *   return `Ok: ${value}`\n * }\n *\n * assert.strictEqual(\n *   pipe(\n *     right(1),\n *     match(onLeft, onRight)\n *   ),\n *   'Ok: 1'\n * )\n * assert.strictEqual(\n *   pipe(\n *     left(['error 1', 'error 2']),\n *     match(onLeft, onRight)\n *   ),\n *   'Errors: error 1, error 2'\n * )\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexport var match = matchW;\n/**\n * Alias of [`match`](#match).\n *\n * @category pattern matching\n * @since 2.0.0\n */\nexport var fold = match;\n/**\n * Less strict version of [`getOrElse`](#getorelse).\n *\n * The `W` suffix (short for **W**idening) means that the handler return type will be merged.\n *\n * @category error handling\n * @since 2.6.0\n */\nexport var getOrElseW = function (onLeft) {\n    return function (ma) {\n        return isLeft(ma) ? onLeft(ma.left) : ma.right;\n    };\n};\n/**\n * Returns the wrapped value if it's a `Right` or a default value if is a `Left`.\n *\n * @example\n * import { getOrElse, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     right(1),\n *     getOrElse(() => 0)\n *   ),\n *   1\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     left('error'),\n *     getOrElse(() => 0)\n *   ),\n *   0\n * )\n *\n * @category error handling\n * @since 2.0.0\n */\nexport var getOrElse = getOrElseW;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category mapping\n * @since 2.10.0\n */\nexport var flap = /*#__PURE__*/ flap_(Functor);\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * @since 2.0.0\n */\nexport var apFirst = /*#__PURE__*/ apFirst_(Apply);\n/**\n * Less strict version of [`apFirst`](#apfirst)\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @since 2.12.0\n */\nexport var apFirstW = apFirst;\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * @since 2.0.0\n */\nexport var apSecond = /*#__PURE__*/ apSecond_(Apply);\n/**\n * Less strict version of [`apSecond`](#apsecond)\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @since 2.12.0\n */\nexport var apSecondW = apSecond;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @category sequencing\n * @since 2.0.0\n */\nexport var chainFirst = \n/*#__PURE__*/ chainFirst_(Chain);\n/**\n * Less strict version of [`chainFirst`](#chainfirst)\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category sequencing\n * @since 2.8.0\n */\nexport var chainFirstW = chainFirst;\n/**\n * Less strict version of [`flatten`](#flatten).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category sequencing\n * @since 2.11.0\n */\nexport var flattenW = \n/*#__PURE__*/ chainW(identity);\n/**\n * The `flatten` function is the conventional monad join operator. It is used to remove one level of monadic structure, projecting its bound argument into the outer level.\n *\n * @example\n * import * as E from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(E.flatten(E.right(E.right('a'))), E.right('a'))\n * assert.deepStrictEqual(E.flatten(E.right(E.left('e'))), E.left('e'))\n * assert.deepStrictEqual(E.flatten(E.left('e')), E.left('e'))\n *\n * @category sequencing\n * @since 2.0.0\n */\nexport var flatten = flattenW;\n/**\n * @since 2.0.0\n */\nexport var duplicate = /*#__PURE__*/ extend(identity);\n/**\n * @category lifting\n * @since 2.10.0\n */\nexport var fromOptionK = \n/*#__PURE__*/ fromOptionK_(FromEither);\n/**\n * @category sequencing\n * @since 2.11.0\n */\nexport var chainOptionK = /*#__PURE__*/ chainOptionK_(FromEither, Chain);\n/**\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     E.right(1),\n *     E.filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   E.right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.right(-1),\n *     E.filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   E.left('error')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.left('a'),\n *     E.filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   E.left('a')\n * )\n *\n * @category filtering\n * @since 2.0.0\n */\nexport var filterOrElse = /*#__PURE__*/ filterOrElse_(FromEither, Chain);\n/**\n * Less strict version of [`filterOrElse`](#filterorelse).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category filtering\n * @since 2.9.0\n */\nexport var filterOrElseW = filterOrElse;\n/**\n * Returns a `Right` if is a `Left` (and vice versa).\n *\n * @since 2.0.0\n */\nexport var swap = function (ma) { return (isLeft(ma) ? right(ma.left) : left(ma.right)); };\n/**\n * Less strict version of [`orElse`](#orelse).\n *\n * The `W` suffix (short for **W**idening) means that the return types will be merged.\n *\n * @category error handling\n * @since 2.10.0\n */\nexport var orElseW = function (onLeft) {\n    return function (ma) {\n        return isLeft(ma) ? onLeft(ma.left) : ma;\n    };\n};\n/**\n * Useful for recovering from errors.\n *\n * @category error handling\n * @since 2.0.0\n */\nexport var orElse = orElseW;\n/**\n * Takes a default and a nullable value, if the value is not nully, turn it into a `Right`, if the value is nully use\n * the provided default as a `Left`.\n *\n * @example\n * import { fromNullable, left, right } from 'fp-ts/Either'\n *\n * const parse = fromNullable('nully')\n *\n * assert.deepStrictEqual(parse(1), right(1))\n * assert.deepStrictEqual(parse(null), left('nully'))\n *\n * @category conversions\n * @since 2.0.0\n */\nexport var fromNullable = function (e) {\n    return function (a) {\n        return a == null ? left(e) : right(a);\n    };\n};\n/**\n * Constructs a new `Either` from a function that might throw.\n *\n * See also [`tryCatchK`](#trycatchk).\n *\n * @example\n * import * as E from 'fp-ts/Either'\n *\n * const unsafeHead = <A>(as: ReadonlyArray<A>): A => {\n *   if (as.length > 0) {\n *     return as[0]\n *   } else {\n *     throw new Error('empty array')\n *   }\n * }\n *\n * const head = <A>(as: ReadonlyArray<A>): E.Either<Error, A> =>\n *   E.tryCatch(() => unsafeHead(as), e => (e instanceof Error ? e : new Error('unknown error')))\n *\n * assert.deepStrictEqual(head([]), E.left(new Error('empty array')))\n * assert.deepStrictEqual(head([1, 2, 3]), E.right(1))\n *\n * @category interop\n * @since 2.0.0\n */\nexport var tryCatch = function (f, onThrow) {\n    try {\n        return right(f());\n    }\n    catch (e) {\n        return left(onThrow(e));\n    }\n};\n/**\n * Converts a function that may throw to one returning a `Either`.\n *\n * @category interop\n * @since 2.10.0\n */\nexport var tryCatchK = function (f, onThrow) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return tryCatch(function () { return f.apply(void 0, a); }, onThrow);\n    };\n};\n/**\n * @category lifting\n * @since 2.9.0\n */\nexport var fromNullableK = function (e) {\n    var from = fromNullable(e);\n    return function (f) { return flow(f, from); };\n};\n/**\n * @category sequencing\n * @since 2.9.0\n */\nexport var chainNullableK = function (e) {\n    var from = fromNullableK(e);\n    return function (f) { return chain(from(f)); };\n};\n/**\n * @category conversions\n * @since 2.10.0\n */\nexport var toUnion = /*#__PURE__*/ foldW(identity, identity);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Default value for the `onError` argument of `tryCatch`\n *\n * @since 2.0.0\n */\nexport function toError(e) {\n    return e instanceof Error ? e : new Error(String(e));\n}\nexport function elem(E) {\n    return function (a, ma) {\n        if (ma === undefined) {\n            var elemE_1 = elem(E);\n            return function (ma) { return elemE_1(a, ma); };\n        }\n        return isLeft(ma) ? false : E.equals(a, ma.right);\n    };\n}\n/**\n * Returns `false` if `Left` or returns the result of the application of the given predicate to the `Right` value.\n *\n * @example\n * import { exists, left, right } from 'fp-ts/Either'\n *\n * const gt2 = exists((n: number) => n > 2)\n *\n * assert.strictEqual(gt2(left('a')), false)\n * assert.strictEqual(gt2(right(1)), false)\n * assert.strictEqual(gt2(right(3)), true)\n *\n * @since 2.0.0\n */\nexport var exists = function (predicate) {\n    return function (ma) {\n        return isLeft(ma) ? false : predicate(ma.right);\n    };\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @category do notation\n * @since 2.9.0\n */\nexport var Do = /*#__PURE__*/ of(_.emptyRecord);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var bindTo = /*#__PURE__*/ bindTo_(Functor);\nvar let_ = /*#__PURE__*/ let__(Functor);\nexport { \n/**\n * @category do notation\n * @since 2.13.0\n */\nlet_ as let };\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var bind = /*#__PURE__*/ bind_(Chain);\n/**\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category do notation\n * @since 2.8.0\n */\nexport var bindW = bind;\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var apS = /*#__PURE__*/ apS_(Apply);\n/**\n * Less strict version of [`apS`](#aps).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category do notation\n * @since 2.8.0\n */\nexport var apSW = apS;\n/**\n * @since 2.11.0\n */\nexport var ApT = /*#__PURE__*/ of(_.emptyReadonlyArray);\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n * Equivalent to `ReadonlyNonEmptyArray#traverseWithIndex(Applicative)`.\n *\n * @category traversing\n * @since 2.11.0\n */\nexport var traverseReadonlyNonEmptyArrayWithIndex = function (f) {\n    return function (as) {\n        var e = f(0, _.head(as));\n        if (isLeft(e)) {\n            return e;\n        }\n        var out = [e.right];\n        for (var i = 1; i < as.length; i++) {\n            var e_1 = f(i, as[i]);\n            if (isLeft(e_1)) {\n                return e_1;\n            }\n            out.push(e_1.right);\n        }\n        return right(out);\n    };\n};\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @category traversing\n * @since 2.11.0\n */\nexport var traverseReadonlyArrayWithIndex = function (f) {\n    var g = traverseReadonlyNonEmptyArrayWithIndex(f);\n    return function (as) { return (_.isNonEmpty(as) ? g(as) : ApT); };\n};\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nexport var traverseArrayWithIndex = traverseReadonlyArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverse(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nexport var traverseArray = function (f) { return traverseReadonlyArrayWithIndex(function (_, a) { return f(a); }); };\n/**\n * Equivalent to `ReadonlyArray#sequence(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nexport var sequenceArray = \n/*#__PURE__*/ traverseArray(identity);\n/**\n * Use [`parse`](./Json.ts.html#parse) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport function parseJSON(s, onError) {\n    return tryCatch(function () { return JSON.parse(s); }, onError);\n}\n/**\n * Use [`stringify`](./Json.ts.html#stringify) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var stringifyJSON = function (u, onError) {\n    return tryCatch(function () {\n        var s = JSON.stringify(u);\n        if (typeof s !== 'string') {\n            throw new Error('Converting unsupported structure to JSON');\n        }\n        return s;\n    }, onError);\n};\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `E.Functor` instead of `E.either`\n * (where `E` is from `import E from 'fp-ts/Either'`)\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var either = {\n    URI: URI,\n    map: _map,\n    of: of,\n    ap: _ap,\n    chain: _chain,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    bimap: _bimap,\n    mapLeft: _mapLeft,\n    alt: _alt,\n    extend: _extend,\n    chainRec: _chainRec,\n    throwError: throwError\n};\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getapplysemigroup) instead.\n *\n * Semigroup returning the left-most `Left` value. If both operands are `Right`s then the inner values\n * are concatenated using the provided `Semigroup`\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getApplySemigroup = \n/*#__PURE__*/ getApplySemigroup_(Apply);\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getapplicativemonoid) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getApplyMonoid = \n/*#__PURE__*/ getApplicativeMonoid(Applicative);\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getapplysemigroup) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getValidationSemigroup = function (SE, SA) {\n    return getApplySemigroup_(getApplicativeValidation(SE))(SA);\n};\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getapplicativemonoid) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getValidationMonoid = function (SE, MA) {\n    return getApplicativeMonoid(getApplicativeValidation(SE))(MA);\n};\n/**\n * Use [`getApplicativeValidation`](#getapplicativevalidation) and [`getAltValidation`](#getaltvalidation) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport function getValidation(SE) {\n    var ap = getApplicativeValidation(SE).ap;\n    var alt = getAltValidation(SE).alt;\n    return {\n        URI: URI,\n        _E: undefined,\n        map: _map,\n        of: of,\n        chain: _chain,\n        bimap: _bimap,\n        mapLeft: _mapLeft,\n        reduce: _reduce,\n        foldMap: _foldMap,\n        reduceRight: _reduceRight,\n        extend: _extend,\n        traverse: _traverse,\n        sequence: sequence,\n        chainRec: _chainRec,\n        throwError: throwError,\n        ap: ap,\n        alt: alt\n    };\n}\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\n/**\n * @since 1.0.0\n */\nimport { isLeft, left, right } from 'fp-ts/es6/Either';\n/**\n * @category Decode error\n * @since 1.0.0\n */\nexport var failures = left;\n/**\n * @category Decode error\n * @since 1.0.0\n */\nexport var failure = function (value, context, message) {\n    return failures([{ value: value, context: context, message: message }]);\n};\n/**\n * @category Decode error\n * @since 1.0.0\n */\nexport var success = right;\n/**\n * @category Codec\n * @since 1.0.0\n */\nvar Type = /** @class */ (function () {\n    function Type(\n    /** a unique name for this codec */\n    name, \n    /** a custom type guard */\n    is, \n    /** succeeds if a value of type I can be decoded to a value of type A */\n    validate, \n    /** converts a value of type A to a value of type O */\n    encode) {\n        this.name = name;\n        this.is = is;\n        this.validate = validate;\n        this.encode = encode;\n        this.decode = this.decode.bind(this);\n    }\n    /**\n     * @since 1.0.0\n     */\n    Type.prototype.pipe = function (ab, name) {\n        var _this = this;\n        if (name === void 0) { name = \"pipe(\".concat(this.name, \", \").concat(ab.name, \")\"); }\n        return new Type(name, ab.is, function (i, c) {\n            var e = _this.validate(i, c);\n            if (isLeft(e)) {\n                return e;\n            }\n            return ab.validate(e.right, c);\n        }, this.encode === identity && ab.encode === identity ? identity : function (b) { return _this.encode(ab.encode(b)); });\n    };\n    /**\n     * @since 1.0.0\n     */\n    Type.prototype.asDecoder = function () {\n        return this;\n    };\n    /**\n     * @since 1.0.0\n     */\n    Type.prototype.asEncoder = function () {\n        return this;\n    };\n    /**\n     * a version of `validate` with a default context\n     * @since 1.0.0\n     */\n    Type.prototype.decode = function (i) {\n        return this.validate(i, [{ key: '', type: this, actual: i }]);\n    };\n    return Type;\n}());\nexport { Type };\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 1.0.0\n */\nexport var identity = function (a) { return a; };\n/**\n * @since 1.0.0\n */\nexport function getFunctionName(f) {\n    return f.displayName || f.name || \"<function\".concat(f.length, \">\");\n}\n/**\n * @since 1.0.0\n */\nexport function getContextEntry(key, decoder) {\n    return { key: key, type: decoder };\n}\n/**\n * @since 1.0.0\n */\nexport function appendContext(c, key, decoder, actual) {\n    var len = c.length;\n    var r = Array(len + 1);\n    for (var i = 0; i < len; i++) {\n        r[i] = c[i];\n    }\n    r[len] = { key: key, type: decoder, actual: actual };\n    return r;\n}\nfunction pushAll(xs, ys) {\n    var l = ys.length;\n    for (var i = 0; i < l; i++) {\n        xs.push(ys[i]);\n    }\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction getNameFromProps(props) {\n    return Object.keys(props)\n        .map(function (k) { return \"\".concat(k, \": \").concat(props[k].name); })\n        .join(', ');\n}\nfunction useIdentity(codecs) {\n    for (var i = 0; i < codecs.length; i++) {\n        if (codecs[i].encode !== identity) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction getInterfaceTypeName(props) {\n    return \"{ \".concat(getNameFromProps(props), \" }\");\n}\nfunction getPartialTypeName(inner) {\n    return \"Partial<\".concat(inner, \">\");\n}\nfunction enumerableRecord(keys, domain, codomain, name) {\n    if (name === void 0) { name = \"{ [K in \".concat(domain.name, \"]: \").concat(codomain.name, \" }\"); }\n    var len = keys.length;\n    return new DictionaryType(name, function (u) { return UnknownRecord.is(u) && keys.every(function (k) { return codomain.is(u[k]); }); }, function (u, c) {\n        var e = UnknownRecord.validate(u, c);\n        if (isLeft(e)) {\n            return e;\n        }\n        var o = e.right;\n        var a = {};\n        var errors = [];\n        var changed = false;\n        for (var i = 0; i < len; i++) {\n            var k = keys[i];\n            var ok = o[k];\n            var codomainResult = codomain.validate(ok, appendContext(c, k, codomain, ok));\n            if (isLeft(codomainResult)) {\n                pushAll(errors, codomainResult.left);\n            }\n            else {\n                var vok = codomainResult.right;\n                changed = changed || vok !== ok;\n                a[k] = vok;\n            }\n        }\n        return errors.length > 0 ? failures(errors) : success((changed || Object.keys(o).length !== len ? a : o));\n    }, codomain.encode === identity\n        ? identity\n        : function (a) {\n            var s = {};\n            for (var i = 0; i < len; i++) {\n                var k = keys[i];\n                s[k] = codomain.encode(a[k]);\n            }\n            return s;\n        }, domain, codomain);\n}\n/**\n * @internal\n */\nexport function getDomainKeys(domain) {\n    var _a;\n    if (isLiteralC(domain)) {\n        var literal_1 = domain.value;\n        if (string.is(literal_1)) {\n            return _a = {}, _a[literal_1] = null, _a;\n        }\n    }\n    else if (isKeyofC(domain)) {\n        return domain.keys;\n    }\n    else if (isUnionC(domain)) {\n        var keys = domain.types.map(function (type) { return getDomainKeys(type); });\n        return keys.some(undefinedType.is) ? undefined : Object.assign.apply(Object, __spreadArray([{}], keys, false));\n    }\n    return undefined;\n}\nfunction nonEnumerableRecord(domain, codomain, name) {\n    if (name === void 0) { name = \"{ [K in \".concat(domain.name, \"]: \").concat(codomain.name, \" }\"); }\n    return new DictionaryType(name, function (u) {\n        if (UnknownRecord.is(u)) {\n            return Object.keys(u).every(function (k) { return domain.is(k) && codomain.is(u[k]); });\n        }\n        return isAnyC(codomain) && Array.isArray(u);\n    }, function (u, c) {\n        if (UnknownRecord.is(u)) {\n            var a = {};\n            var errors = [];\n            var keys = Object.keys(u);\n            var len = keys.length;\n            var changed = false;\n            for (var i = 0; i < len; i++) {\n                var k = keys[i];\n                var ok = u[k];\n                var domainResult = domain.validate(k, appendContext(c, k, domain, k));\n                if (isLeft(domainResult)) {\n                    pushAll(errors, domainResult.left);\n                }\n                else {\n                    var vk = domainResult.right;\n                    changed = changed || vk !== k;\n                    k = vk;\n                    var codomainResult = codomain.validate(ok, appendContext(c, k, codomain, ok));\n                    if (isLeft(codomainResult)) {\n                        pushAll(errors, codomainResult.left);\n                    }\n                    else {\n                        var vok = codomainResult.right;\n                        changed = changed || vok !== ok;\n                        a[k] = vok;\n                    }\n                }\n            }\n            return errors.length > 0 ? failures(errors) : success((changed ? a : u));\n        }\n        if (isAnyC(codomain) && Array.isArray(u)) {\n            return success(u);\n        }\n        return failure(u, c);\n    }, domain.encode === identity && codomain.encode === identity\n        ? identity\n        : function (a) {\n            var s = {};\n            var keys = Object.keys(a);\n            var len = keys.length;\n            for (var i = 0; i < len; i++) {\n                var k = keys[i];\n                s[String(domain.encode(k))] = codomain.encode(a[k]);\n            }\n            return s;\n        }, domain, codomain);\n}\nfunction getUnionName(codecs) {\n    return '(' + codecs.map(function (type) { return type.name; }).join(' | ') + ')';\n}\n/**\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function mergeAll(base, us) {\n    var equal = true;\n    var primitive = true;\n    var baseIsNotADictionary = !UnknownRecord.is(base);\n    for (var _i = 0, us_1 = us; _i < us_1.length; _i++) {\n        var u = us_1[_i];\n        if (u !== base) {\n            equal = false;\n        }\n        if (UnknownRecord.is(u)) {\n            primitive = false;\n        }\n    }\n    if (equal) {\n        return base;\n    }\n    else if (primitive) {\n        return us[us.length - 1];\n    }\n    var r = {};\n    for (var _a = 0, us_2 = us; _a < us_2.length; _a++) {\n        var u = us_2[_a];\n        for (var k in u) {\n            if (!hasOwnProperty.call(r, k) || baseIsNotADictionary || u[k] !== base[k]) {\n                r[k] = u[k];\n            }\n        }\n    }\n    return r;\n}\nfunction getProps(codec) {\n    switch (codec._tag) {\n        case 'RefinementType':\n        case 'ReadonlyType':\n            return getProps(codec.type);\n        case 'InterfaceType':\n        case 'StrictType':\n        case 'PartialType':\n            return codec.props;\n        case 'IntersectionType':\n            return codec.types.reduce(function (props, type) { return Object.assign(props, getProps(type)); }, {});\n    }\n}\nfunction stripKeys(o, props) {\n    var keys = Object.getOwnPropertyNames(o);\n    var shouldStrip = false;\n    var r = {};\n    for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        if (!hasOwnProperty.call(props, key)) {\n            shouldStrip = true;\n        }\n        else {\n            r[key] = o[key];\n        }\n    }\n    return shouldStrip ? r : o;\n}\nfunction getExactTypeName(codec) {\n    if (isTypeC(codec)) {\n        return \"{| \".concat(getNameFromProps(codec.props), \" |}\");\n    }\n    else if (isPartialC(codec)) {\n        return getPartialTypeName(\"{| \".concat(getNameFromProps(codec.props), \" |}\"));\n    }\n    return \"Exact<\".concat(codec.name, \">\");\n}\nfunction isNonEmpty(as) {\n    return as.length > 0;\n}\n/**\n * @internal\n */\nexport var emptyTags = {};\nfunction intersect(a, b) {\n    var r = [];\n    for (var _i = 0, a_1 = a; _i < a_1.length; _i++) {\n        var v = a_1[_i];\n        if (b.indexOf(v) !== -1) {\n            r.push(v);\n        }\n    }\n    return r;\n}\nfunction mergeTags(a, b) {\n    if (a === emptyTags) {\n        return b;\n    }\n    if (b === emptyTags) {\n        return a;\n    }\n    var r = Object.assign({}, a);\n    for (var k in b) {\n        if (hasOwnProperty.call(a, k)) {\n            var intersection_1 = intersect(a[k], b[k]);\n            if (isNonEmpty(intersection_1)) {\n                r[k] = intersection_1;\n            }\n            else {\n                r = emptyTags;\n                break;\n            }\n        }\n        else {\n            r[k] = b[k];\n        }\n    }\n    return r;\n}\nfunction intersectTags(a, b) {\n    if (a === emptyTags || b === emptyTags) {\n        return emptyTags;\n    }\n    var r = emptyTags;\n    for (var k in a) {\n        if (hasOwnProperty.call(b, k)) {\n            var intersection_2 = intersect(a[k], b[k]);\n            if (intersection_2.length === 0) {\n                if (r === emptyTags) {\n                    r = {};\n                }\n                r[k] = a[k].concat(b[k]);\n            }\n        }\n    }\n    return r;\n}\n// tslint:disable-next-line: deprecation\nfunction isAnyC(codec) {\n    return codec._tag === 'AnyType';\n}\nfunction isLiteralC(codec) {\n    return codec._tag === 'LiteralType';\n}\nfunction isKeyofC(codec) {\n    return codec._tag === 'KeyofType';\n}\nfunction isTypeC(codec) {\n    return codec._tag === 'InterfaceType';\n}\nfunction isPartialC(codec) {\n    return codec._tag === 'PartialType';\n}\n// tslint:disable-next-line: deprecation\nfunction isStrictC(codec) {\n    return codec._tag === 'StrictType';\n}\nfunction isExactC(codec) {\n    return codec._tag === 'ExactType';\n}\n// tslint:disable-next-line: deprecation\nfunction isRefinementC(codec) {\n    return codec._tag === 'RefinementType';\n}\nfunction isIntersectionC(codec) {\n    return codec._tag === 'IntersectionType';\n}\nfunction isUnionC(codec) {\n    return codec._tag === 'UnionType';\n}\nfunction isRecursiveC(codec) {\n    return codec._tag === 'RecursiveType';\n}\nvar lazyCodecs = [];\n/**\n * @internal\n */\nexport function getTags(codec) {\n    if (lazyCodecs.indexOf(codec) !== -1) {\n        return emptyTags;\n    }\n    if (isTypeC(codec) || isStrictC(codec)) {\n        var index = emptyTags;\n        // tslint:disable-next-line: forin\n        for (var k in codec.props) {\n            var prop = codec.props[k];\n            if (isLiteralC(prop)) {\n                if (index === emptyTags) {\n                    index = {};\n                }\n                index[k] = [prop.value];\n            }\n        }\n        return index;\n    }\n    else if (isExactC(codec) || isRefinementC(codec)) {\n        return getTags(codec.type);\n    }\n    else if (isIntersectionC(codec)) {\n        return codec.types.reduce(function (tags, codec) { return mergeTags(tags, getTags(codec)); }, emptyTags);\n    }\n    else if (isUnionC(codec)) {\n        return codec.types.slice(1).reduce(function (tags, codec) { return intersectTags(tags, getTags(codec)); }, getTags(codec.types[0]));\n    }\n    else if (isRecursiveC(codec)) {\n        lazyCodecs.push(codec);\n        var tags = getTags(codec.type);\n        lazyCodecs.pop();\n        return tags;\n    }\n    return emptyTags;\n}\n/**\n * @internal\n */\nexport function getIndex(codecs) {\n    var tags = getTags(codecs[0]);\n    var keys = Object.keys(tags);\n    var len = codecs.length;\n    var _loop_1 = function (k) {\n        var all = tags[k].slice();\n        var index = [tags[k]];\n        for (var i = 1; i < len; i++) {\n            var codec = codecs[i];\n            var ctags = getTags(codec);\n            var values = ctags[k];\n            // tslint:disable-next-line: strict-type-predicates\n            if (values === undefined) {\n                return \"continue-keys\";\n            }\n            else {\n                if (values.some(function (v) { return all.indexOf(v) !== -1; })) {\n                    return \"continue-keys\";\n                }\n                else {\n                    all.push.apply(all, values);\n                    index.push(values);\n                }\n            }\n        }\n        return { value: [k, index] };\n    };\n    keys: for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var k = keys_1[_i];\n        var state_1 = _loop_1(k);\n        if (typeof state_1 === \"object\")\n            return state_1.value;\n        switch (state_1) {\n            case \"continue-keys\": continue keys;\n        }\n    }\n    return undefined;\n}\n// -------------------------------------------------------------------------------------\n// primitives\n// -------------------------------------------------------------------------------------\n/**\n * @since 1.0.0\n */\nvar NullType = /** @class */ (function (_super) {\n    __extends(NullType, _super);\n    function NullType() {\n        var _this = _super.call(this, 'null', function (u) { return u === null; }, function (u, c) { return (_this.is(u) ? success(u) : failure(u, c)); }, identity) || this;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'NullType';\n        return _this;\n    }\n    return NullType;\n}(Type));\nexport { NullType };\n/**\n * @category primitives\n * @since 1.0.0\n */\nexport var nullType = new NullType();\n/**\n * @since 1.0.0\n */\nvar UndefinedType = /** @class */ (function (_super) {\n    __extends(UndefinedType, _super);\n    function UndefinedType() {\n        var _this = _super.call(this, 'undefined', function (u) { return u === void 0; }, function (u, c) { return (_this.is(u) ? success(u) : failure(u, c)); }, identity) || this;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'UndefinedType';\n        return _this;\n    }\n    return UndefinedType;\n}(Type));\nexport { UndefinedType };\nvar undefinedType = new UndefinedType();\n/**\n * @since 1.2.0\n */\nvar VoidType = /** @class */ (function (_super) {\n    __extends(VoidType, _super);\n    function VoidType() {\n        var _this = _super.call(this, 'void', undefinedType.is, undefinedType.validate, identity) || this;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'VoidType';\n        return _this;\n    }\n    return VoidType;\n}(Type));\nexport { VoidType };\n/**\n * @category primitives\n * @since 1.2.0\n */\nexport var voidType = new VoidType();\n/**\n * @since 1.5.0\n */\nvar UnknownType = /** @class */ (function (_super) {\n    __extends(UnknownType, _super);\n    function UnknownType() {\n        var _this = _super.call(this, 'unknown', function (_) { return true; }, success, identity) || this;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'UnknownType';\n        return _this;\n    }\n    return UnknownType;\n}(Type));\nexport { UnknownType };\n/**\n * @category primitives\n * @since 1.5.0\n */\nexport var unknown = new UnknownType();\n/**\n * @since 1.0.0\n */\nvar StringType = /** @class */ (function (_super) {\n    __extends(StringType, _super);\n    function StringType() {\n        var _this = _super.call(this, 'string', function (u) { return typeof u === 'string'; }, function (u, c) { return (_this.is(u) ? success(u) : failure(u, c)); }, identity) || this;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'StringType';\n        return _this;\n    }\n    return StringType;\n}(Type));\nexport { StringType };\n/**\n * @category primitives\n * @since 1.0.0\n */\nexport var string = new StringType();\n/**\n * @since 1.0.0\n */\nvar NumberType = /** @class */ (function (_super) {\n    __extends(NumberType, _super);\n    function NumberType() {\n        var _this = _super.call(this, 'number', function (u) { return typeof u === 'number'; }, function (u, c) { return (_this.is(u) ? success(u) : failure(u, c)); }, identity) || this;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'NumberType';\n        return _this;\n    }\n    return NumberType;\n}(Type));\nexport { NumberType };\n/**\n * @category primitives\n * @since 1.0.0\n */\nexport var number = new NumberType();\n/**\n * @since 2.1.0\n */\nvar BigIntType = /** @class */ (function (_super) {\n    __extends(BigIntType, _super);\n    function BigIntType() {\n        var _this = _super.call(this, 'bigint', \n        // tslint:disable-next-line: valid-typeof\n        function (u) { return typeof u === 'bigint'; }, function (u, c) { return (_this.is(u) ? success(u) : failure(u, c)); }, identity) || this;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'BigIntType';\n        return _this;\n    }\n    return BigIntType;\n}(Type));\nexport { BigIntType };\n/**\n * @category primitives\n * @since 2.1.0\n */\nexport var bigint = new BigIntType();\n/**\n * @since 1.0.0\n */\nvar BooleanType = /** @class */ (function (_super) {\n    __extends(BooleanType, _super);\n    function BooleanType() {\n        var _this = _super.call(this, 'boolean', function (u) { return typeof u === 'boolean'; }, function (u, c) { return (_this.is(u) ? success(u) : failure(u, c)); }, identity) || this;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'BooleanType';\n        return _this;\n    }\n    return BooleanType;\n}(Type));\nexport { BooleanType };\n/**\n * @category primitives\n * @since 1.0.0\n */\nexport var boolean = new BooleanType();\n/**\n * @since 1.0.0\n */\nvar AnyArrayType = /** @class */ (function (_super) {\n    __extends(AnyArrayType, _super);\n    function AnyArrayType() {\n        var _this = _super.call(this, 'UnknownArray', Array.isArray, function (u, c) { return (_this.is(u) ? success(u) : failure(u, c)); }, identity) || this;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'AnyArrayType';\n        return _this;\n    }\n    return AnyArrayType;\n}(Type));\nexport { AnyArrayType };\n/**\n * @category primitives\n * @since 1.7.1\n */\nexport var UnknownArray = new AnyArrayType();\n/**\n * @since 1.0.0\n */\nvar AnyDictionaryType = /** @class */ (function (_super) {\n    __extends(AnyDictionaryType, _super);\n    function AnyDictionaryType() {\n        var _this = _super.call(this, 'UnknownRecord', function (u) { return u !== null && typeof u === 'object' && !Array.isArray(u); }, function (u, c) { return (_this.is(u) ? success(u) : failure(u, c)); }, identity) || this;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'AnyDictionaryType';\n        return _this;\n    }\n    return AnyDictionaryType;\n}(Type));\nexport { AnyDictionaryType };\n/**\n * @category primitives\n * @since 1.7.1\n */\nexport var UnknownRecord = new AnyDictionaryType();\nexport { \n/**\n * @category primitives\n * @since 1.0.0\n */\nnullType as null, \n/**\n * @category primitives\n * @since 1.0.0\n */\nundefinedType as undefined, \n/**\n * @category primitives\n * @since 1.0.0\n */\nvoidType as void };\n/**\n * @since 1.0.0\n */\nvar LiteralType = /** @class */ (function (_super) {\n    __extends(LiteralType, _super);\n    function LiteralType(name, is, validate, encode, value) {\n        var _this = _super.call(this, name, is, validate, encode) || this;\n        _this.value = value;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'LiteralType';\n        return _this;\n    }\n    return LiteralType;\n}(Type));\nexport { LiteralType };\n/**\n * @category constructors\n * @since 1.0.0\n */\nexport function literal(value, name) {\n    if (name === void 0) { name = JSON.stringify(value); }\n    var is = function (u) { return u === value; };\n    return new LiteralType(name, is, function (u, c) { return (is(u) ? success(value) : failure(u, c)); }, identity, value);\n}\n/**\n * @since 1.0.0\n */\nvar KeyofType = /** @class */ (function (_super) {\n    __extends(KeyofType, _super);\n    function KeyofType(name, is, validate, encode, keys) {\n        var _this = _super.call(this, name, is, validate, encode) || this;\n        _this.keys = keys;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'KeyofType';\n        return _this;\n    }\n    return KeyofType;\n}(Type));\nexport { KeyofType };\n/**\n * @category constructors\n * @since 1.0.0\n */\nexport function keyof(keys, name) {\n    if (name === void 0) { name = Object.keys(keys)\n        .map(function (k) { return JSON.stringify(k); })\n        .join(' | '); }\n    var is = function (u) { return string.is(u) && hasOwnProperty.call(keys, u); };\n    return new KeyofType(name, is, function (u, c) { return (is(u) ? success(u) : failure(u, c)); }, identity, keys);\n}\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @since 1.0.0\n */\nvar RefinementType = /** @class */ (function (_super) {\n    __extends(RefinementType, _super);\n    function RefinementType(name, is, validate, encode, type, predicate) {\n        var _this = _super.call(this, name, is, validate, encode) || this;\n        _this.type = type;\n        _this.predicate = predicate;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'RefinementType';\n        return _this;\n    }\n    return RefinementType;\n}(Type));\nexport { RefinementType };\n/**\n * @category combinators\n * @since 1.8.1\n */\nexport function brand(codec, predicate, name) {\n    return refinement(codec, predicate, name);\n}\n/**\n * A branded codec representing an integer\n *\n * @category primitives\n * @since 1.8.1\n */\nexport var Int = brand(number, function (n) { return Number.isInteger(n); }, 'Int');\n/**\n * @since 1.0.0\n */\nvar RecursiveType = /** @class */ (function (_super) {\n    __extends(RecursiveType, _super);\n    function RecursiveType(name, is, validate, encode, runDefinition) {\n        var _this = _super.call(this, name, is, validate, encode) || this;\n        _this.runDefinition = runDefinition;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'RecursiveType';\n        return _this;\n    }\n    return RecursiveType;\n}(Type));\nexport { RecursiveType };\nObject.defineProperty(RecursiveType.prototype, 'type', {\n    get: function () {\n        return this.runDefinition();\n    },\n    enumerable: true,\n    configurable: true\n});\n/**\n * @category combinators\n * @since 1.0.0\n */\nexport function recursion(name, definition) {\n    var cache;\n    var runDefinition = function () {\n        if (!cache) {\n            cache = definition(Self);\n            cache.name = name;\n        }\n        return cache;\n    };\n    var Self = new RecursiveType(name, function (u) { return runDefinition().is(u); }, function (u, c) { return runDefinition().validate(u, c); }, function (a) { return runDefinition().encode(a); }, runDefinition);\n    return Self;\n}\n/**\n * @since 1.0.0\n */\nvar ArrayType = /** @class */ (function (_super) {\n    __extends(ArrayType, _super);\n    function ArrayType(name, is, validate, encode, type) {\n        var _this = _super.call(this, name, is, validate, encode) || this;\n        _this.type = type;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'ArrayType';\n        return _this;\n    }\n    return ArrayType;\n}(Type));\nexport { ArrayType };\n/**\n * @category combinators\n * @since 1.0.0\n */\nexport function array(item, name) {\n    if (name === void 0) { name = \"Array<\".concat(item.name, \">\"); }\n    return new ArrayType(name, function (u) { return UnknownArray.is(u) && u.every(item.is); }, function (u, c) {\n        var e = UnknownArray.validate(u, c);\n        if (isLeft(e)) {\n            return e;\n        }\n        var us = e.right;\n        var len = us.length;\n        var as = us;\n        var errors = [];\n        for (var i = 0; i < len; i++) {\n            var ui = us[i];\n            var result = item.validate(ui, appendContext(c, String(i), item, ui));\n            if (isLeft(result)) {\n                pushAll(errors, result.left);\n            }\n            else {\n                var ai = result.right;\n                if (ai !== ui) {\n                    if (as === us) {\n                        as = us.slice();\n                    }\n                    as[i] = ai;\n                }\n            }\n        }\n        return errors.length > 0 ? failures(errors) : success(as);\n    }, item.encode === identity ? identity : function (a) { return a.map(item.encode); }, item);\n}\n/**\n * @since 1.0.0\n */\nvar InterfaceType = /** @class */ (function (_super) {\n    __extends(InterfaceType, _super);\n    function InterfaceType(name, is, validate, encode, props) {\n        var _this = _super.call(this, name, is, validate, encode) || this;\n        _this.props = props;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'InterfaceType';\n        return _this;\n    }\n    return InterfaceType;\n}(Type));\nexport { InterfaceType };\n/**\n * @category combinators\n * @since 1.0.0\n */\nexport function type(props, name) {\n    if (name === void 0) { name = getInterfaceTypeName(props); }\n    var keys = Object.keys(props);\n    var types = keys.map(function (key) { return props[key]; });\n    var len = keys.length;\n    return new InterfaceType(name, function (u) {\n        if (UnknownRecord.is(u)) {\n            for (var i = 0; i < len; i++) {\n                var k = keys[i];\n                var uk = u[k];\n                if ((uk === undefined && !hasOwnProperty.call(u, k)) || !types[i].is(uk)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }, function (u, c) {\n        var e = UnknownRecord.validate(u, c);\n        if (isLeft(e)) {\n            return e;\n        }\n        var o = e.right;\n        var a = o;\n        var errors = [];\n        for (var i = 0; i < len; i++) {\n            var k = keys[i];\n            var ak = a[k];\n            var type_1 = types[i];\n            var result = type_1.validate(ak, appendContext(c, k, type_1, ak));\n            if (isLeft(result)) {\n                pushAll(errors, result.left);\n            }\n            else {\n                var vak = result.right;\n                if (vak !== ak || (vak === undefined && !hasOwnProperty.call(a, k))) {\n                    /* istanbul ignore next */\n                    if (a === o) {\n                        a = __assign({}, o);\n                    }\n                    a[k] = vak;\n                }\n            }\n        }\n        return errors.length > 0 ? failures(errors) : success(a);\n    }, useIdentity(types)\n        ? identity\n        : function (a) {\n            var s = __assign({}, a);\n            for (var i = 0; i < len; i++) {\n                var k = keys[i];\n                var encode = types[i].encode;\n                if (encode !== identity) {\n                    s[k] = encode(a[k]);\n                }\n            }\n            return s;\n        }, props);\n}\n/**\n * @since 1.0.0\n */\nvar PartialType = /** @class */ (function (_super) {\n    __extends(PartialType, _super);\n    function PartialType(name, is, validate, encode, props) {\n        var _this = _super.call(this, name, is, validate, encode) || this;\n        _this.props = props;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'PartialType';\n        return _this;\n    }\n    return PartialType;\n}(Type));\nexport { PartialType };\n/**\n * @category combinators\n * @since 1.0.0\n */\nexport function partial(props, name) {\n    if (name === void 0) { name = getPartialTypeName(getInterfaceTypeName(props)); }\n    var keys = Object.keys(props);\n    var types = keys.map(function (key) { return props[key]; });\n    var len = keys.length;\n    return new PartialType(name, function (u) {\n        if (UnknownRecord.is(u)) {\n            for (var i = 0; i < len; i++) {\n                var k = keys[i];\n                var uk = u[k];\n                if (uk !== undefined && !props[k].is(uk)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }, function (u, c) {\n        var e = UnknownRecord.validate(u, c);\n        if (isLeft(e)) {\n            return e;\n        }\n        var o = e.right;\n        var a = o;\n        var errors = [];\n        for (var i = 0; i < len; i++) {\n            var k = keys[i];\n            var ak = a[k];\n            var type_2 = props[k];\n            var result = type_2.validate(ak, appendContext(c, k, type_2, ak));\n            if (isLeft(result)) {\n                if (ak !== undefined) {\n                    pushAll(errors, result.left);\n                }\n            }\n            else {\n                var vak = result.right;\n                if (vak !== ak) {\n                    /* istanbul ignore next */\n                    if (a === o) {\n                        a = __assign({}, o);\n                    }\n                    a[k] = vak;\n                }\n            }\n        }\n        return errors.length > 0 ? failures(errors) : success(a);\n    }, useIdentity(types)\n        ? identity\n        : function (a) {\n            var s = __assign({}, a);\n            for (var i = 0; i < len; i++) {\n                var k = keys[i];\n                var ak = a[k];\n                if (ak !== undefined) {\n                    s[k] = types[i].encode(ak);\n                }\n            }\n            return s;\n        }, props);\n}\n/**\n * @since 1.0.0\n */\nvar DictionaryType = /** @class */ (function (_super) {\n    __extends(DictionaryType, _super);\n    function DictionaryType(name, is, validate, encode, domain, codomain) {\n        var _this = _super.call(this, name, is, validate, encode) || this;\n        _this.domain = domain;\n        _this.codomain = codomain;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'DictionaryType';\n        return _this;\n    }\n    return DictionaryType;\n}(Type));\nexport { DictionaryType };\n/**\n * @category combinators\n * @since 1.7.1\n */\nexport function record(domain, codomain, name) {\n    var keys = getDomainKeys(domain);\n    return keys\n        ? enumerableRecord(Object.keys(keys), domain, codomain, name)\n        : nonEnumerableRecord(domain, codomain, name);\n}\n/**\n * @since 1.0.0\n */\nvar UnionType = /** @class */ (function (_super) {\n    __extends(UnionType, _super);\n    function UnionType(name, is, validate, encode, types) {\n        var _this = _super.call(this, name, is, validate, encode) || this;\n        _this.types = types;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'UnionType';\n        return _this;\n    }\n    return UnionType;\n}(Type));\nexport { UnionType };\n/**\n * @category combinators\n * @since 1.0.0\n */\nexport function union(codecs, name) {\n    if (name === void 0) { name = getUnionName(codecs); }\n    var index = getIndex(codecs);\n    if (index !== undefined && codecs.length > 0) {\n        var tag_1 = index[0], groups_1 = index[1];\n        var len_1 = groups_1.length;\n        var find_1 = function (value) {\n            for (var i = 0; i < len_1; i++) {\n                if (groups_1[i].indexOf(value) !== -1) {\n                    return i;\n                }\n            }\n            return undefined;\n        };\n        // tslint:disable-next-line: deprecation\n        return new TaggedUnionType(name, function (u) {\n            if (UnknownRecord.is(u)) {\n                var i = find_1(u[tag_1]);\n                return i !== undefined ? codecs[i].is(u) : false;\n            }\n            return false;\n        }, function (u, c) {\n            var e = UnknownRecord.validate(u, c);\n            if (isLeft(e)) {\n                return e;\n            }\n            var r = e.right;\n            var i = find_1(r[tag_1]);\n            if (i === undefined) {\n                return failure(u, c);\n            }\n            var codec = codecs[i];\n            return codec.validate(r, appendContext(c, String(i), codec, r));\n        }, useIdentity(codecs)\n            ? identity\n            : function (a) {\n                var i = find_1(a[tag_1]);\n                if (i === undefined) {\n                    // https://github.com/gcanti/io-ts/pull/305\n                    throw new Error(\"no codec found to encode value in union codec \".concat(name));\n                }\n                else {\n                    return codecs[i].encode(a);\n                }\n            }, codecs, tag_1);\n    }\n    else {\n        return new UnionType(name, function (u) { return codecs.some(function (type) { return type.is(u); }); }, function (u, c) {\n            var errors = [];\n            for (var i = 0; i < codecs.length; i++) {\n                var codec = codecs[i];\n                var result = codec.validate(u, appendContext(c, String(i), codec, u));\n                if (isLeft(result)) {\n                    pushAll(errors, result.left);\n                }\n                else {\n                    return success(result.right);\n                }\n            }\n            return failures(errors);\n        }, useIdentity(codecs)\n            ? identity\n            : function (a) {\n                for (var _i = 0, codecs_1 = codecs; _i < codecs_1.length; _i++) {\n                    var codec = codecs_1[_i];\n                    if (codec.is(a)) {\n                        return codec.encode(a);\n                    }\n                }\n                // https://github.com/gcanti/io-ts/pull/305\n                throw new Error(\"no codec found to encode value in union type \".concat(name));\n            }, codecs);\n    }\n}\n/**\n * @since 1.0.0\n */\nvar IntersectionType = /** @class */ (function (_super) {\n    __extends(IntersectionType, _super);\n    function IntersectionType(name, is, validate, encode, types) {\n        var _this = _super.call(this, name, is, validate, encode) || this;\n        _this.types = types;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'IntersectionType';\n        return _this;\n    }\n    return IntersectionType;\n}(Type));\nexport { IntersectionType };\nexport function intersection(codecs, name) {\n    if (name === void 0) { name = \"(\".concat(codecs.map(function (type) { return type.name; }).join(' & '), \")\"); }\n    var len = codecs.length;\n    return new IntersectionType(name, function (u) { return codecs.every(function (type) { return type.is(u); }); }, codecs.length === 0\n        ? success\n        : function (u, c) {\n            var us = [];\n            var errors = [];\n            for (var i = 0; i < len; i++) {\n                var codec = codecs[i];\n                var result = codec.validate(u, appendContext(c, String(i), codec, u));\n                if (isLeft(result)) {\n                    pushAll(errors, result.left);\n                }\n                else {\n                    us.push(result.right);\n                }\n            }\n            return errors.length > 0 ? failures(errors) : success(mergeAll(u, us));\n        }, codecs.length === 0\n        ? identity\n        : function (a) {\n            return mergeAll(a, codecs.map(function (codec) { return codec.encode(a); }));\n        }, codecs);\n}\n/**\n * @since 1.0.0\n */\nvar TupleType = /** @class */ (function (_super) {\n    __extends(TupleType, _super);\n    function TupleType(name, is, validate, encode, types) {\n        var _this = _super.call(this, name, is, validate, encode) || this;\n        _this.types = types;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'TupleType';\n        return _this;\n    }\n    return TupleType;\n}(Type));\nexport { TupleType };\nexport function tuple(codecs, name) {\n    if (name === void 0) { name = \"[\".concat(codecs.map(function (type) { return type.name; }).join(', '), \"]\"); }\n    var len = codecs.length;\n    return new TupleType(name, function (u) { return UnknownArray.is(u) && u.length === len && codecs.every(function (type, i) { return type.is(u[i]); }); }, function (u, c) {\n        var e = UnknownArray.validate(u, c);\n        if (isLeft(e)) {\n            return e;\n        }\n        var us = e.right;\n        var as = us.length > len ? us.slice(0, len) : us; // strip additional components\n        var errors = [];\n        for (var i = 0; i < len; i++) {\n            var a = us[i];\n            var type_3 = codecs[i];\n            var result = type_3.validate(a, appendContext(c, String(i), type_3, a));\n            if (isLeft(result)) {\n                pushAll(errors, result.left);\n            }\n            else {\n                var va = result.right;\n                if (va !== a) {\n                    /* istanbul ignore next */\n                    if (as === us) {\n                        as = us.slice();\n                    }\n                    as[i] = va;\n                }\n            }\n        }\n        return errors.length > 0 ? failures(errors) : success(as);\n    }, useIdentity(codecs) ? identity : function (a) { return codecs.map(function (type, i) { return type.encode(a[i]); }); }, codecs);\n}\n/**\n * @since 1.0.0\n */\nvar ReadonlyType = /** @class */ (function (_super) {\n    __extends(ReadonlyType, _super);\n    function ReadonlyType(name, is, validate, encode, type) {\n        var _this = _super.call(this, name, is, validate, encode) || this;\n        _this.type = type;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'ReadonlyType';\n        return _this;\n    }\n    return ReadonlyType;\n}(Type));\nexport { ReadonlyType };\n/**\n * @category combinators\n * @since 1.0.0\n */\nexport function readonly(codec, name) {\n    if (name === void 0) { name = \"Readonly<\".concat(codec.name, \">\"); }\n    return new ReadonlyType(name, codec.is, codec.validate, codec.encode, codec);\n}\n/**\n * @since 1.0.0\n */\nvar ReadonlyArrayType = /** @class */ (function (_super) {\n    __extends(ReadonlyArrayType, _super);\n    function ReadonlyArrayType(name, is, validate, encode, type) {\n        var _this = _super.call(this, name, is, validate, encode) || this;\n        _this.type = type;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'ReadonlyArrayType';\n        return _this;\n    }\n    return ReadonlyArrayType;\n}(Type));\nexport { ReadonlyArrayType };\n/**\n * @category combinators\n * @since 1.0.0\n */\nexport function readonlyArray(item, name) {\n    if (name === void 0) { name = \"ReadonlyArray<\".concat(item.name, \">\"); }\n    var codec = array(item);\n    return new ReadonlyArrayType(name, codec.is, codec.validate, codec.encode, item);\n}\n/**\n * Strips additional properties, equivalent to `exact(type(props))`.\n *\n * @category combinators\n * @since 1.0.0\n */\nexport var strict = function (props, name) { return exact(type(props), name); };\n/**\n * @since 1.1.0\n */\nvar ExactType = /** @class */ (function (_super) {\n    __extends(ExactType, _super);\n    function ExactType(name, is, validate, encode, type) {\n        var _this = _super.call(this, name, is, validate, encode) || this;\n        _this.type = type;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'ExactType';\n        return _this;\n    }\n    return ExactType;\n}(Type));\nexport { ExactType };\n/**\n * Strips additional properties.\n *\n * @category combinators\n * @since 1.1.0\n */\nexport function exact(codec, name) {\n    if (name === void 0) { name = getExactTypeName(codec); }\n    var props = getProps(codec);\n    return new ExactType(name, codec.is, function (u, c) {\n        var e = UnknownRecord.validate(u, c);\n        if (isLeft(e)) {\n            return e;\n        }\n        var ce = codec.validate(u, c);\n        if (isLeft(ce)) {\n            return ce;\n        }\n        return right(stripKeys(ce.right, props));\n    }, function (a) { return codec.encode(stripKeys(a, props)); }, codec);\n}\n/**\n * @since 1.0.0\n */\nvar FunctionType = /** @class */ (function (_super) {\n    __extends(FunctionType, _super);\n    function FunctionType() {\n        var _this = _super.call(this, 'Function', \n        // tslint:disable-next-line:strict-type-predicates\n        function (u) { return typeof u === 'function'; }, function (u, c) { return (_this.is(u) ? success(u) : failure(u, c)); }, identity) || this;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'FunctionType';\n        return _this;\n    }\n    return FunctionType;\n}(Type));\nexport { FunctionType };\n/**\n * @category primitives\n * @since 1.0.0\n */\nexport var Function = new FunctionType();\n/**\n * @since 1.0.0\n */\nvar NeverType = /** @class */ (function (_super) {\n    __extends(NeverType, _super);\n    function NeverType() {\n        var _this = _super.call(this, 'never', function (_) { return false; }, function (u, c) { return failure(u, c); }, \n        /* istanbul ignore next */\n        function () {\n            throw new Error('cannot encode never');\n        }) || this;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'NeverType';\n        return _this;\n    }\n    return NeverType;\n}(Type));\nexport { NeverType };\n/**\n * @category primitives\n * @since 1.0.0\n */\nexport var never = new NeverType();\n/**\n * @since 1.0.0\n */\nvar AnyType = /** @class */ (function (_super) {\n    __extends(AnyType, _super);\n    function AnyType() {\n        var _this = _super.call(this, 'any', function (_) { return true; }, success, identity) || this;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'AnyType';\n        return _this;\n    }\n    return AnyType;\n}(Type));\nexport { AnyType };\n/**\n * @category primitives\n * @since 1.0.0\n */\nexport var any = new AnyType();\nexport function refinement(codec, predicate, name) {\n    if (name === void 0) { name = \"(\".concat(codec.name, \" | \").concat(getFunctionName(predicate), \")\"); }\n    return new RefinementType(name, function (u) { return codec.is(u) && predicate(u); }, function (i, c) {\n        var e = codec.validate(i, c);\n        if (isLeft(e)) {\n            return e;\n        }\n        var a = e.right;\n        return predicate(a) ? success(a) : failure(a, c);\n    }, codec.encode, codec, predicate);\n}\n/**\n * @category primitives\n * @since 1.0.0\n */\nexport var Integer = refinement(number, Number.isInteger, 'Integer');\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * @since 1.3.0\n * @deprecated\n */\nvar TaggedUnionType = /** @class */ (function (_super) {\n    __extends(TaggedUnionType, _super);\n    function TaggedUnionType(name, \n    // tslint:disable-next-line: deprecation\n    is, \n    // tslint:disable-next-line: deprecation\n    validate, \n    // tslint:disable-next-line: deprecation\n    encode, codecs, tag) {\n        var _this = _super.call(this, name, is, validate, encode, codecs) /* istanbul ignore next */ // <= workaround for https://github.com/Microsoft/TypeScript/issues/13455\n         || this;\n        _this.tag = tag;\n        return _this;\n    }\n    return TaggedUnionType;\n}(UnionType));\nexport { TaggedUnionType };\n/**\n * Use `union` instead.\n *\n * @category combinators\n * @since 1.3.0\n * @deprecated\n */\nexport var taggedUnion = function (tag, codecs, name\n// tslint:disable-next-line: deprecation\n) {\n    if (name === void 0) { name = getUnionName(codecs); }\n    var U = union(codecs, name);\n    // tslint:disable-next-line: deprecation\n    if (U instanceof TaggedUnionType) {\n        return U;\n    }\n    else {\n        console.warn(\"[io-ts] Cannot build a tagged union for \".concat(name, \", returning a de-optimized union\"));\n        // tslint:disable-next-line: deprecation\n        return new TaggedUnionType(name, U.is, U.validate, U.encode, codecs, tag);\n    }\n};\nexport { \n/**\n * Use `UnknownArray` instead.\n *\n * @category primitives\n * @deprecated\n * @since 1.0.0\n */\nUnknownArray as Array };\nexport { \n/**\n * Use `type` instead.\n *\n * @category combinators\n * @deprecated\n * @since 1.0.0\n */\ntype as interface };\n/**\n * @since 1.0.0\n * @deprecated\n */\nexport var getValidationError /* istanbul ignore next */ = function (value, context) { return ({\n    value: value,\n    context: context\n}); };\n/**\n * @since 1.0.0\n * @deprecated\n */\nexport var getDefaultContext /* istanbul ignore next */ = function (decoder) { return [\n    { key: '', type: decoder }\n]; };\n/**\n * Use `UnknownRecord` instead.\n *\n * @category primitives\n * @since 1.0.0\n * @deprecated\n */\nexport var Dictionary = UnknownRecord;\n/**\n * @since 1.0.0\n * @deprecated\n */\nvar ObjectType = /** @class */ (function (_super) {\n    __extends(ObjectType, _super);\n    function ObjectType() {\n        var _this = _super.call(this, 'object', function (u) { return u !== null && typeof u === 'object'; }, function (u, c) { return (_this.is(u) ? success(u) : failure(u, c)); }, identity) || this;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'ObjectType';\n        return _this;\n    }\n    return ObjectType;\n}(Type));\nexport { ObjectType };\n/**\n * Use `UnknownRecord` instead.\n *\n * @category primitives\n * @since 1.0.0\n * @deprecated\n */\n// tslint:disable-next-line: deprecation\nexport var object = new ObjectType();\n/**\n * Use `record` instead.\n *\n * @category combinators\n * @since 1.0.0\n * @deprecated\n */\nexport var dictionary = record;\n/**\n * @since 1.0.0\n * @deprecated\n */\nvar StrictType = /** @class */ (function (_super) {\n    __extends(StrictType, _super);\n    function StrictType(name, \n    // tslint:disable-next-line: deprecation\n    is, \n    // tslint:disable-next-line: deprecation\n    validate, \n    // tslint:disable-next-line: deprecation\n    encode, props) {\n        var _this = _super.call(this, name, is, validate, encode) || this;\n        _this.props = props;\n        /**\n         * @since 1.0.0\n         */\n        _this._tag = 'StrictType';\n        return _this;\n    }\n    return StrictType;\n}(Type));\nexport { StrictType };\n/**\n * Drops the codec \"kind\".\n *\n * @category combinators\n * @since 1.1.0\n * @deprecated\n */\nexport function clean(codec) {\n    return codec;\n}\nexport function alias(codec) {\n    return function () { return codec; };\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEndomorphismMonoid = exports.not = exports.SK = exports.hole = exports.pipe = exports.untupled = exports.tupled = exports.absurd = exports.decrement = exports.increment = exports.tuple = exports.flow = exports.flip = exports.constVoid = exports.constUndefined = exports.constNull = exports.constFalse = exports.constTrue = exports.constant = exports.unsafeCoerce = exports.identity = exports.apply = exports.getRing = exports.getSemiring = exports.getMonoid = exports.getSemigroup = exports.getBooleanAlgebra = void 0;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getBooleanAlgebra = function (B) {\n    return function () { return ({\n        meet: function (x, y) { return function (a) { return B.meet(x(a), y(a)); }; },\n        join: function (x, y) { return function (a) { return B.join(x(a), y(a)); }; },\n        zero: function () { return B.zero; },\n        one: function () { return B.one; },\n        implies: function (x, y) { return function (a) { return B.implies(x(a), y(a)); }; },\n        not: function (x) { return function (a) { return B.not(x(a)); }; }\n    }); };\n};\nexports.getBooleanAlgebra = getBooleanAlgebra;\n/**\n * Unary functions form a semigroup as long as you can provide a semigroup for the codomain.\n *\n * @example\n * import { Predicate, getSemigroup } from 'fp-ts/function'\n * import * as B from 'fp-ts/boolean'\n *\n * const f: Predicate<number> = (n) => n <= 2\n * const g: Predicate<number> = (n) => n >= 0\n *\n * const S1 = getSemigroup(B.SemigroupAll)<number>()\n *\n * assert.deepStrictEqual(S1.concat(f, g)(1), true)\n * assert.deepStrictEqual(S1.concat(f, g)(3), false)\n *\n * const S2 = getSemigroup(B.SemigroupAny)<number>()\n *\n * assert.deepStrictEqual(S2.concat(f, g)(1), true)\n * assert.deepStrictEqual(S2.concat(f, g)(3), true)\n *\n * @category instances\n * @since 2.10.0\n */\nvar getSemigroup = function (S) {\n    return function () { return ({\n        concat: function (f, g) { return function (a) { return S.concat(f(a), g(a)); }; }\n    }); };\n};\nexports.getSemigroup = getSemigroup;\n/**\n * Unary functions form a monoid as long as you can provide a monoid for the codomain.\n *\n * @example\n * import { Predicate } from 'fp-ts/Predicate'\n * import { getMonoid } from 'fp-ts/function'\n * import * as B from 'fp-ts/boolean'\n *\n * const f: Predicate<number> = (n) => n <= 2\n * const g: Predicate<number> = (n) => n >= 0\n *\n * const M1 = getMonoid(B.MonoidAll)<number>()\n *\n * assert.deepStrictEqual(M1.concat(f, g)(1), true)\n * assert.deepStrictEqual(M1.concat(f, g)(3), false)\n *\n * const M2 = getMonoid(B.MonoidAny)<number>()\n *\n * assert.deepStrictEqual(M2.concat(f, g)(1), true)\n * assert.deepStrictEqual(M2.concat(f, g)(3), true)\n *\n * @category instances\n * @since 2.10.0\n */\nvar getMonoid = function (M) {\n    var getSemigroupM = (0, exports.getSemigroup)(M);\n    return function () { return ({\n        concat: getSemigroupM().concat,\n        empty: function () { return M.empty; }\n    }); };\n};\nexports.getMonoid = getMonoid;\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getSemiring = function (S) { return ({\n    add: function (f, g) { return function (x) { return S.add(f(x), g(x)); }; },\n    zero: function () { return S.zero; },\n    mul: function (f, g) { return function (x) { return S.mul(f(x), g(x)); }; },\n    one: function () { return S.one; }\n}); };\nexports.getSemiring = getSemiring;\n/**\n * @category instances\n * @since 2.10.0\n */\nvar getRing = function (R) {\n    var S = (0, exports.getSemiring)(R);\n    return {\n        add: S.add,\n        mul: S.mul,\n        one: S.one,\n        zero: S.zero,\n        sub: function (f, g) { return function (x) { return R.sub(f(x), g(x)); }; }\n    };\n};\nexports.getRing = getRing;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nvar apply = function (a) {\n    return function (f) {\n        return f(a);\n    };\n};\nexports.apply = apply;\n/**\n * @since 2.0.0\n */\nfunction identity(a) {\n    return a;\n}\nexports.identity = identity;\n/**\n * @since 2.0.0\n */\nexports.unsafeCoerce = identity;\n/**\n * @since 2.0.0\n */\nfunction constant(a) {\n    return function () { return a; };\n}\nexports.constant = constant;\n/**\n * A thunk that returns always `true`.\n *\n * @since 2.0.0\n */\nexports.constTrue = constant(true);\n/**\n * A thunk that returns always `false`.\n *\n * @since 2.0.0\n */\nexports.constFalse = constant(false);\n/**\n * A thunk that returns always `null`.\n *\n * @since 2.0.0\n */\nexports.constNull = constant(null);\n/**\n * A thunk that returns always `undefined`.\n *\n * @since 2.0.0\n */\nexports.constUndefined = constant(undefined);\n/**\n * A thunk that returns always `void`.\n *\n * @since 2.0.0\n */\nexports.constVoid = exports.constUndefined;\nfunction flip(f) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (args.length > 1) {\n            return f(args[1], args[0]);\n        }\n        return function (a) { return f(a)(args[0]); };\n    };\n}\nexports.flip = flip;\nfunction flow(ab, bc, cd, de, ef, fg, gh, hi, ij) {\n    switch (arguments.length) {\n        case 1:\n            return ab;\n        case 2:\n            return function () {\n                return bc(ab.apply(this, arguments));\n            };\n        case 3:\n            return function () {\n                return cd(bc(ab.apply(this, arguments)));\n            };\n        case 4:\n            return function () {\n                return de(cd(bc(ab.apply(this, arguments))));\n            };\n        case 5:\n            return function () {\n                return ef(de(cd(bc(ab.apply(this, arguments)))));\n            };\n        case 6:\n            return function () {\n                return fg(ef(de(cd(bc(ab.apply(this, arguments))))));\n            };\n        case 7:\n            return function () {\n                return gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))));\n            };\n        case 8:\n            return function () {\n                return hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments))))))));\n            };\n        case 9:\n            return function () {\n                return ij(hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))))));\n            };\n    }\n    return;\n}\nexports.flow = flow;\n/**\n * @since 2.0.0\n */\nfunction tuple() {\n    var t = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        t[_i] = arguments[_i];\n    }\n    return t;\n}\nexports.tuple = tuple;\n/**\n * @since 2.0.0\n */\nfunction increment(n) {\n    return n + 1;\n}\nexports.increment = increment;\n/**\n * @since 2.0.0\n */\nfunction decrement(n) {\n    return n - 1;\n}\nexports.decrement = decrement;\n/**\n * @since 2.0.0\n */\nfunction absurd(_) {\n    throw new Error('Called `absurd` function which should be uncallable');\n}\nexports.absurd = absurd;\n/**\n * Creates a tupled version of this function: instead of `n` arguments, it accepts a single tuple argument.\n *\n * @example\n * import { tupled } from 'fp-ts/function'\n *\n * const add = tupled((x: number, y: number): number => x + y)\n *\n * assert.strictEqual(add([1, 2]), 3)\n *\n * @since 2.4.0\n */\nfunction tupled(f) {\n    return function (a) { return f.apply(void 0, a); };\n}\nexports.tupled = tupled;\n/**\n * Inverse function of `tupled`\n *\n * @since 2.4.0\n */\nfunction untupled(f) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return f(a);\n    };\n}\nexports.untupled = untupled;\nfunction pipe(a, ab, bc, cd, de, ef, fg, gh, hi) {\n    switch (arguments.length) {\n        case 1:\n            return a;\n        case 2:\n            return ab(a);\n        case 3:\n            return bc(ab(a));\n        case 4:\n            return cd(bc(ab(a)));\n        case 5:\n            return de(cd(bc(ab(a))));\n        case 6:\n            return ef(de(cd(bc(ab(a)))));\n        case 7:\n            return fg(ef(de(cd(bc(ab(a))))));\n        case 8:\n            return gh(fg(ef(de(cd(bc(ab(a)))))));\n        case 9:\n            return hi(gh(fg(ef(de(cd(bc(ab(a))))))));\n        default: {\n            var ret = arguments[0];\n            for (var i = 1; i < arguments.length; i++) {\n                ret = arguments[i](ret);\n            }\n            return ret;\n        }\n    }\n}\nexports.pipe = pipe;\n/**\n * Type hole simulation\n *\n * @since 2.7.0\n */\nexports.hole = absurd;\n/**\n * @since 2.11.0\n */\nvar SK = function (_, b) { return b; };\nexports.SK = SK;\n/**\n * Use `Predicate` module instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nfunction not(predicate) {\n    return function (a) { return !predicate(a); };\n}\nexports.not = not;\n/**\n * Use `Endomorphism` module instead.\n *\n * @category zone of death\n * @since 2.10.0\n * @deprecated\n */\nvar getEndomorphismMonoid = function () { return ({\n    concat: function (first, second) { return flow(first, second); },\n    empty: identity\n}); };\nexports.getEndomorphismMonoid = getEndomorphismMonoid;\n", "\"use strict\";\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromReadonlyNonEmptyArray = exports.has = exports.emptyRecord = exports.emptyReadonlyArray = exports.tail = exports.head = exports.isNonEmpty = exports.singleton = exports.right = exports.left = exports.isRight = exports.isLeft = exports.some = exports.none = exports.isSome = exports.isNone = void 0;\n// -------------------------------------------------------------------------------------\n// Option\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar isNone = function (fa) { return fa._tag === 'None'; };\nexports.isNone = isNone;\n/** @internal */\nvar isSome = function (fa) { return fa._tag === 'Some'; };\nexports.isSome = isSome;\n/** @internal */\nexports.none = { _tag: 'None' };\n/** @internal */\nvar some = function (a) { return ({ _tag: 'Some', value: a }); };\nexports.some = some;\n// -------------------------------------------------------------------------------------\n// Either\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar isLeft = function (ma) { return ma._tag === 'Left'; };\nexports.isLeft = isLeft;\n/** @internal */\nvar isRight = function (ma) { return ma._tag === 'Right'; };\nexports.isRight = isRight;\n/** @internal */\nvar left = function (e) { return ({ _tag: 'Left', left: e }); };\nexports.left = left;\n/** @internal */\nvar right = function (a) { return ({ _tag: 'Right', right: a }); };\nexports.right = right;\n// -------------------------------------------------------------------------------------\n// ReadonlyNonEmptyArray\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar singleton = function (a) { return [a]; };\nexports.singleton = singleton;\n/** @internal */\nvar isNonEmpty = function (as) { return as.length > 0; };\nexports.isNonEmpty = isNonEmpty;\n/** @internal */\nvar head = function (as) { return as[0]; };\nexports.head = head;\n/** @internal */\nvar tail = function (as) { return as.slice(1); };\nexports.tail = tail;\n// -------------------------------------------------------------------------------------\n// empty\n// -------------------------------------------------------------------------------------\n/** @internal */\nexports.emptyReadonlyArray = [];\n/** @internal */\nexports.emptyRecord = {};\n// -------------------------------------------------------------------------------------\n// Record\n// -------------------------------------------------------------------------------------\n/** @internal */\nexports.has = Object.prototype.hasOwnProperty;\n// -------------------------------------------------------------------------------------\n// NonEmptyArray\n// -------------------------------------------------------------------------------------\n/** @internal */\nvar fromReadonlyNonEmptyArray = function (as) { return __spreadArray([as[0]], as.slice(1), true); };\nexports.fromReadonlyNonEmptyArray = fromReadonlyNonEmptyArray;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sequenceS = exports.sequenceT = exports.getApplySemigroup = exports.apS = exports.apSecond = exports.apFirst = exports.ap = void 0;\nvar function_1 = require(\"./function\");\nvar _ = __importStar(require(\"./internal\"));\nfunction ap(F, G) {\n    return function (fa) {\n        return function (fab) {\n            return F.ap(F.map(fab, function (gab) { return function (ga) { return G.ap(gab, ga); }; }), fa);\n        };\n    };\n}\nexports.ap = ap;\nfunction apFirst(A) {\n    return function (second) { return function (first) {\n        return A.ap(A.map(first, function (a) { return function () { return a; }; }), second);\n    }; };\n}\nexports.apFirst = apFirst;\nfunction apSecond(A) {\n    return function (second) {\n        return function (first) {\n            return A.ap(A.map(first, function () { return function (b) { return b; }; }), second);\n        };\n    };\n}\nexports.apSecond = apSecond;\nfunction apS(F) {\n    return function (name, fb) {\n        return function (fa) {\n            return F.ap(F.map(fa, function (a) { return function (b) {\n                var _a;\n                return Object.assign({}, a, (_a = {}, _a[name] = b, _a));\n            }; }), fb);\n        };\n    };\n}\nexports.apS = apS;\nfunction getApplySemigroup(F) {\n    return function (S) { return ({\n        concat: function (first, second) {\n            return F.ap(F.map(first, function (x) { return function (y) { return S.concat(x, y); }; }), second);\n        }\n    }); };\n}\nexports.getApplySemigroup = getApplySemigroup;\nfunction curried(f, n, acc) {\n    return function (x) {\n        var combined = Array(acc.length + 1);\n        for (var i = 0; i < acc.length; i++) {\n            combined[i] = acc[i];\n        }\n        combined[acc.length] = x;\n        return n === 0 ? f.apply(null, combined) : curried(f, n - 1, combined);\n    };\n}\nvar tupleConstructors = {\n    1: function (a) { return [a]; },\n    2: function (a) { return function (b) { return [a, b]; }; },\n    3: function (a) { return function (b) { return function (c) { return [a, b, c]; }; }; },\n    4: function (a) { return function (b) { return function (c) { return function (d) { return [a, b, c, d]; }; }; }; },\n    5: function (a) { return function (b) { return function (c) { return function (d) { return function (e) { return [a, b, c, d, e]; }; }; }; }; }\n};\nfunction getTupleConstructor(len) {\n    if (!_.has.call(tupleConstructors, len)) {\n        tupleConstructors[len] = curried(function_1.tuple, len - 1, []);\n    }\n    return tupleConstructors[len];\n}\nfunction sequenceT(F) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var len = args.length;\n        var f = getTupleConstructor(len);\n        var fas = F.map(args[0], f);\n        for (var i = 1; i < len; i++) {\n            fas = F.ap(fas, args[i]);\n        }\n        return fas;\n    };\n}\nexports.sequenceT = sequenceT;\nfunction getRecordConstructor(keys) {\n    var len = keys.length;\n    switch (len) {\n        case 1:\n            return function (a) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a);\n            };\n        case 2:\n            return function (a) { return function (b) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a[keys[1]] = b, _a);\n            }; };\n        case 3:\n            return function (a) { return function (b) { return function (c) {\n                var _a;\n                return (_a = {}, _a[keys[0]] = a, _a[keys[1]] = b, _a[keys[2]] = c, _a);\n            }; }; };\n        case 4:\n            return function (a) { return function (b) { return function (c) { return function (d) {\n                var _a;\n                return (_a = {},\n                    _a[keys[0]] = a,\n                    _a[keys[1]] = b,\n                    _a[keys[2]] = c,\n                    _a[keys[3]] = d,\n                    _a);\n            }; }; }; };\n        case 5:\n            return function (a) { return function (b) { return function (c) { return function (d) { return function (e) {\n                var _a;\n                return (_a = {},\n                    _a[keys[0]] = a,\n                    _a[keys[1]] = b,\n                    _a[keys[2]] = c,\n                    _a[keys[3]] = d,\n                    _a[keys[4]] = e,\n                    _a);\n            }; }; }; }; };\n        default:\n            return curried(function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var r = {};\n                for (var i = 0; i < len; i++) {\n                    r[keys[i]] = args[i];\n                }\n                return r;\n            }, len - 1, []);\n    }\n}\nfunction sequenceS(F) {\n    return function (r) {\n        var keys = Object.keys(r);\n        var len = keys.length;\n        var f = getRecordConstructor(keys);\n        var fr = F.map(r[keys[0]], f);\n        for (var i = 1; i < len; i++) {\n            fr = F.ap(fr, r[keys[i]]);\n        }\n        return fr;\n    };\n}\nexports.sequenceS = sequenceS;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFunctorComposition = exports.let = exports.bindTo = exports.flap = exports.map = void 0;\n/**\n * A `Functor` is a type constructor which supports a mapping operation `map`.\n *\n * `map` can be used to turn functions `a -> b` into functions `f a -> f b` whose argument and return types use the type\n * constructor `f` to represent some computational context.\n *\n * Instances must satisfy the following laws:\n *\n * 1. Identity: `F.map(fa, a => a) <-> fa`\n * 2. Composition: `F.map(fa, a => bc(ab(a))) <-> F.map(F.map(fa, ab), bc)`\n *\n * @since 2.0.0\n */\nvar function_1 = require(\"./function\");\nfunction map(F, G) {\n    return function (f) { return function (fa) { return F.map(fa, function (ga) { return G.map(ga, f); }); }; };\n}\nexports.map = map;\nfunction flap(F) {\n    return function (a) { return function (fab) { return F.map(fab, function (f) { return f(a); }); }; };\n}\nexports.flap = flap;\nfunction bindTo(F) {\n    return function (name) { return function (fa) { return F.map(fa, function (a) {\n        var _a;\n        return (_a = {}, _a[name] = a, _a);\n    }); }; };\n}\nexports.bindTo = bindTo;\nfunction let_(F) {\n    return function (name, f) { return function (fa) { return F.map(fa, function (a) {\n        var _a;\n        return Object.assign({}, a, (_a = {}, _a[name] = f(a), _a));\n    }); }; };\n}\nexports.let = let_;\n/** @deprecated */\nfunction getFunctorComposition(F, G) {\n    var _map = map(F, G);\n    return {\n        map: function (fga, f) { return (0, function_1.pipe)(fga, _map(f)); }\n    };\n}\nexports.getFunctorComposition = getFunctorComposition;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getApplicativeComposition = exports.getApplicativeMonoid = void 0;\n/**\n * The `Applicative` type class extends the `Apply` type class with a `of` function, which can be used to create values\n * of type `f a` from values of type `a`.\n *\n * Where `Apply` provides the ability to lift functions of two or more arguments to functions whose arguments are\n * wrapped using `f`, and `Functor` provides the ability to lift functions of one argument, `pure` can be seen as the\n * function which lifts functions of _zero_ arguments. That is, `Applicative` functors support a lifting operation for\n * any number of function arguments.\n *\n * Instances must satisfy the following laws in addition to the `Apply` laws:\n *\n * 1. Identity: `A.ap(A.of(a => a), fa) <-> fa`\n * 2. Homomorphism: `A.ap(A.of(ab), A.of(a)) <-> A.of(ab(a))`\n * 3. Interchange: `A.ap(fab, A.of(a)) <-> A.ap(A.of(ab => ab(a)), fab)`\n *\n * Note. `Functor`'s `map` can be derived: `A.map(x, f) = A.ap(A.of(f), x)`\n *\n * @since 2.0.0\n */\nvar Apply_1 = require(\"./Apply\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nfunction getApplicativeMonoid(F) {\n    var f = (0, Apply_1.getApplySemigroup)(F);\n    return function (M) { return ({\n        concat: f(M).concat,\n        empty: F.of(M.empty)\n    }); };\n}\nexports.getApplicativeMonoid = getApplicativeMonoid;\n/** @deprecated */\nfunction getApplicativeComposition(F, G) {\n    var map = (0, Functor_1.getFunctorComposition)(F, G).map;\n    var _ap = (0, Apply_1.ap)(F, G);\n    return {\n        map: map,\n        of: function (a) { return F.of(G.of(a)); },\n        ap: function (fgab, fga) { return (0, function_1.pipe)(fgab, _ap(fga)); }\n    };\n}\nexports.getApplicativeComposition = getApplicativeComposition;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bind = exports.chainFirst = void 0;\nfunction chainFirst(M) {\n    return function (f) { return function (first) { return M.chain(first, function (a) { return M.map(f(a), function () { return a; }); }); }; };\n}\nexports.chainFirst = chainFirst;\nfunction bind(M) {\n    return function (name, f) { return function (ma) { return M.chain(ma, function (a) { return M.map(f(a), function (b) {\n        var _a;\n        return Object.assign({}, a, (_a = {}, _a[name] = b, _a));\n    }); }); }; };\n}\nexports.bind = bind;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.tailRec = void 0;\n/**\n * @since 2.0.0\n */\nvar tailRec = function (startWith, f) {\n    var ab = f(startWith);\n    while (ab._tag === 'Left') {\n        ab = f(ab.left);\n    }\n    return ab.right;\n};\nexports.tailRec = tailRec;\n", "\"use strict\";\n/**\n * The `FromEither` type class represents those data types which support errors.\n *\n * @since 2.10.0\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.filterOrElse = exports.chainFirstEitherK = exports.chainEitherK = exports.fromEitherK = exports.chainOptionK = exports.fromOptionK = exports.fromPredicate = exports.fromOption = void 0;\nvar Chain_1 = require(\"./Chain\");\nvar function_1 = require(\"./function\");\nvar _ = __importStar(require(\"./internal\"));\nfunction fromOption(F) {\n    return function (onNone) { return function (ma) { return F.fromEither(_.isNone(ma) ? _.left(onNone()) : _.right(ma.value)); }; };\n}\nexports.fromOption = fromOption;\nfunction fromPredicate(F) {\n    return function (predicate, onFalse) {\n        return function (a) {\n            return F.fromEither(predicate(a) ? _.right(a) : _.left(onFalse(a)));\n        };\n    };\n}\nexports.fromPredicate = fromPredicate;\nfunction fromOptionK(F) {\n    var fromOptionF = fromOption(F);\n    return function (onNone) {\n        var from = fromOptionF(onNone);\n        return function (f) { return (0, function_1.flow)(f, from); };\n    };\n}\nexports.fromOptionK = fromOptionK;\nfunction chainOptionK(F, M) {\n    var fromOptionKF = fromOptionK(F);\n    return function (onNone) {\n        var from = fromOptionKF(onNone);\n        return function (f) { return function (ma) { return M.chain(ma, from(f)); }; };\n    };\n}\nexports.chainOptionK = chainOptionK;\nfunction fromEitherK(F) {\n    return function (f) { return (0, function_1.flow)(f, F.fromEither); };\n}\nexports.fromEitherK = fromEitherK;\nfunction chainEitherK(F, M) {\n    var fromEitherKF = fromEitherK(F);\n    return function (f) { return function (ma) { return M.chain(ma, fromEitherKF(f)); }; };\n}\nexports.chainEitherK = chainEitherK;\nfunction chainFirstEitherK(F, M) {\n    return (0, function_1.flow)(fromEitherK(F), (0, Chain_1.chainFirst)(M));\n}\nexports.chainFirstEitherK = chainFirstEitherK;\nfunction filterOrElse(F, M) {\n    return function (predicate, onFalse) {\n        return function (ma) {\n            return M.chain(ma, function (a) { return F.fromEither(predicate(a) ? _.right(a) : _.left(onFalse(a))); });\n        };\n    };\n}\nexports.filterOrElse = filterOrElse;\n", "\"use strict\";\n/**\n * ```ts\n * interface Separated<E, A> {\n *    readonly left: E\n *    readonly right: A\n * }\n * ```\n *\n * Represents a result of separating a whole into two parts.\n *\n * @since 2.10.0\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.right = exports.left = exports.flap = exports.Functor = exports.Bifunctor = exports.URI = exports.bimap = exports.mapLeft = exports.map = exports.separated = void 0;\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.10.0\n */\nvar separated = function (left, right) { return ({ left: left, right: right }); };\nexports.separated = separated;\nvar _map = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.map)(f)); };\nvar _mapLeft = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.mapLeft)(f)); };\nvar _bimap = function (fa, g, f) { return (0, function_1.pipe)(fa, (0, exports.bimap)(g, f)); };\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category mapping\n * @since 2.10.0\n */\nvar map = function (f) {\n    return function (fa) {\n        return (0, exports.separated)((0, exports.left)(fa), f((0, exports.right)(fa)));\n    };\n};\nexports.map = map;\n/**\n * Map a function over the first type argument of a bifunctor.\n *\n * @category error handling\n * @since 2.10.0\n */\nvar mapLeft = function (f) {\n    return function (fa) {\n        return (0, exports.separated)(f((0, exports.left)(fa)), (0, exports.right)(fa));\n    };\n};\nexports.mapLeft = mapLeft;\n/**\n * Map a pair of functions over the two type arguments of the bifunctor.\n *\n * @category mapping\n * @since 2.10.0\n */\nvar bimap = function (f, g) {\n    return function (fa) {\n        return (0, exports.separated)(f((0, exports.left)(fa)), g((0, exports.right)(fa)));\n    };\n};\nexports.bimap = bimap;\n/**\n * @category type lambdas\n * @since 2.10.0\n */\nexports.URI = 'Separated';\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Bifunctor = {\n    URI: exports.URI,\n    mapLeft: _mapLeft,\n    bimap: _bimap\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * @category mapping\n * @since 2.10.0\n */\nexports.flap = (0, Functor_1.flap)(exports.Functor);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.10.0\n */\nvar left = function (s) { return s.left; };\nexports.left = left;\n/**\n * @since 2.10.0\n */\nvar right = function (s) { return s.right; };\nexports.right = right;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.filterE = exports.witherDefault = exports.wiltDefault = void 0;\nvar _ = __importStar(require(\"./internal\"));\nfunction wiltDefault(T, C) {\n    return function (F) {\n        var traverseF = T.traverse(F);\n        return function (wa, f) { return F.map(traverseF(wa, f), C.separate); };\n    };\n}\nexports.wiltDefault = wiltDefault;\nfunction witherDefault(T, C) {\n    return function (F) {\n        var traverseF = T.traverse(F);\n        return function (wa, f) { return F.map(traverseF(wa, f), C.compact); };\n    };\n}\nexports.witherDefault = witherDefault;\nfunction filterE(W) {\n    return function (F) {\n        var witherF = W.wither(F);\n        return function (predicate) { return function (ga) { return witherF(ga, function (a) { return F.map(predicate(a), function (b) { return (b ? _.some(a) : _.none); }); }); }; };\n    };\n}\nexports.filterE = filterE;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fold = exports.match = exports.foldW = exports.matchW = exports.isRight = exports.isLeft = exports.fromOption = exports.fromPredicate = exports.FromEither = exports.MonadThrow = exports.throwError = exports.ChainRec = exports.Extend = exports.extend = exports.Alt = exports.alt = exports.altW = exports.Bifunctor = exports.mapLeft = exports.bimap = exports.Traversable = exports.sequence = exports.traverse = exports.Foldable = exports.reduceRight = exports.foldMap = exports.reduce = exports.Monad = exports.Chain = exports.chain = exports.chainW = exports.Applicative = exports.Apply = exports.ap = exports.apW = exports.Pointed = exports.of = exports.Functor = exports.map = exports.getAltValidation = exports.getApplicativeValidation = exports.getWitherable = exports.getFilterable = exports.getCompactable = exports.getSemigroup = exports.getEq = exports.getShow = exports.URI = exports.right = exports.left = void 0;\nexports.getValidation = exports.getValidationMonoid = exports.getValidationSemigroup = exports.getApplyMonoid = exports.getApplySemigroup = exports.either = exports.stringifyJSON = exports.parseJSON = exports.sequenceArray = exports.traverseArray = exports.traverseArrayWithIndex = exports.traverseReadonlyArrayWithIndex = exports.traverseReadonlyNonEmptyArrayWithIndex = exports.ApT = exports.apSW = exports.apS = exports.bindW = exports.bind = exports.let = exports.bindTo = exports.Do = exports.exists = exports.elem = exports.toError = exports.toUnion = exports.chainNullableK = exports.fromNullableK = exports.tryCatchK = exports.tryCatch = exports.fromNullable = exports.orElse = exports.orElseW = exports.swap = exports.filterOrElseW = exports.filterOrElse = exports.chainOptionK = exports.fromOptionK = exports.duplicate = exports.flatten = exports.flattenW = exports.chainFirstW = exports.chainFirst = exports.apSecondW = exports.apSecond = exports.apFirstW = exports.apFirst = exports.flap = exports.getOrElse = exports.getOrElseW = void 0;\nvar Applicative_1 = require(\"./Applicative\");\nvar Apply_1 = require(\"./Apply\");\nvar Chain_1 = require(\"./Chain\");\nvar ChainRec_1 = require(\"./ChainRec\");\nvar FromEither_1 = require(\"./FromEither\");\nvar function_1 = require(\"./function\");\nvar Functor_1 = require(\"./Functor\");\nvar _ = __importStar(require(\"./internal\"));\nvar Separated_1 = require(\"./Separated\");\nvar Witherable_1 = require(\"./Witherable\");\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Constructs a new `Either` holding a `Left` value. This usually represents a failure, due to the right-bias of this\n * structure.\n *\n * @category constructors\n * @since 2.0.0\n */\nexports.left = _.left;\n/**\n * Constructs a new `Either` holding a `Right` value. This usually represents a successful value due to the right bias\n * of this structure.\n *\n * @category constructors\n * @since 2.0.0\n */\nexports.right = _.right;\nvar _map = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.map)(f)); };\nvar _ap = function (fab, fa) { return (0, function_1.pipe)(fab, (0, exports.ap)(fa)); };\n/* istanbul ignore next */\nvar _chain = function (ma, f) { return (0, function_1.pipe)(ma, (0, exports.chain)(f)); };\n/* istanbul ignore next */\nvar _reduce = function (fa, b, f) { return (0, function_1.pipe)(fa, (0, exports.reduce)(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) { return function (fa, f) {\n    var foldMapM = (0, exports.foldMap)(M);\n    return (0, function_1.pipe)(fa, foldMapM(f));\n}; };\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return (0, function_1.pipe)(fa, (0, exports.reduceRight)(b, f)); };\nvar _traverse = function (F) {\n    var traverseF = (0, exports.traverse)(F);\n    return function (ta, f) { return (0, function_1.pipe)(ta, traverseF(f)); };\n};\nvar _bimap = function (fa, f, g) { return (0, function_1.pipe)(fa, (0, exports.bimap)(f, g)); };\nvar _mapLeft = function (fa, f) { return (0, function_1.pipe)(fa, (0, exports.mapLeft)(f)); };\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return (0, function_1.pipe)(fa, (0, exports.alt)(that)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return (0, function_1.pipe)(wa, (0, exports.extend)(f)); };\nvar _chainRec = function (a, f) {\n    return (0, ChainRec_1.tailRec)(f(a), function (e) {\n        return (0, exports.isLeft)(e) ? (0, exports.right)((0, exports.left)(e.left)) : (0, exports.isLeft)(e.right) ? (0, exports.left)(f(e.right.left)) : (0, exports.right)((0, exports.right)(e.right.right));\n    });\n};\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexports.URI = 'Either';\n/**\n * @category instances\n * @since 2.0.0\n */\nvar getShow = function (SE, SA) { return ({\n    show: function (ma) { return ((0, exports.isLeft)(ma) ? \"left(\".concat(SE.show(ma.left), \")\") : \"right(\".concat(SA.show(ma.right), \")\")); }\n}); };\nexports.getShow = getShow;\n/**\n * @category instances\n * @since 2.0.0\n */\nvar getEq = function (EL, EA) { return ({\n    equals: function (x, y) {\n        return x === y || ((0, exports.isLeft)(x) ? (0, exports.isLeft)(y) && EL.equals(x.left, y.left) : (0, exports.isRight)(y) && EA.equals(x.right, y.right));\n    }\n}); };\nexports.getEq = getEq;\n/**\n * Semigroup returning the left-most non-`Left` value. If both operands are `Right`s then the inner values are\n * concatenated using the provided `Semigroup`\n *\n * @example\n * import { getSemigroup, left, right } from 'fp-ts/Either'\n * import { SemigroupSum } from 'fp-ts/number'\n *\n * const S = getSemigroup<string, number>(SemigroupSum)\n * assert.deepStrictEqual(S.concat(left('a'), left('b')), left('a'))\n * assert.deepStrictEqual(S.concat(left('a'), right(2)), right(2))\n * assert.deepStrictEqual(S.concat(right(1), left('b')), right(1))\n * assert.deepStrictEqual(S.concat(right(1), right(2)), right(3))\n *\n * @category instances\n * @since 2.0.0\n */\nvar getSemigroup = function (S) { return ({\n    concat: function (x, y) { return ((0, exports.isLeft)(y) ? x : (0, exports.isLeft)(x) ? y : (0, exports.right)(S.concat(x.right, y.right))); }\n}); };\nexports.getSemigroup = getSemigroup;\n/**\n * Builds a `Compactable` instance for `Either` given `Monoid` for the left side.\n *\n * @category filtering\n * @since 2.10.0\n */\nvar getCompactable = function (M) {\n    var empty = (0, exports.left)(M.empty);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        compact: function (ma) { return ((0, exports.isLeft)(ma) ? ma : ma.right._tag === 'None' ? empty : (0, exports.right)(ma.right.value)); },\n        separate: function (ma) {\n            return (0, exports.isLeft)(ma)\n                ? (0, Separated_1.separated)(ma, ma)\n                : (0, exports.isLeft)(ma.right)\n                    ? (0, Separated_1.separated)((0, exports.right)(ma.right.left), empty)\n                    : (0, Separated_1.separated)(empty, (0, exports.right)(ma.right.right));\n        }\n    };\n};\nexports.getCompactable = getCompactable;\n/**\n * Builds a `Filterable` instance for `Either` given `Monoid` for the left side\n *\n * @category filtering\n * @since 2.10.0\n */\nvar getFilterable = function (M) {\n    var empty = (0, exports.left)(M.empty);\n    var _a = (0, exports.getCompactable)(M), compact = _a.compact, separate = _a.separate;\n    var filter = function (ma, predicate) {\n        return (0, exports.isLeft)(ma) ? ma : predicate(ma.right) ? ma : empty;\n    };\n    var partition = function (ma, p) {\n        return (0, exports.isLeft)(ma)\n            ? (0, Separated_1.separated)(ma, ma)\n            : p(ma.right)\n                ? (0, Separated_1.separated)(empty, (0, exports.right)(ma.right))\n                : (0, Separated_1.separated)((0, exports.right)(ma.right), empty);\n    };\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        compact: compact,\n        separate: separate,\n        filter: filter,\n        filterMap: function (ma, f) {\n            if ((0, exports.isLeft)(ma)) {\n                return ma;\n            }\n            var ob = f(ma.right);\n            return ob._tag === 'None' ? empty : (0, exports.right)(ob.value);\n        },\n        partition: partition,\n        partitionMap: function (ma, f) {\n            if ((0, exports.isLeft)(ma)) {\n                return (0, Separated_1.separated)(ma, ma);\n            }\n            var e = f(ma.right);\n            return (0, exports.isLeft)(e) ? (0, Separated_1.separated)((0, exports.right)(e.left), empty) : (0, Separated_1.separated)(empty, (0, exports.right)(e.right));\n        }\n    };\n};\nexports.getFilterable = getFilterable;\n/**\n * Builds `Witherable` instance for `Either` given `Monoid` for the left side\n *\n * @category filtering\n * @since 2.0.0\n */\nvar getWitherable = function (M) {\n    var F_ = (0, exports.getFilterable)(M);\n    var C = (0, exports.getCompactable)(M);\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        compact: F_.compact,\n        separate: F_.separate,\n        filter: F_.filter,\n        filterMap: F_.filterMap,\n        partition: F_.partition,\n        partitionMap: F_.partitionMap,\n        traverse: _traverse,\n        sequence: exports.sequence,\n        reduce: _reduce,\n        foldMap: _foldMap,\n        reduceRight: _reduceRight,\n        wither: (0, Witherable_1.witherDefault)(exports.Traversable, C),\n        wilt: (0, Witherable_1.wiltDefault)(exports.Traversable, C)\n    };\n};\nexports.getWitherable = getWitherable;\n/**\n * The default [`Applicative`](#applicative) instance returns the first error, if you want to\n * get all errors you need to provide a way to concatenate them via a `Semigroup`.\n *\n * @example\n * import * as A from 'fp-ts/Apply'\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import * as S from 'fp-ts/Semigroup'\n * import * as string from 'fp-ts/string'\n *\n * const parseString = (u: unknown): E.Either<string, string> =>\n *   typeof u === 'string' ? E.right(u) : E.left('not a string')\n *\n * const parseNumber = (u: unknown): E.Either<string, number> =>\n *   typeof u === 'number' ? E.right(u) : E.left('not a number')\n *\n * interface Person {\n *   readonly name: string\n *   readonly age: number\n * }\n *\n * const parsePerson = (\n *   input: Record<string, unknown>\n * ): E.Either<string, Person> =>\n *   pipe(\n *     E.Do,\n *     E.apS('name', parseString(input.name)),\n *     E.apS('age', parseNumber(input.age))\n *   )\n *\n * assert.deepStrictEqual(parsePerson({}), E.left('not a string')) // <= first error\n *\n * const Applicative = E.getApplicativeValidation(\n *   pipe(string.Semigroup, S.intercalate(', '))\n * )\n *\n * const apS = A.apS(Applicative)\n *\n * const parsePersonAll = (\n *   input: Record<string, unknown>\n * ): E.Either<string, Person> =>\n *   pipe(\n *     E.Do,\n *     apS('name', parseString(input.name)),\n *     apS('age', parseNumber(input.age))\n *   )\n *\n * assert.deepStrictEqual(parsePersonAll({}), E.left('not a string, not a number')) // <= all errors\n *\n * @category error handling\n * @since 2.7.0\n */\nvar getApplicativeValidation = function (SE) { return ({\n    URI: exports.URI,\n    _E: undefined,\n    map: _map,\n    ap: function (fab, fa) {\n        return (0, exports.isLeft)(fab)\n            ? (0, exports.isLeft)(fa)\n                ? (0, exports.left)(SE.concat(fab.left, fa.left))\n                : fab\n            : (0, exports.isLeft)(fa)\n                ? fa\n                : (0, exports.right)(fab.right(fa.right));\n    },\n    of: exports.of\n}); };\nexports.getApplicativeValidation = getApplicativeValidation;\n/**\n * The default [`Alt`](#alt) instance returns the last error, if you want to\n * get all errors you need to provide a way to concatenate them via a `Semigroup`.\n *\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import * as S from 'fp-ts/Semigroup'\n * import * as string from 'fp-ts/string'\n *\n * const parseString = (u: unknown): E.Either<string, string> =>\n *   typeof u === 'string' ? E.right(u) : E.left('not a string')\n *\n * const parseNumber = (u: unknown): E.Either<string, number> =>\n *   typeof u === 'number' ? E.right(u) : E.left('not a number')\n *\n * const parse = (u: unknown): E.Either<string, string | number> =>\n *   pipe(\n *     parseString(u),\n *     E.alt<string, string | number>(() => parseNumber(u))\n *   )\n *\n * assert.deepStrictEqual(parse(true), E.left('not a number')) // <= last error\n *\n * const Alt = E.getAltValidation(pipe(string.Semigroup, S.intercalate(', ')))\n *\n * const parseAll = (u: unknown): E.Either<string, string | number> =>\n *   Alt.alt<string | number>(parseString(u), () => parseNumber(u))\n *\n * assert.deepStrictEqual(parseAll(true), E.left('not a string, not a number')) // <= all errors\n *\n * @category error handling\n * @since 2.7.0\n */\nvar getAltValidation = function (SE) { return ({\n    URI: exports.URI,\n    _E: undefined,\n    map: _map,\n    alt: function (me, that) {\n        if ((0, exports.isRight)(me)) {\n            return me;\n        }\n        var ea = that();\n        return (0, exports.isLeft)(ea) ? (0, exports.left)(SE.concat(me.left, ea.left)) : ea;\n    }\n}); };\nexports.getAltValidation = getAltValidation;\n/**\n * @category mapping\n * @since 2.0.0\n */\nvar map = function (f) { return function (fa) {\n    return (0, exports.isLeft)(fa) ? fa : (0, exports.right)(f(fa.right));\n}; };\nexports.map = map;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Functor = {\n    URI: exports.URI,\n    map: _map\n};\n/**\n * @category constructors\n * @since 2.7.0\n */\nexports.of = exports.right;\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Pointed = {\n    URI: exports.URI,\n    of: exports.of\n};\n/**\n * Less strict version of [`ap`](#ap).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @since 2.8.0\n */\nvar apW = function (fa) { return function (fab) {\n    return (0, exports.isLeft)(fab) ? fab : (0, exports.isLeft)(fa) ? fa : (0, exports.right)(fab.right(fa.right));\n}; };\nexports.apW = apW;\n/**\n * @since 2.0.0\n */\nexports.ap = exports.apW;\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Apply = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Applicative = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of\n};\n/**\n * Less strict version of [`chain`](#chain).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * const e1: E.Either<string, number> = E.right(1)\n * const e2: E.Either<number, number> = E.right(2)\n *\n * export const result1 = pipe(\n *   // @ts-expect-error\n *   e1,\n *   E.chain(() => e2)\n * )\n *\n * // merged error types -----v-------------v\n * // const result2: E.Either<string | number, number>\n * export const result2 = pipe(\n *   e1, // no error\n *   E.chainW(() => e2)\n * )\n *\n * @category sequencing\n * @since 2.6.0\n */\nvar chainW = function (f) {\n    return function (ma) {\n        return (0, exports.isLeft)(ma) ? ma : f(ma.right);\n    };\n};\nexports.chainW = chainW;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category sequencing\n * @since 2.0.0\n */\nexports.chain = exports.chainW;\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.Chain = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Monad = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain\n};\n/**\n * Left-associative fold of a structure.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n *\n * const startWith = 'prefix'\n * const concat = (a: string, b: string) => `${a}:${b}`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.reduce(startWith, concat)),\n *   'prefix:a'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.reduce(startWith, concat)),\n *   'prefix'\n * )\n *\n * @category folding\n * @since 2.0.0\n */\nvar reduce = function (b, f) { return function (fa) {\n    return (0, exports.isLeft)(fa) ? b : f(b, fa.right);\n}; };\nexports.reduce = reduce;\n/**\n * Map each element of the structure to a monoid, and combine the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n * import * as S from 'fp-ts/string'\n *\n * const yell = (a: string) => `${a}!`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.foldMap(S.Monoid)(yell)),\n *   'a!'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.foldMap(S.Monoid)(yell)),\n *   S.Monoid.empty\n * )\n *\n * @category folding\n * @since 2.0.0\n */\nvar foldMap = function (M) { return function (f) { return function (fa) {\n    return (0, exports.isLeft)(fa) ? M.empty : f(fa.right);\n}; }; };\nexports.foldMap = foldMap;\n/**\n * Right-associative fold of a structure.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n *\n * const startWith = 'postfix'\n * const concat = (a: string, b: string) => `${a}:${b}`\n *\n * assert.deepStrictEqual(\n *   pipe(E.right('a'), E.reduceRight(startWith, concat)),\n *   'a:postfix'\n * )\n *\n * assert.deepStrictEqual(\n *   pipe(E.left('e'), E.reduceRight(startWith, concat)),\n *   'postfix'\n * )\n *\n * @category folding\n * @since 2.0.0\n */\nvar reduceRight = function (b, f) { return function (fa) {\n    return (0, exports.isLeft)(fa) ? b : f(fa.right, b);\n}; };\nexports.reduceRight = reduceRight;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Foldable = {\n    URI: exports.URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * Map each element of a structure to an action, evaluate these actions from left to right, and collect the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as E from 'fp-ts/Either'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(['a']), E.traverse(O.Applicative)(RA.head)),\n *   O.some(E.right('a'))\n *  )\n *\n * assert.deepStrictEqual(\n *   pipe(E.right([]), E.traverse(O.Applicative)(RA.head)),\n *   O.none\n * )\n *\n * @category traversing\n * @since 2.6.3\n */\nvar traverse = function (F) {\n    return function (f) {\n        return function (ta) {\n            return (0, exports.isLeft)(ta) ? F.of((0, exports.left)(ta.left)) : F.map(f(ta.right), exports.right);\n        };\n    };\n};\nexports.traverse = traverse;\n/**\n * Evaluate each monadic action in the structure from left to right, and collect the results.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as E from 'fp-ts/Either'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(O.some('a')), E.sequence(O.Applicative)),\n *   O.some(E.right('a'))\n *  )\n *\n * assert.deepStrictEqual(\n *   pipe(E.right(O.none), E.sequence(O.Applicative)),\n *   O.none\n * )\n *\n * @category traversing\n * @since 2.6.3\n */\nvar sequence = function (F) {\n    return function (ma) {\n        return (0, exports.isLeft)(ma) ? F.of((0, exports.left)(ma.left)) : F.map(ma.right, exports.right);\n    };\n};\nexports.sequence = sequence;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Traversable = {\n    URI: exports.URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence\n};\n/**\n * Map a pair of functions over the two type arguments of the bifunctor.\n *\n * @category mapping\n * @since 2.0.0\n */\nvar bimap = function (f, g) { return function (fa) {\n    return (0, exports.isLeft)(fa) ? (0, exports.left)(f(fa.left)) : (0, exports.right)(g(fa.right));\n}; };\nexports.bimap = bimap;\n/**\n * Map a function over the first type argument of a bifunctor.\n *\n * @category error handling\n * @since 2.0.0\n */\nvar mapLeft = function (f) { return function (fa) {\n    return (0, exports.isLeft)(fa) ? (0, exports.left)(f(fa.left)) : fa;\n}; };\nexports.mapLeft = mapLeft;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Bifunctor = {\n    URI: exports.URI,\n    bimap: _bimap,\n    mapLeft: _mapLeft\n};\n/**\n * Less strict version of [`alt`](#alt).\n *\n * The `W` suffix (short for **W**idening) means that the error and the return types will be merged.\n *\n * @category error handling\n * @since 2.9.0\n */\nvar altW = function (that) { return function (fa) {\n    return (0, exports.isLeft)(fa) ? that() : fa;\n}; };\nexports.altW = altW;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `Either` returns the left-most non-`Left` value (or the right-most `Left` value if both values are `Left`).\n *\n * | x        | y        | pipe(x, alt(() => y) |\n * | -------- | -------- | -------------------- |\n * | left(a)  | left(b)  | left(b)              |\n * | left(a)  | right(2) | right(2)             |\n * | right(1) | left(b)  | right(1)             |\n * | right(1) | right(2) | right(1)             |\n *\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     E.left('a'),\n *     E.alt(() => E.left('b'))\n *   ),\n *   E.left('b')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.left('a'),\n *     E.alt(() => E.right(2))\n *   ),\n *   E.right(2)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.right(1),\n *     E.alt(() => E.left('b'))\n *   ),\n *   E.right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.right(1),\n *     E.alt(() => E.right(2))\n *   ),\n *   E.right(1)\n * )\n *\n * @category error handling\n * @since 2.0.0\n */\nexports.alt = exports.altW;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Alt = {\n    URI: exports.URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @since 2.0.0\n */\nvar extend = function (f) { return function (wa) {\n    return (0, exports.isLeft)(wa) ? wa : (0, exports.right)(f(wa));\n}; };\nexports.extend = extend;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.Extend = {\n    URI: exports.URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.ChainRec = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: _chainRec\n};\n/**\n * @since 2.6.3\n */\nexports.throwError = exports.left;\n/**\n * @category instances\n * @since 2.7.0\n */\nexports.MonadThrow = {\n    URI: exports.URI,\n    map: _map,\n    ap: _ap,\n    of: exports.of,\n    chain: _chain,\n    throwError: exports.throwError\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexports.FromEither = {\n    URI: exports.URI,\n    fromEither: function_1.identity\n};\n/**\n * @example\n * import { fromPredicate, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     1,\n *     fromPredicate(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     -1,\n *     fromPredicate(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   left('error')\n * )\n *\n * @category lifting\n * @since 2.0.0\n */\nexports.fromPredicate = (0, FromEither_1.fromPredicate)(exports.FromEither);\n// -------------------------------------------------------------------------------------\n// conversions\n// -------------------------------------------------------------------------------------\n/**\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n * import * as O from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     O.some(1),\n *     E.fromOption(() => 'error')\n *   ),\n *   E.right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     O.none,\n *     E.fromOption(() => 'error')\n *   ),\n *   E.left('error')\n * )\n *\n * @category conversions\n * @since 2.0.0\n */\nexports.fromOption = \n/*#__PURE__*/ (0, FromEither_1.fromOption)(exports.FromEither);\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * Returns `true` if the either is an instance of `Left`, `false` otherwise.\n *\n * @category refinements\n * @since 2.0.0\n */\nexports.isLeft = _.isLeft;\n/**\n * Returns `true` if the either is an instance of `Right`, `false` otherwise.\n *\n * @category refinements\n * @since 2.0.0\n */\nexports.isRight = _.isRight;\n/**\n * Less strict version of [`match`](#match).\n *\n * The `W` suffix (short for **W**idening) means that the handler return types will be merged.\n *\n * @category pattern matching\n * @since 2.10.0\n */\nvar matchW = function (onLeft, onRight) {\n    return function (ma) {\n        return (0, exports.isLeft)(ma) ? onLeft(ma.left) : onRight(ma.right);\n    };\n};\nexports.matchW = matchW;\n/**\n * Alias of [`matchW`](#matchw).\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexports.foldW = exports.matchW;\n/**\n * Takes two functions and an `Either` value, if the value is a `Left` the inner value is applied to the first function,\n * if the value is a `Right` the inner value is applied to the second function.\n *\n * @example\n * import { match, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * function onLeft(errors: Array<string>): string {\n *   return `Errors: ${errors.join(', ')}`\n * }\n *\n * function onRight(value: number): string {\n *   return `Ok: ${value}`\n * }\n *\n * assert.strictEqual(\n *   pipe(\n *     right(1),\n *     match(onLeft, onRight)\n *   ),\n *   'Ok: 1'\n * )\n * assert.strictEqual(\n *   pipe(\n *     left(['error 1', 'error 2']),\n *     match(onLeft, onRight)\n *   ),\n *   'Errors: error 1, error 2'\n * )\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexports.match = exports.matchW;\n/**\n * Alias of [`match`](#match).\n *\n * @category pattern matching\n * @since 2.0.0\n */\nexports.fold = exports.match;\n/**\n * Less strict version of [`getOrElse`](#getorelse).\n *\n * The `W` suffix (short for **W**idening) means that the handler return type will be merged.\n *\n * @category error handling\n * @since 2.6.0\n */\nvar getOrElseW = function (onLeft) {\n    return function (ma) {\n        return (0, exports.isLeft)(ma) ? onLeft(ma.left) : ma.right;\n    };\n};\nexports.getOrElseW = getOrElseW;\n/**\n * Returns the wrapped value if it's a `Right` or a default value if is a `Left`.\n *\n * @example\n * import { getOrElse, left, right } from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     right(1),\n *     getOrElse(() => 0)\n *   ),\n *   1\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     left('error'),\n *     getOrElse(() => 0)\n *   ),\n *   0\n * )\n *\n * @category error handling\n * @since 2.0.0\n */\nexports.getOrElse = exports.getOrElseW;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category mapping\n * @since 2.10.0\n */\nexports.flap = (0, Functor_1.flap)(exports.Functor);\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * @since 2.0.0\n */\nexports.apFirst = (0, Apply_1.apFirst)(exports.Apply);\n/**\n * Less strict version of [`apFirst`](#apfirst)\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @since 2.12.0\n */\nexports.apFirstW = exports.apFirst;\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * @since 2.0.0\n */\nexports.apSecond = (0, Apply_1.apSecond)(exports.Apply);\n/**\n * Less strict version of [`apSecond`](#apsecond)\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @since 2.12.0\n */\nexports.apSecondW = exports.apSecond;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @category sequencing\n * @since 2.0.0\n */\nexports.chainFirst = \n/*#__PURE__*/ (0, Chain_1.chainFirst)(exports.Chain);\n/**\n * Less strict version of [`chainFirst`](#chainfirst)\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category sequencing\n * @since 2.8.0\n */\nexports.chainFirstW = exports.chainFirst;\n/**\n * Less strict version of [`flatten`](#flatten).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category sequencing\n * @since 2.11.0\n */\nexports.flattenW = \n/*#__PURE__*/ (0, exports.chainW)(function_1.identity);\n/**\n * The `flatten` function is the conventional monad join operator. It is used to remove one level of monadic structure, projecting its bound argument into the outer level.\n *\n * @example\n * import * as E from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(E.flatten(E.right(E.right('a'))), E.right('a'))\n * assert.deepStrictEqual(E.flatten(E.right(E.left('e'))), E.left('e'))\n * assert.deepStrictEqual(E.flatten(E.left('e')), E.left('e'))\n *\n * @category sequencing\n * @since 2.0.0\n */\nexports.flatten = exports.flattenW;\n/**\n * @since 2.0.0\n */\nexports.duplicate = (0, exports.extend)(function_1.identity);\n/**\n * @category lifting\n * @since 2.10.0\n */\nexports.fromOptionK = \n/*#__PURE__*/ (0, FromEither_1.fromOptionK)(exports.FromEither);\n/**\n * @category sequencing\n * @since 2.11.0\n */\nexports.chainOptionK = (0, FromEither_1.chainOptionK)(exports.FromEither, exports.Chain);\n/**\n * @example\n * import * as E from 'fp-ts/Either'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     E.right(1),\n *     E.filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   E.right(1)\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.right(-1),\n *     E.filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   E.left('error')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     E.left('a'),\n *     E.filterOrElse(\n *       (n) => n > 0,\n *       () => 'error'\n *     )\n *   ),\n *   E.left('a')\n * )\n *\n * @category filtering\n * @since 2.0.0\n */\nexports.filterOrElse = (0, FromEither_1.filterOrElse)(exports.FromEither, exports.Chain);\n/**\n * Less strict version of [`filterOrElse`](#filterorelse).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category filtering\n * @since 2.9.0\n */\nexports.filterOrElseW = exports.filterOrElse;\n/**\n * Returns a `Right` if is a `Left` (and vice versa).\n *\n * @since 2.0.0\n */\nvar swap = function (ma) { return ((0, exports.isLeft)(ma) ? (0, exports.right)(ma.left) : (0, exports.left)(ma.right)); };\nexports.swap = swap;\n/**\n * Less strict version of [`orElse`](#orelse).\n *\n * The `W` suffix (short for **W**idening) means that the return types will be merged.\n *\n * @category error handling\n * @since 2.10.0\n */\nvar orElseW = function (onLeft) {\n    return function (ma) {\n        return (0, exports.isLeft)(ma) ? onLeft(ma.left) : ma;\n    };\n};\nexports.orElseW = orElseW;\n/**\n * Useful for recovering from errors.\n *\n * @category error handling\n * @since 2.0.0\n */\nexports.orElse = exports.orElseW;\n/**\n * Takes a default and a nullable value, if the value is not nully, turn it into a `Right`, if the value is nully use\n * the provided default as a `Left`.\n *\n * @example\n * import { fromNullable, left, right } from 'fp-ts/Either'\n *\n * const parse = fromNullable('nully')\n *\n * assert.deepStrictEqual(parse(1), right(1))\n * assert.deepStrictEqual(parse(null), left('nully'))\n *\n * @category conversions\n * @since 2.0.0\n */\nvar fromNullable = function (e) {\n    return function (a) {\n        return a == null ? (0, exports.left)(e) : (0, exports.right)(a);\n    };\n};\nexports.fromNullable = fromNullable;\n/**\n * Constructs a new `Either` from a function that might throw.\n *\n * See also [`tryCatchK`](#trycatchk).\n *\n * @example\n * import * as E from 'fp-ts/Either'\n *\n * const unsafeHead = <A>(as: ReadonlyArray<A>): A => {\n *   if (as.length > 0) {\n *     return as[0]\n *   } else {\n *     throw new Error('empty array')\n *   }\n * }\n *\n * const head = <A>(as: ReadonlyArray<A>): E.Either<Error, A> =>\n *   E.tryCatch(() => unsafeHead(as), e => (e instanceof Error ? e : new Error('unknown error')))\n *\n * assert.deepStrictEqual(head([]), E.left(new Error('empty array')))\n * assert.deepStrictEqual(head([1, 2, 3]), E.right(1))\n *\n * @category interop\n * @since 2.0.0\n */\nvar tryCatch = function (f, onThrow) {\n    try {\n        return (0, exports.right)(f());\n    }\n    catch (e) {\n        return (0, exports.left)(onThrow(e));\n    }\n};\nexports.tryCatch = tryCatch;\n/**\n * Converts a function that may throw to one returning a `Either`.\n *\n * @category interop\n * @since 2.10.0\n */\nvar tryCatchK = function (f, onThrow) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return (0, exports.tryCatch)(function () { return f.apply(void 0, a); }, onThrow);\n    };\n};\nexports.tryCatchK = tryCatchK;\n/**\n * @category lifting\n * @since 2.9.0\n */\nvar fromNullableK = function (e) {\n    var from = (0, exports.fromNullable)(e);\n    return function (f) { return (0, function_1.flow)(f, from); };\n};\nexports.fromNullableK = fromNullableK;\n/**\n * @category sequencing\n * @since 2.9.0\n */\nvar chainNullableK = function (e) {\n    var from = (0, exports.fromNullableK)(e);\n    return function (f) { return (0, exports.chain)(from(f)); };\n};\nexports.chainNullableK = chainNullableK;\n/**\n * @category conversions\n * @since 2.10.0\n */\nexports.toUnion = (0, exports.foldW)(function_1.identity, function_1.identity);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Default value for the `onError` argument of `tryCatch`\n *\n * @since 2.0.0\n */\nfunction toError(e) {\n    return e instanceof Error ? e : new Error(String(e));\n}\nexports.toError = toError;\nfunction elem(E) {\n    return function (a, ma) {\n        if (ma === undefined) {\n            var elemE_1 = elem(E);\n            return function (ma) { return elemE_1(a, ma); };\n        }\n        return (0, exports.isLeft)(ma) ? false : E.equals(a, ma.right);\n    };\n}\nexports.elem = elem;\n/**\n * Returns `false` if `Left` or returns the result of the application of the given predicate to the `Right` value.\n *\n * @example\n * import { exists, left, right } from 'fp-ts/Either'\n *\n * const gt2 = exists((n: number) => n > 2)\n *\n * assert.strictEqual(gt2(left('a')), false)\n * assert.strictEqual(gt2(right(1)), false)\n * assert.strictEqual(gt2(right(3)), true)\n *\n * @since 2.0.0\n */\nvar exists = function (predicate) {\n    return function (ma) {\n        return (0, exports.isLeft)(ma) ? false : predicate(ma.right);\n    };\n};\nexports.exists = exists;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @category do notation\n * @since 2.9.0\n */\nexports.Do = (0, exports.of)(_.emptyRecord);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.bindTo = (0, Functor_1.bindTo)(exports.Functor);\nvar let_ = /*#__PURE__*/ (0, Functor_1.let)(exports.Functor);\nexports.let = let_;\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.bind = (0, Chain_1.bind)(exports.Chain);\n/**\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category do notation\n * @since 2.8.0\n */\nexports.bindW = exports.bind;\n/**\n * @category do notation\n * @since 2.8.0\n */\nexports.apS = (0, Apply_1.apS)(exports.Apply);\n/**\n * Less strict version of [`apS`](#aps).\n *\n * The `W` suffix (short for **W**idening) means that the error types will be merged.\n *\n * @category do notation\n * @since 2.8.0\n */\nexports.apSW = exports.apS;\n/**\n * @since 2.11.0\n */\nexports.ApT = (0, exports.of)(_.emptyReadonlyArray);\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n * Equivalent to `ReadonlyNonEmptyArray#traverseWithIndex(Applicative)`.\n *\n * @category traversing\n * @since 2.11.0\n */\nvar traverseReadonlyNonEmptyArrayWithIndex = function (f) {\n    return function (as) {\n        var e = f(0, _.head(as));\n        if ((0, exports.isLeft)(e)) {\n            return e;\n        }\n        var out = [e.right];\n        for (var i = 1; i < as.length; i++) {\n            var e_1 = f(i, as[i]);\n            if ((0, exports.isLeft)(e_1)) {\n                return e_1;\n            }\n            out.push(e_1.right);\n        }\n        return (0, exports.right)(out);\n    };\n};\nexports.traverseReadonlyNonEmptyArrayWithIndex = traverseReadonlyNonEmptyArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @category traversing\n * @since 2.11.0\n */\nvar traverseReadonlyArrayWithIndex = function (f) {\n    var g = (0, exports.traverseReadonlyNonEmptyArrayWithIndex)(f);\n    return function (as) { return (_.isNonEmpty(as) ? g(as) : exports.ApT); };\n};\nexports.traverseReadonlyArrayWithIndex = traverseReadonlyArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nexports.traverseArrayWithIndex = exports.traverseReadonlyArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverse(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nvar traverseArray = function (f) { return (0, exports.traverseReadonlyArrayWithIndex)(function (_, a) { return f(a); }); };\nexports.traverseArray = traverseArray;\n/**\n * Equivalent to `ReadonlyArray#sequence(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nexports.sequenceArray = \n/*#__PURE__*/ (0, exports.traverseArray)(function_1.identity);\n/**\n * Use [`parse`](./Json.ts.html#parse) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nfunction parseJSON(s, onError) {\n    return (0, exports.tryCatch)(function () { return JSON.parse(s); }, onError);\n}\nexports.parseJSON = parseJSON;\n/**\n * Use [`stringify`](./Json.ts.html#stringify) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nvar stringifyJSON = function (u, onError) {\n    return (0, exports.tryCatch)(function () {\n        var s = JSON.stringify(u);\n        if (typeof s !== 'string') {\n            throw new Error('Converting unsupported structure to JSON');\n        }\n        return s;\n    }, onError);\n};\nexports.stringifyJSON = stringifyJSON;\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `E.Functor` instead of `E.either`\n * (where `E` is from `import E from 'fp-ts/Either'`)\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.either = {\n    URI: exports.URI,\n    map: _map,\n    of: exports.of,\n    ap: _ap,\n    chain: _chain,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: exports.sequence,\n    bimap: _bimap,\n    mapLeft: _mapLeft,\n    alt: _alt,\n    extend: _extend,\n    chainRec: _chainRec,\n    throwError: exports.throwError\n};\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getapplysemigroup) instead.\n *\n * Semigroup returning the left-most `Left` value. If both operands are `Right`s then the inner values\n * are concatenated using the provided `Semigroup`\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getApplySemigroup = \n/*#__PURE__*/ (0, Apply_1.getApplySemigroup)(exports.Apply);\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getapplicativemonoid) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexports.getApplyMonoid = \n/*#__PURE__*/ (0, Applicative_1.getApplicativeMonoid)(exports.Applicative);\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getapplysemigroup) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nvar getValidationSemigroup = function (SE, SA) {\n    return (0, Apply_1.getApplySemigroup)((0, exports.getApplicativeValidation)(SE))(SA);\n};\nexports.getValidationSemigroup = getValidationSemigroup;\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getapplicativemonoid) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nvar getValidationMonoid = function (SE, MA) {\n    return (0, Applicative_1.getApplicativeMonoid)((0, exports.getApplicativeValidation)(SE))(MA);\n};\nexports.getValidationMonoid = getValidationMonoid;\n/**\n * Use [`getApplicativeValidation`](#getapplicativevalidation) and [`getAltValidation`](#getaltvalidation) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nfunction getValidation(SE) {\n    var ap = (0, exports.getApplicativeValidation)(SE).ap;\n    var alt = (0, exports.getAltValidation)(SE).alt;\n    return {\n        URI: exports.URI,\n        _E: undefined,\n        map: _map,\n        of: exports.of,\n        chain: _chain,\n        bimap: _bimap,\n        mapLeft: _mapLeft,\n        reduce: _reduce,\n        foldMap: _foldMap,\n        reduceRight: _reduceRight,\n        extend: _extend,\n        traverse: _traverse,\n        sequence: exports.sequence,\n        chainRec: _chainRec,\n        throwError: exports.throwError,\n        ap: ap,\n        alt: alt\n    };\n}\nexports.getValidation = getValidation;\n", "import { pipe } from './function';\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport var fromEquals = function (equals) { return ({\n    equals: function (x, y) { return x === y || equals(x, y); }\n}); };\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.10.0\n */\nexport var struct = function (eqs) {\n    return fromEquals(function (first, second) {\n        for (var key in eqs) {\n            if (!eqs[key].equals(first[key], second[key])) {\n                return false;\n            }\n        }\n        return true;\n    });\n};\n/**\n * Given a tuple of `Eq`s returns a `Eq` for the tuple\n *\n * @example\n * import { tuple } from 'fp-ts/Eq'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import * as B from 'fp-ts/boolean'\n *\n * const E = tuple(S.Eq, N.Eq, B.Eq)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 1, true]), true)\n * assert.strictEqual(E.equals(['a', 1, true], ['b', 1, true]), false)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 2, true]), false)\n * assert.strictEqual(E.equals(['a', 1, true], ['a', 1, false]), false)\n *\n * @since 2.10.0\n */\nexport var tuple = function () {\n    var eqs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        eqs[_i] = arguments[_i];\n    }\n    return fromEquals(function (first, second) { return eqs.every(function (E, i) { return E.equals(first[i], second[i]); }); });\n};\n/* istanbul ignore next */\nvar contramap_ = function (fa, f) { return pipe(fa, contramap(f)); };\n/**\n * A typical use case for `contramap` would be like, given some `User` type, to construct an `Eq<User>`.\n *\n * We can do so with a function from `User -> X` where `X` is some value that we know how to compare\n * for equality (meaning we have an `Eq<X>`)\n *\n * For example, given the following `User` type, we want to construct an `Eq<User>` that just looks at the `key` field\n * for each user (since it's known to be unique).\n *\n * If we have a way of comparing `UUID`s for equality (`eqUUID: Eq<UUID>`) and we know how to go from `User -> UUID`,\n * using `contramap` we can do this\n *\n * @example\n * import { contramap, Eq } from 'fp-ts/Eq'\n * import { pipe } from 'fp-ts/function'\n * import * as S from 'fp-ts/string'\n *\n * type UUID = string\n *\n * interface User {\n *   readonly key: UUID\n *   readonly firstName: string\n *   readonly lastName: string\n * }\n *\n * const eqUUID: Eq<UUID> = S.Eq\n *\n * const eqUserByKey: Eq<User> = pipe(\n *   eqUUID,\n *   contramap((user) => user.key)\n * )\n *\n * assert.deepStrictEqual(\n *   eqUserByKey.equals(\n *     { key: 'k1', firstName: 'a1', lastName: 'b1' },\n *     { key: 'k2', firstName: 'a1', lastName: 'b1' }\n *   ),\n *   false\n * )\n * assert.deepStrictEqual(\n *   eqUserByKey.equals(\n *     { key: 'k1', firstName: 'a1', lastName: 'b1' },\n *     { key: 'k1', firstName: 'a2', lastName: 'b1' }\n *   ),\n *   true\n * )\n *\n * @since 2.0.0\n */\nexport var contramap = function (f) { return function (fa) {\n    return fromEquals(function (x, y) { return fa.equals(f(x), f(y)); });\n}; };\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexport var URI = 'Eq';\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var eqStrict = {\n    equals: function (a, b) { return a === b; }\n};\nvar empty = {\n    equals: function () { return true; }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var getSemigroup = function () { return ({\n    concat: function (x, y) { return fromEquals(function (a, b) { return x.equals(a, b) && y.equals(a, b); }); }\n}); };\n/**\n * @category instances\n * @since 2.6.0\n */\nexport var getMonoid = function () { return ({\n    concat: getSemigroup().concat,\n    empty: empty\n}); };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Contravariant = {\n    URI: URI,\n    contramap: contramap_\n};\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getTupleEq = tuple;\n/**\n * Use [`struct`](#struct) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getStructEq = struct;\n/**\n * Use [`eqStrict`](#eqstrict) instead\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var strictEqual = eqStrict.equals;\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Contravariant` instance, pass `E.Contravariant` instead of `E.eq`\n * (where `E` is from `import E from 'fp-ts/Eq'`)\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var eq = Contravariant;\n/**\n * Use [`Eq`](./boolean.ts.html#eq) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var eqBoolean = eqStrict;\n/**\n * Use [`Eq`](./string.ts.html#eq) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var eqString = eqStrict;\n/**\n * Use [`Eq`](./number.ts.html#eq) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var eqNumber = eqStrict;\n/**\n * Use [`Eq`](./Date.ts.html#eq) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var eqDate = {\n    equals: function (first, second) { return first.valueOf() === second.valueOf(); }\n};\n", "import { eqStrict } from './Eq';\nimport { constant, constTrue, pipe } from './function';\n// -------------------------------------------------------------------------------------\n// defaults\n// -------------------------------------------------------------------------------------\n/**\n * @category defaults\n * @since 2.10.0\n */\nexport var equalsDefault = function (compare) {\n    return function (first, second) {\n        return first === second || compare(first, second) === 0;\n    };\n};\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport var fromCompare = function (compare) { return ({\n    equals: equalsDefault(compare),\n    compare: function (first, second) { return (first === second ? 0 : compare(first, second)); }\n}); };\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * Given a tuple of `Ord`s returns an `Ord` for the tuple.\n *\n * @example\n * import { tuple } from 'fp-ts/Ord'\n * import * as B from 'fp-ts/boolean'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n *\n * const O = tuple(S.Ord, N.Ord, B.Ord)\n * assert.strictEqual(O.compare(['a', 1, true], ['b', 2, true]), -1)\n * assert.strictEqual(O.compare(['a', 1, true], ['a', 2, true]), -1)\n * assert.strictEqual(O.compare(['a', 1, true], ['a', 1, false]), 1)\n *\n * @since 2.10.0\n */\nexport var tuple = function () {\n    var ords = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        ords[_i] = arguments[_i];\n    }\n    return fromCompare(function (first, second) {\n        var i = 0;\n        for (; i < ords.length - 1; i++) {\n            var r = ords[i].compare(first[i], second[i]);\n            if (r !== 0) {\n                return r;\n            }\n        }\n        return ords[i].compare(first[i], second[i]);\n    });\n};\n/**\n * @since 2.10.0\n */\nexport var reverse = function (O) { return fromCompare(function (first, second) { return O.compare(second, first); }); };\n/* istanbul ignore next */\nvar contramap_ = function (fa, f) { return pipe(fa, contramap(f)); };\n/**\n * A typical use case for `contramap` would be like, given some `User` type, to construct an `Ord<User>`.\n *\n * We can do so with a function from `User -> X` where `X` is some value that we know how to compare\n * for ordering (meaning we have an `Ord<X>`)\n *\n * For example, given the following `User` type, there are lots of possible choices for `X`,\n * but let's say we want to sort a list of users by `lastName`.\n *\n * If we have a way of comparing `lastName`s for ordering (`ordLastName: Ord<string>`) and we know how to go from `User -> string`,\n * using `contramap` we can do this\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import { contramap, Ord } from 'fp-ts/Ord'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as S from 'fp-ts/string'\n *\n * interface User {\n *   readonly firstName: string\n *   readonly lastName: string\n * }\n *\n * const ordLastName: Ord<string> = S.Ord\n *\n * const ordByLastName: Ord<User> = pipe(\n *   ordLastName,\n *   contramap((user) => user.lastName)\n * )\n *\n * assert.deepStrictEqual(\n *   RA.sort(ordByLastName)([\n *     { firstName: 'a', lastName: 'd' },\n *     { firstName: 'c', lastName: 'b' }\n *   ]),\n *   [\n *     { firstName: 'c', lastName: 'b' },\n *     { firstName: 'a', lastName: 'd' }\n *   ]\n * )\n *\n * @since 2.0.0\n */\nexport var contramap = function (f) { return function (fa) {\n    return fromCompare(function (first, second) { return fa.compare(f(first), f(second)); });\n}; };\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexport var URI = 'Ord';\n/**\n * A typical use case for the `Semigroup` instance of `Ord` is merging two or more orderings.\n *\n * For example the following snippet builds an `Ord` for a type `User` which\n * sorts by `created` date descending, and **then** `lastName`\n *\n * @example\n * import * as D from 'fp-ts/Date'\n * import { pipe } from 'fp-ts/function'\n * import { contramap, getSemigroup, Ord, reverse } from 'fp-ts/Ord'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as S from 'fp-ts/string'\n *\n * interface User {\n *   readonly id: string\n *   readonly lastName: string\n *   readonly created: Date\n * }\n *\n * const ordByLastName: Ord<User> = pipe(\n *   S.Ord,\n *   contramap((user) => user.lastName)\n * )\n *\n * const ordByCreated: Ord<User> = pipe(\n *   D.Ord,\n *   contramap((user) => user.created)\n * )\n *\n * const ordUserByCreatedDescThenLastName = getSemigroup<User>().concat(\n *   reverse(ordByCreated),\n *   ordByLastName\n * )\n *\n * assert.deepStrictEqual(\n *   RA.sort(ordUserByCreatedDescThenLastName)([\n *     { id: 'c', lastName: 'd', created: new Date(1973, 10, 30) },\n *     { id: 'a', lastName: 'b', created: new Date(1973, 10, 30) },\n *     { id: 'e', lastName: 'f', created: new Date(1980, 10, 30) }\n *   ]),\n *   [\n *     { id: 'e', lastName: 'f', created: new Date(1980, 10, 30) },\n *     { id: 'a', lastName: 'b', created: new Date(1973, 10, 30) },\n *     { id: 'c', lastName: 'd', created: new Date(1973, 10, 30) }\n *   ]\n * )\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getSemigroup = function () { return ({\n    concat: function (first, second) {\n        return fromCompare(function (a, b) {\n            var ox = first.compare(a, b);\n            return ox !== 0 ? ox : second.compare(a, b);\n        });\n    }\n}); };\n/**\n * Returns a `Monoid` such that:\n *\n * - its `concat(ord1, ord2)` operation will order first by `ord1`, and then by `ord2`\n * - its `empty` value is an `Ord` that always considers compared elements equal\n *\n * @example\n * import { sort } from 'fp-ts/Array'\n * import { contramap, reverse, getMonoid } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as B from 'fp-ts/boolean'\n * import { pipe } from 'fp-ts/function'\n * import { concatAll } from 'fp-ts/Monoid'\n * import * as N from 'fp-ts/number'\n *\n * interface User {\n *   readonly id: number\n *   readonly name: string\n *   readonly age: number\n *   readonly rememberMe: boolean\n * }\n *\n * const byName = pipe(\n *   S.Ord,\n *   contramap((p: User) => p.name)\n * )\n *\n * const byAge = pipe(\n *   N.Ord,\n *   contramap((p: User) => p.age)\n * )\n *\n * const byRememberMe = pipe(\n *   B.Ord,\n *   contramap((p: User) => p.rememberMe)\n * )\n *\n * const M = getMonoid<User>()\n *\n * const users: Array<User> = [\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true }\n * ]\n *\n * // sort by name, then by age, then by `rememberMe`\n * const O1 = concatAll(M)([byName, byAge, byRememberMe])\n * assert.deepStrictEqual(sort(O1)(users), [\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false }\n * ])\n *\n * // now `rememberMe = true` first, then by name, then by age\n * const O2 = concatAll(M)([reverse(byRememberMe), byName, byAge])\n * assert.deepStrictEqual(sort(O2)(users), [\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false }\n * ])\n *\n * @category instances\n * @since 2.4.0\n */\nexport var getMonoid = function () { return ({\n    concat: getSemigroup().concat,\n    empty: fromCompare(function () { return 0; })\n}); };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Contravariant = {\n    URI: URI,\n    contramap: contramap_\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nexport var trivial = {\n    equals: constTrue,\n    compare: /*#__PURE__*/ constant(0)\n};\n/**\n * @since 2.11.0\n */\nexport var equals = function (O) {\n    return function (second) {\n        return function (first) {\n            return first === second || O.compare(first, second) === 0;\n        };\n    };\n};\n// TODO: curry in v3\n/**\n * Test whether one value is _strictly less than_ another\n *\n * @since 2.0.0\n */\nexport var lt = function (O) {\n    return function (first, second) {\n        return O.compare(first, second) === -1;\n    };\n};\n// TODO: curry in v3\n/**\n * Test whether one value is _strictly greater than_ another\n *\n * @since 2.0.0\n */\nexport var gt = function (O) {\n    return function (first, second) {\n        return O.compare(first, second) === 1;\n    };\n};\n// TODO: curry in v3\n/**\n * Test whether one value is _non-strictly less than_ another\n *\n * @since 2.0.0\n */\nexport var leq = function (O) {\n    return function (first, second) {\n        return O.compare(first, second) !== 1;\n    };\n};\n// TODO: curry in v3\n/**\n * Test whether one value is _non-strictly greater than_ another\n *\n * @since 2.0.0\n */\nexport var geq = function (O) {\n    return function (first, second) {\n        return O.compare(first, second) !== -1;\n    };\n};\n// TODO: curry in v3\n/**\n * Take the minimum of two values. If they are considered equal, the first argument is chosen\n *\n * @since 2.0.0\n */\nexport var min = function (O) {\n    return function (first, second) {\n        return first === second || O.compare(first, second) < 1 ? first : second;\n    };\n};\n// TODO: curry in v3\n/**\n * Take the maximum of two values. If they are considered equal, the first argument is chosen\n *\n * @since 2.0.0\n */\nexport var max = function (O) {\n    return function (first, second) {\n        return first === second || O.compare(first, second) > -1 ? first : second;\n    };\n};\n/**\n * Clamp a value between a minimum and a maximum\n *\n * @since 2.0.0\n */\nexport var clamp = function (O) {\n    var minO = min(O);\n    var maxO = max(O);\n    return function (low, hi) { return function (a) { return maxO(minO(a, hi), low); }; };\n};\n/**\n * Test whether a value is between a minimum and a maximum (inclusive)\n *\n * @since 2.0.0\n */\nexport var between = function (O) {\n    var ltO = lt(O);\n    var gtO = gt(O);\n    return function (low, hi) { return function (a) { return ltO(a, low) || gtO(a, hi) ? false : true; }; };\n};\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getTupleOrd = tuple;\n/**\n * Use [`reverse`](#reverse) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getDualOrd = reverse;\n/**\n * Use [`Contravariant`](#contravariant) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var ord = Contravariant;\n// default compare for primitive types\nfunction compare(first, second) {\n    return first < second ? -1 : first > second ? 1 : 0;\n}\nvar strictOrd = {\n    equals: eqStrict.equals,\n    compare: compare\n};\n/**\n * Use [`Ord`](./boolean.ts.html#ord) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var ordBoolean = strictOrd;\n/**\n * Use [`Ord`](./string.ts.html#ord) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var ordString = strictOrd;\n/**\n * Use [`Ord`](./number.ts.html#ord) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var ordNumber = strictOrd;\n/**\n * Use [`Ord`](./Date.ts.html#ord) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var ordDate = /*#__PURE__*/ pipe(ordNumber, \n/*#__PURE__*/\ncontramap(function (date) { return date.valueOf(); }));\n", "/**\n * A `Magma` is a pair `(A, concat)` in which `A` is a non-empty set and `concat` is a binary operation on `A`\n *\n * See [Semigroup](https://gcanti.github.io/fp-ts/modules/Semigroup.ts.html) for some instances.\n *\n * @since 2.0.0\n */\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * The dual of a `Magma`, obtained by swapping the arguments of `concat`.\n *\n * @example\n * import { reverse, concatAll } from 'fp-ts/Magma'\n * import * as N from 'fp-ts/number'\n *\n * const subAll = concatAll(reverse(N.MagmaSub))(0)\n *\n * assert.deepStrictEqual(subAll([1, 2, 3]), 2)\n *\n * @since 2.11.0\n */\nexport var reverse = function (M) { return ({\n    concat: function (first, second) { return M.concat(second, first); }\n}); };\n/**\n * @since 2.11.0\n */\nexport var filterFirst = function (predicate) {\n    return function (M) { return ({\n        concat: function (first, second) { return (predicate(first) ? M.concat(first, second) : second); }\n    }); };\n};\n/**\n * @since 2.11.0\n */\nexport var filterSecond = function (predicate) {\n    return function (M) { return ({\n        concat: function (first, second) { return (predicate(second) ? M.concat(first, second) : first); }\n    }); };\n};\n/**\n * @since 2.11.0\n */\nexport var endo = function (f) {\n    return function (M) { return ({\n        concat: function (first, second) { return M.concat(f(first), f(second)); }\n    }); };\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Given a sequence of `as`, concat them and return the total.\n *\n * If `as` is empty, return the provided `startWith` value.\n *\n * @example\n * import { concatAll } from 'fp-ts/Magma'\n * import * as N from 'fp-ts/number'\n *\n * const subAll = concatAll(N.MagmaSub)(0)\n *\n * assert.deepStrictEqual(subAll([1, 2, 3]), -6)\n *\n * @since 2.11.0\n */\nexport var concatAll = function (M) {\n    return function (startWith) {\n        return function (as) {\n            return as.reduce(function (a, acc) { return M.concat(a, acc); }, startWith);\n        };\n    };\n};\n", "/**\n * If a type `A` can form a `Semigroup` it has an **associative** binary operation.\n *\n * ```ts\n * interface Semigroup<A> {\n *   readonly concat: (x: A, y: A) => A\n * }\n * ```\n *\n * Associativity means the following equality must hold for any choice of `x`, `y`, and `z`.\n *\n * ```ts\n * concat(x, concat(y, z)) = concat(concat(x, y), z)\n * ```\n *\n * A common example of a semigroup is the type `string` with the operation `+`.\n *\n * ```ts\n * import { Semigroup } from 'fp-ts/Semigroup'\n *\n * const semigroupString: Semigroup<string> = {\n *   concat: (x, y) => x + y\n * }\n *\n * const x = 'x'\n * const y = 'y'\n * const z = 'z'\n *\n * semigroupString.concat(x, y) // 'xy'\n *\n * semigroupString.concat(x, semigroupString.concat(y, z)) // 'xyz'\n *\n * semigroupString.concat(semigroupString.concat(x, y), z) // 'xyz'\n * ```\n *\n * *Adapted from https://typelevel.org/cats*\n *\n * @since 2.0.0\n */\nimport { getSemigroup, identity } from './function';\nimport * as _ from './internal';\nimport * as M from './Magma';\nimport * as Or from './Ord';\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Get a semigroup where `concat` will return the minimum, based on the provided order.\n *\n * @example\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/Semigroup'\n *\n * const S1 = S.min(N.Ord)\n *\n * assert.deepStrictEqual(S1.concat(1, 2), 1)\n *\n * @category constructors\n * @since 2.10.0\n */\nexport var min = function (O) { return ({\n    concat: Or.min(O)\n}); };\n/**\n * Get a semigroup where `concat` will return the maximum, based on the provided order.\n *\n * @example\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/Semigroup'\n *\n * const S1 = S.max(N.Ord)\n *\n * assert.deepStrictEqual(S1.concat(1, 2), 2)\n *\n * @category constructors\n * @since 2.10.0\n */\nexport var max = function (O) { return ({\n    concat: Or.max(O)\n}); };\n/**\n * @category constructors\n * @since 2.10.0\n */\nexport var constant = function (a) { return ({\n    concat: function () { return a; }\n}); };\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * The dual of a `Semigroup`, obtained by swapping the arguments of `concat`.\n *\n * @example\n * import { reverse } from 'fp-ts/Semigroup'\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(reverse(S.Semigroup).concat('a', 'b'), 'ba')\n *\n * @since 2.10.0\n */\nexport var reverse = M.reverse;\n/**\n * Given a struct of semigroups returns a semigroup for the struct.\n *\n * @example\n * import { struct } from 'fp-ts/Semigroup'\n * import * as N from 'fp-ts/number'\n *\n * interface Point {\n *   readonly x: number\n *   readonly y: number\n * }\n *\n * const S = struct<Point>({\n *   x: N.SemigroupSum,\n *   y: N.SemigroupSum\n * })\n *\n * assert.deepStrictEqual(S.concat({ x: 1, y: 2 }, { x: 3, y: 4 }), { x: 4, y: 6 })\n *\n * @since 2.10.0\n */\nexport var struct = function (semigroups) { return ({\n    concat: function (first, second) {\n        var r = {};\n        for (var k in semigroups) {\n            if (_.has.call(semigroups, k)) {\n                r[k] = semigroups[k].concat(first[k], second[k]);\n            }\n        }\n        return r;\n    }\n}); };\n/**\n * Given a tuple of semigroups returns a semigroup for the tuple.\n *\n * @example\n * import { tuple } from 'fp-ts/Semigroup'\n * import * as B from 'fp-ts/boolean'\n * import * as N from 'fp-ts/number'\n * import * as S from 'fp-ts/string'\n *\n * const S1 = tuple(S.Semigroup, N.SemigroupSum)\n * assert.deepStrictEqual(S1.concat(['a', 1], ['b', 2]), ['ab', 3])\n *\n * const S2 = tuple(S.Semigroup, N.SemigroupSum, B.SemigroupAll)\n * assert.deepStrictEqual(S2.concat(['a', 1, true], ['b', 2, false]), ['ab', 3, false])\n *\n * @since 2.10.0\n */\nexport var tuple = function () {\n    var semigroups = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        semigroups[_i] = arguments[_i];\n    }\n    return ({\n        concat: function (first, second) { return semigroups.map(function (s, i) { return s.concat(first[i], second[i]); }); }\n    });\n};\n/**\n * Between each pair of elements insert `middle`.\n *\n * @example\n * import { intercalate } from 'fp-ts/Semigroup'\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * const S1 = pipe(S.Semigroup, intercalate(' + '))\n *\n * assert.strictEqual(S1.concat('a', 'b'), 'a + b')\n *\n * @since 2.10.0\n */\nexport var intercalate = function (middle) {\n    return function (S) { return ({\n        concat: function (x, y) { return S.concat(x, S.concat(middle, y)); }\n    }); };\n};\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * Always return the first argument.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.first<number>().concat(1, 2), 1)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var first = function () { return ({ concat: identity }); };\n/**\n * Always return the last argument.\n *\n * @example\n * import * as S from 'fp-ts/Semigroup'\n *\n * assert.deepStrictEqual(S.last<number>().concat(1, 2), 2)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var last = function () { return ({ concat: function (_, y) { return y; } }); };\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Given a sequence of `as`, concat them and return the total.\n *\n * If `as` is empty, return the provided `startWith` value.\n *\n * @example\n * import { concatAll } from 'fp-ts/Semigroup'\n * import * as N from 'fp-ts/number'\n *\n * const sum = concatAll(N.SemigroupSum)(0)\n *\n * assert.deepStrictEqual(sum([1, 2, 3]), 6)\n * assert.deepStrictEqual(sum([]), 0)\n *\n * @since 2.10.0\n */\nexport var concatAll = M.concatAll;\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use `void` module instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var semigroupVoid = constant(undefined);\n/**\n * Use [`getAssignSemigroup`](./struct.ts.html#getAssignSemigroup) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getObjectSemigroup = function () { return ({\n    concat: function (first, second) { return Object.assign({}, first, second); }\n}); };\n/**\n * Use [`last`](#last) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getLastSemigroup = last;\n/**\n * Use [`first`](#first) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getFirstSemigroup = first;\n/**\n * Use [`tuple`](#tuple) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getTupleSemigroup = tuple;\n/**\n * Use [`struct`](#struct) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getStructSemigroup = struct;\n/**\n * Use [`reverse`](#reverse) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getDualSemigroup = reverse;\n/**\n * Use [`max`](#max) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getJoinSemigroup = max;\n/**\n * Use [`min`](#min) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getMeetSemigroup = min;\n/**\n * Use [`intercalate`](#intercalate) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var getIntercalateSemigroup = intercalate;\nexport function fold(S) {\n    var concatAllS = concatAll(S);\n    return function (startWith, as) { return (as === undefined ? concatAllS(startWith) : concatAllS(startWith)(as)); };\n}\n/**\n * Use [`SemigroupAll`](./boolean.ts.html#SemigroupAll) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var semigroupAll = {\n    concat: function (x, y) { return x && y; }\n};\n/**\n * Use [`SemigroupAny`](./boolean.ts.html#SemigroupAny) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var semigroupAny = {\n    concat: function (x, y) { return x || y; }\n};\n/**\n * Use [`getSemigroup`](./function.ts.html#getSemigroup) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getFunctionSemigroup = getSemigroup;\n/**\n * Use [`Semigroup`](./string.ts.html#Semigroup) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var semigroupString = {\n    concat: function (x, y) { return x + y; }\n};\n/**\n * Use [`SemigroupSum`](./number.ts.html#SemigroupSum) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var semigroupSum = {\n    concat: function (x, y) { return x + y; }\n};\n/**\n * Use [`SemigroupProduct`](./number.ts.html#SemigroupProduct) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var semigroupProduct = {\n    concat: function (x, y) { return x * y; }\n};\n", "var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { apFirst as apFirst_, apS as apS_, apSecond as apSecond_ } from './Apply';\nimport { bind as bind_, chainFirst as chainFirst_ } from './Chain';\nimport { fromEquals } from './Eq';\nimport { flow, identity, pipe, SK } from './function';\nimport { let as let__, bindTo as bindTo_, flap as flap_ } from './Functor';\nimport * as _ from './internal';\nimport { getMonoid } from './Ord';\nimport * as Se from './Semigroup';\n// -------------------------------------------------------------------------------------\n// internal\n// -------------------------------------------------------------------------------------\n/**\n * @internal\n */\nexport var empty = _.emptyReadonlyArray;\n/**\n * @internal\n */\nexport var isNonEmpty = _.isNonEmpty;\n/**\n * @internal\n */\nexport var isOutOfBound = function (i, as) { return i < 0 || i >= as.length; };\n/**\n * @internal\n */\nexport var prependW = function (head) {\n    return function (tail) {\n        return __spreadArray([head], tail, true);\n    };\n};\n/**\n * @internal\n */\nexport var prepend = prependW;\n/**\n * @internal\n */\nexport var appendW = function (end) {\n    return function (init) {\n        return __spreadArray(__spreadArray([], init, true), [end], false);\n    };\n};\n/**\n * @internal\n */\nexport var append = appendW;\n/**\n * @internal\n */\nexport var unsafeInsertAt = function (i, a, as) {\n    if (isNonEmpty(as)) {\n        var xs = _.fromReadonlyNonEmptyArray(as);\n        xs.splice(i, 0, a);\n        return xs;\n    }\n    return [a];\n};\n/**\n * @internal\n */\nexport var unsafeUpdateAt = function (i, a, as) {\n    if (as[i] === a) {\n        return as;\n    }\n    else {\n        var xs = _.fromReadonlyNonEmptyArray(as);\n        xs[i] = a;\n        return xs;\n    }\n};\n/**\n * Remove duplicates from a `ReadonlyNonEmptyArray`, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/ReadonlyNonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @since 2.11.0\n */\nexport var uniq = function (E) {\n    return function (as) {\n        if (as.length === 1) {\n            return as;\n        }\n        var out = [head(as)];\n        var rest = tail(as);\n        var _loop_1 = function (a) {\n            if (out.every(function (o) { return !E.equals(o, a); })) {\n                out.push(a);\n            }\n        };\n        for (var _i = 0, rest_1 = rest; _i < rest_1.length; _i++) {\n            var a = rest_1[_i];\n            _loop_1(a);\n        }\n        return out;\n    };\n};\n/**\n * Sort the elements of a `ReadonlyNonEmptyArray` in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import * as RNEA from 'fp-ts/ReadonlyNonEmptyArray'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   name: string\n *   age: number\n * }\n *\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n *\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = RNEA.sortBy([byName, byAge])\n *\n * const persons: RNEA.ReadonlyNonEmptyArray<Person> = [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 },\n *   { name: 'b', age: 2 }\n * ]\n *\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @since 2.11.0\n */\nexport var sortBy = function (ords) {\n    if (isNonEmpty(ords)) {\n        var M = getMonoid();\n        return sort(ords.reduce(M.concat, M.empty));\n    }\n    return identity;\n};\n/**\n * @since 2.11.0\n */\nexport var union = function (E) {\n    var uniqE = uniq(E);\n    return function (second) { return function (first) { return uniqE(pipe(first, concat(second))); }; };\n};\n/**\n * Rotate a `ReadonlyNonEmptyArray` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n * assert.deepStrictEqual(rotate(-2)([1, 2, 3, 4, 5]), [3, 4, 5, 1, 2])\n *\n * @since 2.11.0\n */\nexport var rotate = function (n) {\n    return function (as) {\n        var len = as.length;\n        var m = Math.round(n) % len;\n        if (isOutOfBound(Math.abs(m), as) || m === 0) {\n            return as;\n        }\n        if (m < 0) {\n            var _a = splitAt(-m)(as), f = _a[0], s = _a[1];\n            return pipe(s, concat(f));\n        }\n        else {\n            return rotate(m - len)(as);\n        }\n    };\n};\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Return a `ReadonlyNonEmptyArray` from a `ReadonlyArray` returning `none` if the input is empty.\n *\n * @category conversions\n * @since 2.5.0\n */\nexport var fromReadonlyArray = function (as) {\n    return isNonEmpty(as) ? _.some(as) : _.none;\n};\n/**\n * Return a `ReadonlyNonEmptyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { makeBy } from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(pipe(5, makeBy(double)), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.11.0\n */\nexport var makeBy = function (f) {\n    return function (n) {\n        var j = Math.max(0, Math.floor(n));\n        var out = [f(0)];\n        for (var i = 1; i < j; i++) {\n            out.push(f(i));\n        }\n        return out;\n    };\n};\n/**\n * Create a `ReadonlyNonEmptyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { replicate } from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(3, replicate('a')), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.11.0\n */\nexport var replicate = function (a) { return makeBy(function () { return a; }); };\n/**\n * Create a `ReadonlyNonEmptyArray` containing a range of integers, including both endpoints.\n *\n * @example\n * import { range } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.11.0\n */\nexport var range = function (start, end) {\n    return start <= end ? makeBy(function (i) { return start + i; })(end - start + 1) : [start];\n};\n/**\n * Return the tuple of the `head` and the `tail`.\n *\n * @example\n * import { unprepend } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(unprepend([1, 2, 3, 4]), [1, [2, 3, 4]])\n *\n * @since 2.9.0\n */\nexport var unprepend = function (as) { return [head(as), tail(as)]; };\n/**\n * Return the tuple of the `init` and the `last`.\n *\n * @example\n * import { unappend } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(unappend([1, 2, 3, 4]), [[1, 2, 3], 4])\n *\n * @since 2.9.0\n */\nexport var unappend = function (as) { return [init(as), last(as)]; };\n/**\n * @category conversions\n * @since 2.5.0\n */\nexport var fromArray = function (as) { return fromReadonlyArray(as.slice()); };\nexport function concatW(second) {\n    return function (first) { return first.concat(second); };\n}\nexport function concat(x, y) {\n    return y ? x.concat(y) : function (y) { return y.concat(x); };\n}\n/**\n * @since 2.5.0\n */\nexport var reverse = function (as) {\n    return as.length === 1 ? as : __spreadArray([last(as)], as.slice(0, -1).reverse(), true);\n};\nexport function group(E) {\n    return function (as) {\n        var len = as.length;\n        if (len === 0) {\n            return empty;\n        }\n        var out = [];\n        var head = as[0];\n        var nea = [head];\n        for (var i = 1; i < len; i++) {\n            var a = as[i];\n            if (E.equals(a, head)) {\n                nea.push(a);\n            }\n            else {\n                out.push(nea);\n                head = a;\n                nea = [head];\n            }\n        }\n        out.push(nea);\n        return out;\n    };\n}\n/**\n * Splits an array into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n * function on each element, and grouping the results according to values returned\n *\n * @example\n * import { groupBy } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(groupBy((s: string) => String(s.length))(['a', 'b', 'ab']), {\n *   '1': ['a', 'b'],\n *   '2': ['ab']\n * })\n *\n * @since 2.5.0\n */\nexport var groupBy = function (f) {\n    return function (as) {\n        var out = {};\n        for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n            var a = as_1[_i];\n            var k = f(a);\n            if (_.has.call(out, k)) {\n                out[k].push(a);\n            }\n            else {\n                out[k] = [a];\n            }\n        }\n        return out;\n    };\n};\n/**\n * @since 2.5.0\n */\nexport var sort = function (O) {\n    return function (as) {\n        return as.length === 1 ? as : as.slice().sort(O.compare);\n    };\n};\n/**\n * @since 2.5.0\n */\nexport var updateAt = function (i, a) {\n    return modifyAt(i, function () { return a; });\n};\n/**\n * @since 2.5.0\n */\nexport var modifyAt = function (i, f) {\n    return function (as) {\n        return isOutOfBound(i, as) ? _.none : _.some(unsafeUpdateAt(i, f(as[i]), as));\n    };\n};\n/**\n * @since 2.5.1\n */\nexport var zipWith = function (as, bs, f) {\n    var cs = [f(as[0], bs[0])];\n    var len = Math.min(as.length, bs.length);\n    for (var i = 1; i < len; i++) {\n        cs[i] = f(as[i], bs[i]);\n    }\n    return cs;\n};\nexport function zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return zipWith(as, bs, function (a, b) { return [a, b]; });\n}\n/**\n * @since 2.5.1\n */\nexport var unzip = function (abs) {\n    var fa = [abs[0][0]];\n    var fb = [abs[0][1]];\n    for (var i = 1; i < abs.length; i++) {\n        fa[i] = abs[i][0];\n        fb[i] = abs[i][1];\n    }\n    return [fa, fb];\n};\n/**\n * Prepend an element to every member of a `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { prependAll } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.10.0\n */\nexport var prependAll = function (middle) {\n    return function (as) {\n        var out = [middle, as[0]];\n        for (var i = 1; i < as.length; i++) {\n            out.push(middle, as[i]);\n        }\n        return out;\n    };\n};\n/**\n * Places an element in between members of a `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { intersperse } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.9.0\n */\nexport var intersperse = function (middle) {\n    return function (as) {\n        var rest = tail(as);\n        return isNonEmpty(rest) ? pipe(rest, prependAll(middle), prepend(head(as))) : as;\n    };\n};\n/**\n * @category sequencing\n * @since 2.10.0\n */\nexport var chainWithIndex = function (f) {\n    return function (as) {\n        var out = _.fromReadonlyNonEmptyArray(f(0, head(as)));\n        for (var i = 1; i < as.length; i++) {\n            out.push.apply(out, f(i, as[i]));\n        }\n        return out;\n    };\n};\n/**\n * A useful recursion pattern for processing a `ReadonlyNonEmptyArray` to produce a new `ReadonlyNonEmptyArray`, often used for \"chopping\" up the input\n * `ReadonlyNonEmptyArray`. Typically `chop` is called with some function that will consume an initial prefix of the `ReadonlyNonEmptyArray` and produce a\n * value and the tail of the `ReadonlyNonEmptyArray`.\n *\n * @since 2.10.0\n */\nexport var chop = function (f) {\n    return function (as) {\n        var _a = f(as), b = _a[0], rest = _a[1];\n        var out = [b];\n        var next = rest;\n        while (isNonEmpty(next)) {\n            var _b = f(next), b_1 = _b[0], rest_2 = _b[1];\n            out.push(b_1);\n            next = rest_2;\n        }\n        return out;\n    };\n};\n/**\n * Splits a `ReadonlyNonEmptyArray` into two pieces, the first piece has max `n` elements.\n *\n * @since 2.10.0\n */\nexport var splitAt = function (n) {\n    return function (as) {\n        var m = Math.max(1, n);\n        return m >= as.length ? [as, empty] : [pipe(as.slice(1, m), prepend(head(as))), as.slice(m)];\n    };\n};\n/**\n * Splits a `ReadonlyNonEmptyArray` into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the `ReadonlyNonEmptyArray`.\n *\n * @since 2.10.0\n */\nexport var chunksOf = function (n) { return chop(splitAt(n)); };\nvar _map = function (fa, f) { return pipe(fa, map(f)); };\n/* istanbul ignore next */\nvar _mapWithIndex = function (fa, f) { return pipe(fa, mapWithIndex(f)); };\nvar _ap = function (fab, fa) { return pipe(fab, ap(fa)); };\nvar _chain = function (ma, f) { return pipe(ma, chain(f)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return pipe(wa, extend(f)); };\n/* istanbul ignore next */\nvar _reduce = function (fa, b, f) { return pipe(fa, reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) {\n    var foldMapM = foldMap(M);\n    return function (fa, f) { return pipe(fa, foldMapM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return pipe(fa, reduceRight(b, f)); };\n/* istanbul ignore next */\nvar _traverse = function (F) {\n    var traverseF = traverse(F);\n    return function (ta, f) { return pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return pipe(fa, alt(that)); };\n/* istanbul ignore next */\nvar _reduceWithIndex = function (fa, b, f) {\n    return pipe(fa, reduceWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = foldMapWithIndex(M);\n    return function (fa, f) { return pipe(fa, foldMapWithIndexM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return pipe(fa, reduceRightWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (ta, f) { return pipe(ta, traverseWithIndexF(f)); };\n};\n/**\n * @category constructors\n * @since 2.5.0\n */\nexport var of = _.singleton;\n/**\n * Less strict version of [`alt`](#alt).\n *\n * The `W` suffix (short for **W**idening) means that the return types will be merged.\n *\n * @example\n * import * as RNEA from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3] as RNEA.ReadonlyNonEmptyArray<number>,\n *     RNEA.altW(() => ['a', 'b'])\n *   ),\n *   [1, 2, 3, 'a', 'b']\n * )\n *\n * @category error handling\n * @since 2.9.0\n */\nexport var altW = function (that) {\n    return function (as) {\n        return pipe(as, concatW(that()));\n    };\n};\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `ReadonlyNonEmptyArray` concatenates the inputs into a single array.\n *\n * @example\n * import * as RNEA from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RNEA.alt(() => [4, 5])\n *   ),\n *   [1, 2, 3, 4, 5]\n * )\n *\n * @category error handling\n * @since 2.6.2\n */\nexport var alt = altW;\n/**\n * @since 2.5.0\n */\nexport var ap = function (as) { return chain(function (f) { return pipe(as, map(f)); }); };\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @example\n * import * as RNEA from 'fp-ts/ReadonlyNonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RNEA.chain((n) => [`a${n}`, `b${n}`])\n *   ),\n *   ['a1', 'b1', 'a2', 'b2', 'a3', 'b3']\n * )\n *\n * @category sequencing\n * @since 2.5.0\n */\nexport var chain = function (f) { return chainWithIndex(function (_, a) { return f(a); }); };\n/**\n * @since 2.5.0\n */\nexport var extend = function (f) {\n    return function (as) {\n        var next = tail(as);\n        var out = [f(as)];\n        while (isNonEmpty(next)) {\n            out.push(f(next));\n            next = tail(next);\n        }\n        return out;\n    };\n};\n/**\n * @since 2.5.0\n */\nexport var duplicate = \n/*#__PURE__*/ extend(identity);\n/**\n * @category sequencing\n * @since 2.5.0\n */\nexport var flatten = \n/*#__PURE__*/ chain(identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category mapping\n * @since 2.5.0\n */\nexport var map = function (f) {\n    return mapWithIndex(function (_, a) { return f(a); });\n};\n/**\n * @category mapping\n * @since 2.5.0\n */\nexport var mapWithIndex = function (f) {\n    return function (as) {\n        var out = [f(0, head(as))];\n        for (var i = 1; i < as.length; i++) {\n            out.push(f(i, as[i]));\n        }\n        return out;\n    };\n};\n/**\n * @category folding\n * @since 2.5.0\n */\nexport var reduce = function (b, f) {\n    return reduceWithIndex(b, function (_, b, a) { return f(b, a); });\n};\n/**\n * **Note**. The constraint is relaxed: a `Semigroup` instead of a `Monoid`.\n *\n * @category folding\n * @since 2.5.0\n */\nexport var foldMap = function (S) {\n    return function (f) {\n        return function (as) {\n            return as.slice(1).reduce(function (s, a) { return S.concat(s, f(a)); }, f(as[0]));\n        };\n    };\n};\n/**\n * @category folding\n * @since 2.5.0\n */\nexport var reduceRight = function (b, f) {\n    return reduceRightWithIndex(b, function (_, b, a) { return f(b, a); });\n};\n/**\n * @category folding\n * @since 2.5.0\n */\nexport var reduceWithIndex = function (b, f) {\n    return function (as) {\n        return as.reduce(function (b, a, i) { return f(i, b, a); }, b);\n    };\n};\n/**\n * **Note**. The constraint is relaxed: a `Semigroup` instead of a `Monoid`.\n *\n * @category folding\n * @since 2.5.0\n */\nexport var foldMapWithIndex = function (S) {\n    return function (f) {\n        return function (as) {\n            return as.slice(1).reduce(function (s, a, i) { return S.concat(s, f(i + 1, a)); }, f(0, as[0]));\n        };\n    };\n};\n/**\n * @category folding\n * @since 2.5.0\n */\nexport var reduceRightWithIndex = function (b, f) {\n    return function (as) {\n        return as.reduceRight(function (b, a, i) { return f(i, a, b); }, b);\n    };\n};\n/**\n * @category traversing\n * @since 2.6.3\n */\nexport var traverse = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\n/**\n * @category traversing\n * @since 2.6.3\n */\nexport var sequence = function (F) { return traverseWithIndex(F)(SK); };\n/**\n * @category sequencing\n * @since 2.6.3\n */\nexport var traverseWithIndex = function (F) {\n    return function (f) {\n        return function (as) {\n            var out = F.map(f(0, head(as)), of);\n            for (var i = 1; i < as.length; i++) {\n                out = F.ap(F.map(out, function (bs) { return function (b) { return pipe(bs, append(b)); }; }), f(i, as[i]));\n            }\n            return out;\n        };\n    };\n};\n/**\n * @category Comonad\n * @since 2.6.3\n */\nexport var extract = _.head;\n/**\n * @category type lambdas\n * @since 2.5.0\n */\nexport var URI = 'ReadonlyNonEmptyArray';\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var getShow = function (S) { return ({\n    show: function (as) { return \"[\".concat(as.map(S.show).join(', '), \"]\"); }\n}); };\n/**\n * Builds a `Semigroup` instance for `ReadonlyNonEmptyArray`\n *\n * @category instances\n * @since 2.5.0\n */\nexport var getSemigroup = function () { return ({\n    concat: concat\n}); };\n/**\n * @example\n * import { getEq } from 'fp-ts/ReadonlyNonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * const E = getEq(N.Eq)\n * assert.strictEqual(E.equals([1, 2], [1, 2]), true)\n * assert.strictEqual(E.equals([1, 2], [1, 3]), false)\n *\n * @category instances\n * @since 2.5.0\n */\nexport var getEq = function (E) {\n    return fromEquals(function (xs, ys) { return xs.length === ys.length && xs.every(function (x, i) { return E.equals(x, ys[i]); }); });\n};\n/**\n * @since 2.11.0\n */\nexport var getUnionSemigroup = function (E) {\n    var unionE = union(E);\n    return {\n        concat: function (first, second) { return unionE(second)(first); }\n    };\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: _map\n};\n/**\n * @category mapping\n * @since 2.10.0\n */\nexport var flap = /*#__PURE__*/ flap_(Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Pointed = {\n    URI: URI,\n    of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FunctorWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Apply = {\n    URI: URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * @since 2.5.0\n */\nexport var apFirst = /*#__PURE__*/ apFirst_(Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * @since 2.5.0\n */\nexport var apSecond = /*#__PURE__*/ apSecond_(Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Chain = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RA.chainFirst(() => ['a', 'b'])\n *   ),\n *   [1, 1, 2, 2, 3, 3]\n * )\n *\n * @category sequencing\n * @since 2.5.0\n */\nexport var chainFirst = /*#__PURE__*/ chainFirst_(Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FoldableWithIndex = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n    URI: URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var TraversableWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n    URI: URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Comonad = {\n    URI: URI,\n    map: _map,\n    extend: _extend,\n    extract: extract\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @category do notation\n * @since 2.9.0\n */\nexport var Do = /*#__PURE__*/ of(_.emptyRecord);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var bindTo = /*#__PURE__*/ bindTo_(Functor);\nvar let_ = /*#__PURE__*/ let__(Functor);\nexport { \n/**\n * @category do notation\n * @since 2.13.0\n */\nlet_ as let };\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var bind = /*#__PURE__*/ bind_(Chain);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var apS = /*#__PURE__*/ apS_(Apply);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.5.0\n */\nexport var head = extract;\n/**\n * @since 2.5.0\n */\nexport var tail = _.tail;\n/**\n * @since 2.5.0\n */\nexport var last = function (as) { return as[as.length - 1]; };\n/**\n * Get all but the last element of a non empty array, creating a new array.\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), [1, 2])\n * assert.deepStrictEqual(init([1]), [])\n *\n * @since 2.5.0\n */\nexport var init = function (as) { return as.slice(0, -1); };\n/**\n * @since 2.5.0\n */\nexport var min = function (O) {\n    var S = Se.min(O);\n    return function (as) { return as.reduce(S.concat); };\n};\n/**\n * @since 2.5.0\n */\nexport var max = function (O) {\n    var S = Se.max(O);\n    return function (as) { return as.reduce(S.concat); };\n};\n/**\n * @since 2.10.0\n */\nexport var concatAll = function (S) {\n    return function (as) {\n        return as.reduce(S.concat);\n    };\n};\n/**\n * Break a `ReadonlyArray` into its first element and remaining elements.\n *\n * @category pattern matching\n * @since 2.11.0\n */\nexport var matchLeft = function (f) {\n    return function (as) {\n        return f(head(as), tail(as));\n    };\n};\n/**\n * Break a `ReadonlyArray` into its initial elements and the last element.\n *\n * @category pattern matching\n * @since 2.11.0\n */\nexport var matchRight = function (f) {\n    return function (as) {\n        return f(init(as), last(as));\n    };\n};\n/**\n * Apply a function to the head, creating a new `ReadonlyNonEmptyArray`.\n *\n * @since 2.11.0\n */\nexport var modifyHead = function (f) {\n    return function (as) {\n        return __spreadArray([f(head(as))], tail(as), true);\n    };\n};\n/**\n * Change the head, creating a new `ReadonlyNonEmptyArray`.\n *\n * @since 2.11.0\n */\nexport var updateHead = function (a) { return modifyHead(function () { return a; }); };\n/**\n * Apply a function to the last element, creating a new `ReadonlyNonEmptyArray`.\n *\n * @since 2.11.0\n */\nexport var modifyLast = function (f) {\n    return function (as) {\n        return pipe(init(as), append(f(last(as))));\n    };\n};\n/**\n * Change the last element, creating a new `ReadonlyNonEmptyArray`.\n *\n * @since 2.11.0\n */\nexport var updateLast = function (a) { return modifyLast(function () { return a; }); };\n/**\n * Places an element in between members of a `ReadonlyNonEmptyArray`, then folds the results using the provided `Semigroup`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { intercalate } from 'fp-ts/ReadonlyNonEmptyArray'\n *\n * assert.deepStrictEqual(intercalate(S.Semigroup)('-')(['a', 'b', 'c']), 'a-b-c')\n *\n * @since 2.12.0\n */\nexport var intercalate = function (S) {\n    var concatAllS = concatAll(S);\n    return function (middle) { return flow(intersperse(middle), concatAllS); };\n};\nexport function groupSort(O) {\n    var sortO = sort(O);\n    var groupO = group(O);\n    return function (as) { return (isNonEmpty(as) ? groupO(sortO(as)) : empty); };\n}\nexport function filter(predicate) {\n    return filterWithIndex(function (_, a) { return predicate(a); });\n}\n/**\n * Use [`filterWithIndex`](./ReadonlyArray.ts.html#filterwithindex) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var filterWithIndex = function (predicate) {\n    return function (as) {\n        return fromReadonlyArray(as.filter(function (a, i) { return predicate(i, a); }));\n    };\n};\n/**\n * Use [`unprepend`](#unprepend) instead.\n *\n * @category zone of death\n * @since 2.10.0\n * @deprecated\n */\nexport var uncons = unprepend;\n/**\n * Use [`unappend`](#unappend) instead.\n *\n * @category zone of death\n * @since 2.10.0\n * @deprecated\n */\nexport var unsnoc = unappend;\nexport function cons(head, tail) {\n    return tail === undefined ? prepend(head) : pipe(tail, prepend(head));\n}\n/**\n * Use [`append`](./ReadonlyArray.ts.html#append) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var snoc = function (init, end) { return pipe(init, concat([end])); };\n/**\n * Use [`insertAt`](./ReadonlyArray.ts.html#insertat) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var insertAt = function (i, a) {\n    return function (as) {\n        return i < 0 || i > as.length ? _.none : _.some(unsafeInsertAt(i, a, as));\n    };\n};\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category zone of death\n * @since 2.9.0\n * @deprecated\n */\nexport var prependToAll = prependAll;\n/**\n * Use [`concatAll`](#concatall) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var fold = concatAll;\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `RNEA.Functor` instead of `RNEA.readonlyNonEmptyArray`\n * (where `RNEA` is from `import RNEA from 'fp-ts/ReadonlyNonEmptyArray'`)\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var readonlyNonEmptyArray = {\n    URI: URI,\n    of: of,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    ap: _ap,\n    chain: _chain,\n    extend: _extend,\n    extract: extract,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    alt: _alt\n};\n", "var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { apFirst as apFirst_, apS as apS_, apSecond as apSecond_ } from './Apply';\nimport { bind as bind_, chainFirst as chainFirst_ } from './Chain';\nimport { identity, pipe } from './function';\nimport { let as let__, bindTo as bindTo_, flap as flap_ } from './Functor';\nimport * as _ from './internal';\nimport { getMonoid } from './Ord';\nimport * as RNEA from './ReadonlyNonEmptyArray';\n// -------------------------------------------------------------------------------------\n// internal\n// -------------------------------------------------------------------------------------\n/**\n * @internal\n */\nexport var isNonEmpty = function (as) { return as.length > 0; };\n/**\n * @internal\n */\nexport var isOutOfBound = function (i, as) { return i < 0 || i >= as.length; };\n/**\n * @internal\n */\nexport var prependW = function (head) {\n    return function (tail) {\n        return __spreadArray([head], tail, true);\n    };\n};\n/**\n * @internal\n */\nexport var prepend = prependW;\n/**\n * @internal\n */\nexport var appendW = function (end) {\n    return function (init) {\n        return __spreadArray(__spreadArray([], init, true), [end], false);\n    };\n};\n/**\n * @internal\n */\nexport var append = appendW;\n/**\n * @internal\n */\nexport var unsafeInsertAt = function (i, a, as) {\n    if (isNonEmpty(as)) {\n        var xs = fromReadonlyNonEmptyArray(as);\n        xs.splice(i, 0, a);\n        return xs;\n    }\n    return [a];\n};\n/**\n * @internal\n */\nexport var unsafeUpdateAt = function (i, a, as) {\n    var xs = fromReadonlyNonEmptyArray(as);\n    xs[i] = a;\n    return xs;\n};\n/**\n * Remove duplicates from a `NonEmptyArray`, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/NonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @since 2.11.0\n */\nexport var uniq = function (E) {\n    return function (as) {\n        if (as.length === 1) {\n            return copy(as);\n        }\n        var out = [head(as)];\n        var rest = tail(as);\n        var _loop_1 = function (a) {\n            if (out.every(function (o) { return !E.equals(o, a); })) {\n                out.push(a);\n            }\n        };\n        for (var _i = 0, rest_1 = rest; _i < rest_1.length; _i++) {\n            var a = rest_1[_i];\n            _loop_1(a);\n        }\n        return out;\n    };\n};\n/**\n * Sort the elements of a `NonEmptyArray` in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import * as NEA from 'fp-ts/NonEmptyArray'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   name: string\n *   age: number\n * }\n *\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n *\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = NEA.sortBy([byName, byAge])\n *\n * const persons: NEA.NonEmptyArray<Person> = [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 },\n *   { name: 'b', age: 2 }\n * ]\n *\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @since 2.11.0\n */\nexport var sortBy = function (ords) {\n    if (isNonEmpty(ords)) {\n        var M = getMonoid();\n        return sort(ords.reduce(M.concat, M.empty));\n    }\n    return copy;\n};\n/**\n * @since 2.11.0\n */\nexport var union = function (E) {\n    var uniqE = uniq(E);\n    return function (second) { return function (first) { return uniqE(pipe(first, concat(second))); }; };\n};\n/**\n * Rotate a `NonEmptyArray` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n * assert.deepStrictEqual(rotate(-2)([1, 2, 3, 4, 5]), [3, 4, 5, 1, 2])\n *\n * @since 2.11.0\n */\nexport var rotate = function (n) {\n    return function (as) {\n        var len = as.length;\n        var m = Math.round(n) % len;\n        if (isOutOfBound(Math.abs(m), as) || m === 0) {\n            return copy(as);\n        }\n        if (m < 0) {\n            var _a = splitAt(-m)(as), f = _a[0], s = _a[1];\n            return pipe(s, concat(f));\n        }\n        else {\n            return rotate(m - len)(as);\n        }\n    };\n};\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category conversions\n * @since 2.10.0\n */\nexport var fromReadonlyNonEmptyArray = _.fromReadonlyNonEmptyArray;\n/**\n * Builds a `NonEmptyArray` from an `Array` returning `none` if `as` is an empty array\n *\n * @category conversions\n * @since 2.0.0\n */\nexport var fromArray = function (as) { return (isNonEmpty(as) ? _.some(as) : _.none); };\n/**\n * Return a `NonEmptyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { makeBy } from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(pipe(5, makeBy(double)), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.11.0\n */\nexport var makeBy = function (f) {\n    return function (n) {\n        var j = Math.max(0, Math.floor(n));\n        var out = [f(0)];\n        for (var i = 1; i < j; i++) {\n            out.push(f(i));\n        }\n        return out;\n    };\n};\n/**\n * Create a `NonEmptyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a natural number.\n *\n * @example\n * import { replicate } from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(3, replicate('a')), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.11.0\n */\nexport var replicate = function (a) { return makeBy(function () { return a; }); };\n/**\n * Create a `NonEmptyArray` containing a range of integers, including both endpoints.\n *\n * @example\n * import { range } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.11.0\n */\nexport var range = function (start, end) {\n    return start <= end ? makeBy(function (i) { return start + i; })(end - start + 1) : [start];\n};\n/**\n * Return the tuple of the `head` and the `tail`.\n *\n * @example\n * import { unprepend } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(unprepend([1, 2, 3]), [1, [2, 3]])\n *\n * @since 2.9.0\n */\nexport var unprepend = function (as) { return [head(as), tail(as)]; };\n/**\n * Return the tuple of the `init` and the `last`.\n *\n * @example\n * import { unappend } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(unappend([1, 2, 3, 4]), [[1, 2, 3], 4])\n *\n * @since 2.9.0\n */\nexport var unappend = function (as) { return [init(as), last(as)]; };\nexport function concatW(second) {\n    return function (first) { return first.concat(second); };\n}\nexport function concat(x, y) {\n    return y ? x.concat(y) : function (y) { return y.concat(x); };\n}\n/**\n * @since 2.0.0\n */\nexport var reverse = function (as) { return __spreadArray([last(as)], as.slice(0, -1).reverse(), true); };\nexport function group(E) {\n    return function (as) {\n        var len = as.length;\n        if (len === 0) {\n            return [];\n        }\n        var out = [];\n        var head = as[0];\n        var nea = [head];\n        for (var i = 1; i < len; i++) {\n            var a = as[i];\n            if (E.equals(a, head)) {\n                nea.push(a);\n            }\n            else {\n                out.push(nea);\n                head = a;\n                nea = [head];\n            }\n        }\n        out.push(nea);\n        return out;\n    };\n}\n/**\n * Splits an array into sub-non-empty-arrays stored in an object, based on the result of calling a `string`-returning\n * function on each element, and grouping the results according to values returned\n *\n * @example\n * import { groupBy } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(groupBy((s: string) => String(s.length))(['a', 'b', 'ab']), {\n *   '1': ['a', 'b'],\n *   '2': ['ab']\n * })\n *\n * @since 2.0.0\n */\nexport var groupBy = function (f) {\n    return function (as) {\n        var out = {};\n        for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n            var a = as_1[_i];\n            var k = f(a);\n            if (_.has.call(out, k)) {\n                out[k].push(a);\n            }\n            else {\n                out[k] = [a];\n            }\n        }\n        return out;\n    };\n};\n/**\n * @since 2.0.0\n */\nexport var sort = function (O) {\n    return function (as) {\n        return as.slice().sort(O.compare);\n    };\n};\n/**\n * @since 2.0.0\n */\nexport var insertAt = function (i, a) {\n    return function (as) {\n        return i < 0 || i > as.length ? _.none : _.some(unsafeInsertAt(i, a, as));\n    };\n};\n/**\n * @since 2.0.0\n */\nexport var updateAt = function (i, a) {\n    return modifyAt(i, function () { return a; });\n};\n/**\n * @since 2.0.0\n */\nexport var modifyAt = function (i, f) {\n    return function (as) {\n        return isOutOfBound(i, as) ? _.none : _.some(unsafeUpdateAt(i, f(as[i]), as));\n    };\n};\n/**\n * @since 2.0.0\n */\nexport var copy = fromReadonlyNonEmptyArray;\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport var of = function (a) { return [a]; };\n/**\n * @since 2.5.1\n */\nexport var zipWith = function (as, bs, f) {\n    var cs = [f(as[0], bs[0])];\n    var len = Math.min(as.length, bs.length);\n    for (var i = 1; i < len; i++) {\n        cs[i] = f(as[i], bs[i]);\n    }\n    return cs;\n};\nexport function zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return zipWith(as, bs, function (a, b) { return [a, b]; });\n}\n/**\n * @since 2.5.1\n */\nexport var unzip = function (abs) {\n    var fa = [abs[0][0]];\n    var fb = [abs[0][1]];\n    for (var i = 1; i < abs.length; i++) {\n        fa[i] = abs[i][0];\n        fb[i] = abs[i][1];\n    }\n    return [fa, fb];\n};\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependAll } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.10.0\n */\nexport var prependAll = function (middle) {\n    return function (as) {\n        var out = [middle, as[0]];\n        for (var i = 1; i < as.length; i++) {\n            out.push(middle, as[i]);\n        }\n        return out;\n    };\n};\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.9.0\n */\nexport var intersperse = function (middle) {\n    return function (as) {\n        var rest = tail(as);\n        return isNonEmpty(rest) ? pipe(rest, prependAll(middle), prepend(head(as))) : copy(as);\n    };\n};\n/**\n * @category folding\n * @since 2.0.0\n */\nexport var foldMapWithIndex = RNEA.foldMapWithIndex;\n/**\n * @category folding\n * @since 2.0.0\n */\nexport var foldMap = RNEA.foldMap;\n/**\n * @category sequencing\n * @since 2.10.0\n */\nexport var chainWithIndex = function (f) {\n    return function (as) {\n        var out = fromReadonlyNonEmptyArray(f(0, head(as)));\n        for (var i = 1; i < as.length; i++) {\n            out.push.apply(out, f(i, as[i]));\n        }\n        return out;\n    };\n};\n/**\n * @since 2.10.0\n */\nexport var chop = function (f) {\n    return function (as) {\n        var _a = f(as), b = _a[0], rest = _a[1];\n        var out = [b];\n        var next = rest;\n        while (isNonEmpty(next)) {\n            var _b = f(next), b_1 = _b[0], rest_2 = _b[1];\n            out.push(b_1);\n            next = rest_2;\n        }\n        return out;\n    };\n};\n/**\n * Splits a `NonEmptyArray` into two pieces, the first piece has max `n` elements.\n *\n * @since 2.10.0\n */\nexport var splitAt = function (n) {\n    return function (as) {\n        var m = Math.max(1, n);\n        return m >= as.length ? [copy(as), []] : [pipe(as.slice(1, m), prepend(head(as))), as.slice(m)];\n    };\n};\n/**\n * @since 2.10.0\n */\nexport var chunksOf = function (n) { return chop(splitAt(n)); };\n/* istanbul ignore next */\nvar _map = function (fa, f) { return pipe(fa, map(f)); };\n/* istanbul ignore next */\nvar _mapWithIndex = function (fa, f) { return pipe(fa, mapWithIndex(f)); };\n/* istanbul ignore next */\nvar _ap = function (fab, fa) { return pipe(fab, ap(fa)); };\n/* istanbul ignore next */\nvar _chain = function (ma, f) { return pipe(ma, chain(f)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return pipe(wa, extend(f)); };\n/* istanbul ignore next */\nvar _reduce = function (fa, b, f) { return pipe(fa, reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) {\n    var foldMapM = foldMap(M);\n    return function (fa, f) { return pipe(fa, foldMapM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return pipe(fa, reduceRight(b, f)); };\n/* istanbul ignore next */\nvar _traverse = function (F) {\n    var traverseF = traverse(F);\n    return function (ta, f) { return pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return pipe(fa, alt(that)); };\n/* istanbul ignore next */\nvar _reduceWithIndex = function (fa, b, f) {\n    return pipe(fa, reduceWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = foldMapWithIndex(M);\n    return function (fa, f) { return pipe(fa, foldMapWithIndexM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return pipe(fa, reduceRightWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (ta, f) { return pipe(ta, traverseWithIndexF(f)); };\n};\n/**\n * Less strict version of [`alt`](#alt).\n *\n * The `W` suffix (short for **W**idening) means that the return types will be merged.\n *\n * @example\n * import * as NEA from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3] as NEA.NonEmptyArray<number>,\n *     NEA.altW(() => ['a', 'b'])\n *   ),\n *   [1, 2, 3, 'a', 'b']\n * )\n *\n * @category error handling\n * @since 2.9.0\n */\nexport var altW = function (that) {\n    return function (as) {\n        return pipe(as, concatW(that()));\n    };\n};\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `NonEmptyArray` concatenates the inputs into a single array.\n *\n * @example\n * import * as NEA from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     NEA.alt(() => [4, 5])\n *   ),\n *   [1, 2, 3, 4, 5]\n * )\n *\n * @category error handling\n * @since 2.6.2\n */\nexport var alt = altW;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @since 2.0.0\n */\nexport var ap = function (as) {\n    return chain(function (f) { return pipe(as, map(f)); });\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @example\n * import * as NEA from 'fp-ts/NonEmptyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     NEA.chain((n) => [`a${n}`, `b${n}`])\n *   ),\n *   ['a1', 'b1', 'a2', 'b2', 'a3', 'b3']\n * )\n *\n * @category sequencing\n * @since 2.0.0\n */\nexport var chain = function (f) {\n    return chainWithIndex(function (_, a) { return f(a); });\n};\n/**\n * @since 2.0.0\n */\nexport var extend = function (f) {\n    return function (as) {\n        var next = tail(as);\n        var out = [f(as)];\n        while (isNonEmpty(next)) {\n            out.push(f(next));\n            next = tail(next);\n        }\n        return out;\n    };\n};\n/**\n * @since 2.5.0\n */\nexport var duplicate = /*#__PURE__*/ extend(identity);\n/**\n * @category sequencing\n * @since 2.5.0\n */\nexport var flatten = /*#__PURE__*/ chain(identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category mapping\n * @since 2.0.0\n */\nexport var map = function (f) { return mapWithIndex(function (_, a) { return f(a); }); };\n/**\n * @category mapping\n * @since 2.0.0\n */\nexport var mapWithIndex = function (f) {\n    return function (as) {\n        var out = [f(0, head(as))];\n        for (var i = 1; i < as.length; i++) {\n            out.push(f(i, as[i]));\n        }\n        return out;\n    };\n};\n/**\n * @category folding\n * @since 2.0.0\n */\nexport var reduce = RNEA.reduce;\n/**\n * @category folding\n * @since 2.0.0\n */\nexport var reduceWithIndex = RNEA.reduceWithIndex;\n/**\n * @category folding\n * @since 2.0.0\n */\nexport var reduceRight = RNEA.reduceRight;\n/**\n * @category folding\n * @since 2.0.0\n */\nexport var reduceRightWithIndex = RNEA.reduceRightWithIndex;\n/**\n * @category traversing\n * @since 2.6.3\n */\nexport var traverse = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\n/**\n * @category traversing\n * @since 2.6.3\n */\nexport var sequence = function (F) { return traverseWithIndex(F)(function (_, a) { return a; }); };\n/**\n * @category sequencing\n * @since 2.6.3\n */\nexport var traverseWithIndex = function (F) {\n    return function (f) {\n        return function (as) {\n            var out = F.map(f(0, head(as)), of);\n            for (var i = 1; i < as.length; i++) {\n                out = F.ap(F.map(out, function (bs) { return function (b) { return pipe(bs, append(b)); }; }), f(i, as[i]));\n            }\n            return out;\n        };\n    };\n};\n/**\n * @since 2.7.0\n */\nexport var extract = RNEA.head;\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexport var URI = 'NonEmptyArray';\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var getShow = RNEA.getShow;\n/**\n * Builds a `Semigroup` instance for `NonEmptyArray`\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getSemigroup = function () { return ({\n    concat: concat\n}); };\n/**\n * @example\n * import { getEq } from 'fp-ts/NonEmptyArray'\n * import * as N from 'fp-ts/number'\n *\n * const E = getEq(N.Eq)\n * assert.strictEqual(E.equals([1, 2], [1, 2]), true)\n * assert.strictEqual(E.equals([1, 2], [1, 3]), false)\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getEq = RNEA.getEq;\n/**\n * @since 2.11.0\n */\nexport var getUnionSemigroup = function (E) {\n    var unionE = union(E);\n    return {\n        concat: function (first, second) { return unionE(second)(first); }\n    };\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: _map\n};\n/**\n * @category mapping\n * @since 2.10.0\n */\nexport var flap = /*#__PURE__*/ flap_(Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Pointed = {\n    URI: URI,\n    of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FunctorWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Apply = {\n    URI: URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * @since 2.5.0\n */\nexport var apFirst = /*#__PURE__*/ apFirst_(Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * @since 2.5.0\n */\nexport var apSecond = /*#__PURE__*/ apSecond_(Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Chain = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @category sequencing\n * @since 2.5.0\n */\nexport var chainFirst = \n/*#__PURE__*/ chainFirst_(Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FoldableWithIndex = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n    URI: URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var TraversableWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n    URI: URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Comonad = {\n    URI: URI,\n    map: _map,\n    extend: _extend,\n    extract: extract\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @category do notation\n * @since 2.9.0\n */\nexport var Do = /*#__PURE__*/ of(_.emptyRecord);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var bindTo = /*#__PURE__*/ bindTo_(Functor);\nvar let_ = /*#__PURE__*/ let__(Functor);\nexport { \n/**\n * @category do notation\n * @since 2.13.0\n */\nlet_ as let };\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var bind = /*#__PURE__*/ bind_(Chain);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var apS = /*#__PURE__*/ apS_(Apply);\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.0.0\n */\nexport var head = RNEA.head;\n/**\n * @since 2.0.0\n */\nexport var tail = function (as) { return as.slice(1); };\n/**\n * @since 2.0.0\n */\nexport var last = RNEA.last;\n/**\n * Get all but the last element of a non empty array, creating a new array.\n *\n * @example\n * import { init } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), [1, 2])\n * assert.deepStrictEqual(init([1]), [])\n *\n * @since 2.2.0\n */\nexport var init = function (as) { return as.slice(0, -1); };\n/**\n * @since 2.0.0\n */\nexport var min = RNEA.min;\n/**\n * @since 2.0.0\n */\nexport var max = RNEA.max;\n/**\n * @since 2.10.0\n */\nexport var concatAll = function (S) {\n    return function (as) {\n        return as.reduce(S.concat);\n    };\n};\n/**\n * Break an `Array` into its first element and remaining elements.\n *\n * @category pattern matching\n * @since 2.11.0\n */\nexport var matchLeft = function (f) {\n    return function (as) {\n        return f(head(as), tail(as));\n    };\n};\n/**\n * Break an `Array` into its initial elements and the last element.\n *\n * @category pattern matching\n * @since 2.11.0\n */\nexport var matchRight = function (f) {\n    return function (as) {\n        return f(init(as), last(as));\n    };\n};\n/**\n * Apply a function to the head, creating a new `NonEmptyArray`.\n *\n * @since 2.11.0\n */\nexport var modifyHead = function (f) {\n    return function (as) {\n        return __spreadArray([f(head(as))], tail(as), true);\n    };\n};\n/**\n * Change the head, creating a new `NonEmptyArray`.\n *\n * @since 2.11.0\n */\nexport var updateHead = function (a) { return modifyHead(function () { return a; }); };\n/**\n * Apply a function to the last element, creating a new `NonEmptyArray`.\n *\n * @since 2.11.0\n */\nexport var modifyLast = function (f) {\n    return function (as) {\n        return pipe(init(as), append(f(last(as))));\n    };\n};\n/**\n * Change the last element, creating a new `NonEmptyArray`.\n *\n * @since 2.11.0\n */\nexport var updateLast = function (a) { return modifyLast(function () { return a; }); };\n/**\n * Places an element in between members of a `NonEmptyArray`, then folds the results using the provided `Semigroup`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { intercalate } from 'fp-ts/NonEmptyArray'\n *\n * assert.deepStrictEqual(intercalate(S.Semigroup)('-')(['a', 'b', 'c']), 'a-b-c')\n *\n * @since 2.12.0\n */\nexport var intercalate = RNEA.intercalate;\nexport function groupSort(O) {\n    var sortO = sort(O);\n    var groupO = group(O);\n    return function (as) { return (isNonEmpty(as) ? groupO(sortO(as)) : []); };\n}\nexport function filter(predicate) {\n    return filterWithIndex(function (_, a) { return predicate(a); });\n}\n/**\n * Use [`filterWithIndex`](./Array.ts.html#filterwithindex) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var filterWithIndex = function (predicate) {\n    return function (as) {\n        return fromArray(as.filter(function (a, i) { return predicate(i, a); }));\n    };\n};\n/**\n * Use [`unprepend`](#unprepend) instead.\n *\n * @category zone of death\n * @since 2.9.0\n * @deprecated\n */\nexport var uncons = unprepend;\n/**\n * Use [`unappend`](#unappend) instead.\n *\n * @category zone of death\n * @since 2.9.0\n * @deprecated\n */\nexport var unsnoc = unappend;\nexport function cons(head, tail) {\n    return tail === undefined ? prepend(head) : pipe(tail, prepend(head));\n}\n/**\n * Use [`append`](./Array.ts.html#append) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var snoc = function (init, end) { return pipe(init, append(end)); };\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category zone of death\n * @since 2.9.0\n * @deprecated\n */\nexport var prependToAll = prependAll;\n/**\n * Use [`concatAll`](#concatall) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var fold = RNEA.concatAll;\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `NEA.Functor` instead of `NEA.nonEmptyArray`\n * (where `NEA` is from `import NEA from 'fp-ts/NonEmptyArray'`)\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var nonEmptyArray = {\n    URI: URI,\n    of: of,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    ap: _ap,\n    chain: _chain,\n    extend: _extend,\n    extract: extract,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    alt: _alt\n};\n", "// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * @category refinements\n * @since 2.11.0\n */\nexport var isNumber = function (u) { return typeof u === 'number'; };\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Eq = {\n    equals: function (first, second) { return first === second; }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Ord = {\n    equals: Eq.equals,\n    compare: function (first, second) { return (first < second ? -1 : first > second ? 1 : 0); }\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Bounded = {\n    equals: Eq.equals,\n    compare: Ord.compare,\n    top: Infinity,\n    bottom: -Infinity\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Show = {\n    show: function (n) { return JSON.stringify(n); }\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var MagmaSub = {\n    concat: function (first, second) { return first - second; }\n};\n/**\n * `number` semigroup under addition.\n *\n * @example\n * import { SemigroupSum } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(SemigroupSum.concat(2, 3), 5)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var SemigroupSum = {\n    concat: function (first, second) { return first + second; }\n};\n/**\n * `number` semigroup under multiplication.\n *\n * @example\n * import { SemigroupProduct } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(SemigroupProduct.concat(2, 3), 6)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var SemigroupProduct = {\n    concat: function (first, second) { return first * second; }\n};\n/**\n * `number` monoid under addition.\n *\n * The `empty` value is `0`.\n *\n * @example\n * import { MonoidSum } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(MonoidSum.concat(2, MonoidSum.empty), 2)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var MonoidSum = {\n    concat: SemigroupSum.concat,\n    empty: 0\n};\n/**\n * `number` monoid under multiplication.\n *\n * The `empty` value is `1`.\n *\n * @example\n * import { MonoidProduct } from 'fp-ts/number'\n *\n * assert.deepStrictEqual(MonoidProduct.concat(2, MonoidProduct.empty), 2)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var MonoidProduct = {\n    concat: SemigroupProduct.concat,\n    empty: 1\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Field = {\n    add: SemigroupSum.concat,\n    zero: 0,\n    mul: SemigroupProduct.concat,\n    one: 1,\n    sub: MagmaSub.concat,\n    degree: function (_) { return 1; },\n    div: function (first, second) { return first / second; },\n    mod: function (first, second) { return first % second; }\n};\n", "export function guard(F, P) {\n    return function (b) { return (b ? P.of(undefined) : F.zero()); };\n}\n", "var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { apFirst as apFirst_, apS as apS_, apSecond as apSecond_ } from './Apply';\nimport { bind as bind_, chainFirst as chainFirst_ } from './Chain';\nimport { fromEquals } from './Eq';\nimport { fromEitherK as fromEitherK_ } from './FromEither';\nimport { identity, pipe } from './function';\nimport { bindTo as bindTo_, flap as flap_, let as let__ } from './Functor';\nimport * as _ from './internal';\nimport * as N from './number';\nimport { fromCompare } from './Ord';\nimport * as RNEA from './ReadonlyNonEmptyArray';\nimport { separated } from './Separated';\nimport { filterE as filterE_, wiltDefault, witherDefault } from './Witherable';\nimport { guard as guard_ } from './Zero';\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * Test whether a `ReadonlyArray` is empty.\n *\n * @example\n * import { isEmpty } from 'fp-ts/ReadonlyArray'\n *\n * assert.strictEqual(isEmpty([]), true)\n *\n * @category refinements\n * @since 2.5.0\n */\nexport var isEmpty = function (as) { return as.length === 0; };\n/**\n * Test whether a `ReadonlyArray` is non empty.\n *\n * @category refinements\n * @since 2.5.0\n */\nexport var isNonEmpty = RNEA.isNonEmpty;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Prepend an element to the front of a `ReadonlyArray`, creating a new `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { prepend } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([2, 3, 4], prepend(1)), [1, 2, 3, 4])\n *\n * @since 2.10.0\n */\nexport var prepend = RNEA.prepend;\n/**\n * Less strict version of [`prepend`](#prepend).\n *\n * @since 2.11.0\n */\nexport var prependW = RNEA.prependW;\n/**\n * Append an element to the end of a `ReadonlyArray`, creating a new `ReadonlyNonEmptyArray`.\n *\n * @example\n * import { append } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], append(4)), [1, 2, 3, 4])\n *\n * @since 2.10.0\n */\nexport var append = RNEA.append;\n/**\n * Less strict version of [`append`](#append).\n *\n * @since 2.11.0\n */\nexport var appendW = RNEA.appendW;\n/**\n * Return a `ReadonlyArray` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { makeBy } from 'fp-ts/ReadonlyArray'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.5.0\n */\nexport var makeBy = function (n, f) { return (n <= 0 ? empty : RNEA.makeBy(f)(n)); };\n/**\n * Create a `ReadonlyArray` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { replicate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.5.0\n */\nexport var replicate = function (n, a) { return makeBy(n, function () { return a; }); };\nexport function fromPredicate(predicate) {\n    return function (a) { return (predicate(a) ? [a] : empty); };\n}\n// -------------------------------------------------------------------------------------\n// conversions\n// -------------------------------------------------------------------------------------\n/**\n * @category conversions\n * @since 2.11.0\n */\nexport var fromOption = function (ma) { return (_.isNone(ma) ? empty : [ma.value]); };\n/**\n * Transforms an `Either` to a `ReadonlyArray`.\n *\n * @category conversions\n * @since 2.11.0\n */\nexport var fromEither = function (e) { return (_.isLeft(e) ? empty : [e.right]); };\n/**\n * Less strict version of [`match`](#match).\n *\n * The `W` suffix (short for **W**idening) means that the handler return types will be merged.\n *\n * @category pattern matching\n * @since 2.11.0\n */\nexport var matchW = function (onEmpty, onNonEmpty) {\n    return function (as) {\n        return isNonEmpty(as) ? onNonEmpty(as) : onEmpty();\n    };\n};\n/**\n * @category pattern matching\n * @since 2.11.0\n */\nexport var match = matchW;\n/**\n * Less strict version of [`matchLeft`](#matchleft).\n *\n * @category pattern matching\n * @since 2.11.0\n */\nexport var matchLeftW = function (onEmpty, onNonEmpty) {\n    return function (as) {\n        return isNonEmpty(as) ? onNonEmpty(RNEA.head(as), RNEA.tail(as)) : onEmpty();\n    };\n};\n/**\n * Break a `ReadonlyArray` into its first element and remaining elements.\n *\n * @example\n * import { matchLeft } from 'fp-ts/ReadonlyArray'\n *\n * const len: <A>(as: ReadonlyArray<A>) => number = matchLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexport var matchLeft = matchLeftW;\n/**\n * Alias of [`matchLeft`](#matchleft).\n *\n * @category pattern matching\n * @since 2.5.0\n */\nexport var foldLeft = matchLeft;\n/**\n * Less strict version of [`matchRight`](#matchright).\n *\n * @category pattern matching\n * @since 2.11.0\n */\nexport var matchRightW = function (onEmpty, onNonEmpty) {\n    return function (as) {\n        return isNonEmpty(as) ? onNonEmpty(RNEA.init(as), RNEA.last(as)) : onEmpty();\n    };\n};\n/**\n * Break a `ReadonlyArray` into its initial elements and the last element.\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexport var matchRight = matchRightW;\n/**\n * Alias of [`matchRight`](#matchright).\n *\n * @category pattern matching\n * @since 2.5.0\n */\nexport var foldRight = matchRight;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @category sequencing\n * @since 2.7.0\n */\nexport var chainWithIndex = function (f) {\n    return function (as) {\n        if (isEmpty(as)) {\n            return empty;\n        }\n        var out = [];\n        for (var i = 0; i < as.length; i++) {\n            out.push.apply(out, f(i, as[i]));\n        }\n        return out;\n    };\n};\n/**\n * Same as `reduce` but it carries over the intermediate steps.\n *\n * @example\n * import { scanLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n *\n * @since 2.5.0\n */\nexport var scanLeft = function (b, f) {\n    return function (as) {\n        var len = as.length;\n        var out = new Array(len + 1);\n        out[0] = b;\n        for (var i = 0; i < len; i++) {\n            out[i + 1] = f(out[i], as[i]);\n        }\n        return out;\n    };\n};\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @since 2.5.0\n */\nexport var scanRight = function (b, f) {\n    return function (as) {\n        var len = as.length;\n        var out = new Array(len + 1);\n        out[len] = b;\n        for (var i = len - 1; i >= 0; i--) {\n            out[i] = f(as[i], out[i + 1]);\n        }\n        return out;\n    };\n};\n/**\n * Calculate the number of elements in a `ReadonlyArray`.\n *\n * @since 2.10.0\n */\nexport var size = function (as) { return as.length; };\n/**\n * Test whether an array contains a particular index\n *\n * @since 2.5.0\n */\nexport var isOutOfBound = RNEA.isOutOfBound;\nexport function lookup(i, as) {\n    return as === undefined ? function (as) { return lookup(i, as); } : isOutOfBound(i, as) ? _.none : _.some(as[i]);\n}\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @since 2.5.0\n */\nexport var head = function (as) { return (isNonEmpty(as) ? _.some(RNEA.head(as)) : _.none); };\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @since 2.5.0\n */\nexport var last = function (as) { return (isNonEmpty(as) ? _.some(RNEA.last(as)) : _.none); };\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @since 2.5.0\n */\nexport var tail = function (as) {\n    return isNonEmpty(as) ? _.some(RNEA.tail(as)) : _.none;\n};\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @since 2.5.0\n */\nexport var init = function (as) {\n    return isNonEmpty(as) ? _.some(RNEA.init(as)) : _.none;\n};\n/**\n * Keep only a max number of elements from the start of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.takeLeft(2)), [1, 2])\n *\n * // out of bounds\n * assert.strictEqual(pipe(input, RA.takeLeft(4)), input)\n * assert.strictEqual(pipe(input, RA.takeLeft(-1)), input)\n *\n * @since 2.5.0\n */\nexport var takeLeft = function (n) {\n    return function (as) {\n        return isOutOfBound(n, as) ? as : n === 0 ? empty : as.slice(0, n);\n    };\n};\n/**\n * Keep only a max number of elements from the end of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.takeRight(2)), [2, 3])\n *\n * // out of bounds\n * assert.strictEqual(pipe(input, RA.takeRight(4)), input)\n * assert.strictEqual(pipe(input, RA.takeRight(-1)), input)\n *\n * @since 2.5.0\n */\nexport var takeRight = function (n) {\n    return function (as) {\n        return isOutOfBound(n, as) ? as : n === 0 ? empty : as.slice(-n);\n    };\n};\nexport function takeLeftWhile(predicate) {\n    return function (as) {\n        var out = [];\n        for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n            var a = as_1[_i];\n            if (!predicate(a)) {\n                break;\n            }\n            out.push(a);\n        }\n        var len = out.length;\n        return len === as.length ? as : len === 0 ? empty : out;\n    };\n}\nvar spanLeftIndex = function (as, predicate) {\n    var l = as.length;\n    var i = 0;\n    for (; i < l; i++) {\n        if (!predicate(as[i])) {\n            break;\n        }\n    }\n    return i;\n};\nexport function spanLeft(predicate) {\n    return function (as) {\n        var _a = splitAt(spanLeftIndex(as, predicate))(as), init = _a[0], rest = _a[1];\n        return { init: init, rest: rest };\n    };\n}\n/**\n * Drop a max number of elements from the start of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.dropLeft(2)), [3])\n * assert.strictEqual(pipe(input, RA.dropLeft(0)), input)\n * assert.strictEqual(pipe(input, RA.dropLeft(-1)), input)\n *\n * @since 2.5.0\n */\nexport var dropLeft = function (n) {\n    return function (as) {\n        return n <= 0 || isEmpty(as) ? as : n >= as.length ? empty : as.slice(n, as.length);\n    };\n};\n/**\n * Drop a max number of elements from the end of an `ReadonlyArray`, creating a new `ReadonlyArray`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const input: ReadonlyArray<number> = [1, 2, 3]\n * assert.deepStrictEqual(pipe(input, RA.dropRight(2)), [1])\n * assert.strictEqual(pipe(input, RA.dropRight(0)), input)\n * assert.strictEqual(pipe(input, RA.dropRight(-1)), input)\n *\n * @since 2.5.0\n */\nexport var dropRight = function (n) {\n    return function (as) {\n        return n <= 0 || isEmpty(as) ? as : n >= as.length ? empty : as.slice(0, as.length - n);\n    };\n};\nexport function dropLeftWhile(predicate) {\n    return function (as) {\n        var i = spanLeftIndex(as, predicate);\n        return i === 0 ? as : i === as.length ? empty : as.slice(i);\n    };\n}\n/**\n * Find the first index for which a predicate holds\n *\n * @example\n * import { findIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.5.0\n */\nexport var findIndex = function (predicate) {\n    return function (as) {\n        for (var i = 0; i < as.length; i++) {\n            if (predicate(as[i])) {\n                return _.some(i);\n            }\n        }\n        return _.none;\n    };\n};\nexport function findFirst(predicate) {\n    return function (as) {\n        for (var i = 0; i < as.length; i++) {\n            if (predicate(as[i])) {\n                return _.some(as[i]);\n            }\n        }\n        return _.none;\n    };\n}\n/**\n * Find the first element returned by an option based selector function\n *\n * @example\n * import { findFirstMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the first person that has an age\n * assert.deepStrictEqual(findFirstMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Mary'))\n *\n * @since 2.5.0\n */\nexport var findFirstMap = function (f) {\n    return function (as) {\n        for (var i = 0; i < as.length; i++) {\n            var out = f(as[i]);\n            if (_.isSome(out)) {\n                return out;\n            }\n        }\n        return _.none;\n    };\n};\nexport function findLast(predicate) {\n    return function (as) {\n        for (var i = as.length - 1; i >= 0; i--) {\n            if (predicate(as[i])) {\n                return _.some(as[i]);\n            }\n        }\n        return _.none;\n    };\n}\n/**\n * Find the last element returned by an option based selector function\n *\n * @example\n * import { findLastMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the last person that has an age\n * assert.deepStrictEqual(findLastMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Joey'))\n *\n * @since 2.5.0\n */\nexport var findLastMap = function (f) {\n    return function (as) {\n        for (var i = as.length - 1; i >= 0; i--) {\n            var out = f(as[i]);\n            if (_.isSome(out)) {\n                return out;\n            }\n        }\n        return _.none;\n    };\n};\n/**\n * Returns the index of the last element of the list which matches the predicate\n *\n * @example\n * import { findLastIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   readonly a: number\n *   readonly b: number\n * }\n * const xs: ReadonlyArray<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 4)(xs), none)\n *\n *\n * @since 2.5.0\n */\nexport var findLastIndex = function (predicate) {\n    return function (as) {\n        for (var i = as.length - 1; i >= 0; i--) {\n            if (predicate(as[i])) {\n                return _.some(i);\n            }\n        }\n        return _.none;\n    };\n};\n/**\n * Insert an element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { insertAt } from 'fp-ts/ReadonlyArray'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.5.0\n */\nexport var insertAt = function (i, a) {\n    return function (as) {\n        return i < 0 || i > as.length ? _.none : _.some(RNEA.unsafeInsertAt(i, a, as));\n    };\n};\n/**\n * Change the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { updateAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.5.0\n */\nexport var updateAt = function (i, a) {\n    return modifyAt(i, function () { return a; });\n};\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { deleteAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.5.0\n */\nexport var deleteAt = function (i) {\n    return function (as) {\n        return isOutOfBound(i, as) ? _.none : _.some(unsafeDeleteAt(i, as));\n    };\n};\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds\n *\n * @example\n * import { modifyAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.5.0\n */\nexport var modifyAt = function (i, f) {\n    return function (as) {\n        return isOutOfBound(i, as) ? _.none : _.some(unsafeUpdateAt(i, f(as[i]), as));\n    };\n};\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @since 2.5.0\n */\nexport var reverse = function (as) { return (as.length <= 1 ? as : as.slice().reverse()); };\n/**\n * Extracts from an array of `Either` all the `Right` elements. All the `Right` elements are extracted in order\n *\n * @example\n * import { rights } from 'fp-ts/ReadonlyArray'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @since 2.5.0\n */\nexport var rights = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Right') {\n            r.push(a.right);\n        }\n    }\n    return r;\n};\n/**\n * Extracts from an array of `Either` all the `Left` elements. All the `Left` elements are extracted in order\n *\n * @example\n * import { lefts } from 'fp-ts/ReadonlyArray'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @since 2.5.0\n */\nexport var lefts = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Left') {\n            r.push(a.left);\n        }\n    }\n    return r;\n};\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(sort(N.Ord)([3, 2, 1]), [1, 2, 3])\n *\n * @since 2.5.0\n */\nexport var sort = function (O) {\n    return function (as) {\n        return as.length <= 1 ? as : as.slice().sort(O.compare);\n    };\n};\n// TODO: curry and make data-last in v3\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @since 2.5.0\n */\nexport var zipWith = function (fa, fb, f) {\n    var fc = [];\n    var len = Math.min(fa.length, fb.length);\n    for (var i = 0; i < len; i++) {\n        fc[i] = f(fa[i], fb[i]);\n    }\n    return fc;\n};\nexport function zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return zipWith(as, bs, function (a, b) { return [a, b]; });\n}\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @since 2.5.0\n */\nexport var unzip = function (as) {\n    var fa = [];\n    var fb = [];\n    for (var i = 0; i < as.length; i++) {\n        fa[i] = as[i][0];\n        fb[i] = as[i][1];\n    }\n    return [fa, fb];\n};\n/**\n * Prepend an element to every member of an array\n *\n * @example\n * import { prependAll } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.10.0\n */\nexport var prependAll = function (middle) {\n    var f = RNEA.prependAll(middle);\n    return function (as) { return (isNonEmpty(as) ? f(as) : as); };\n};\n/**\n * Places an element in between members of an array\n *\n * @example\n * import { intersperse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.9.0\n */\nexport var intersperse = function (middle) {\n    var f = RNEA.intersperse(middle);\n    return function (as) { return (isNonEmpty(as) ? f(as) : as); };\n};\n/**\n * Rotate a `ReadonlyArray` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @since 2.5.0\n */\nexport var rotate = function (n) {\n    var f = RNEA.rotate(n);\n    return function (as) { return (isNonEmpty(as) ? f(as) : as); };\n};\nexport function elem(E) {\n    return function (a, as) {\n        if (as === undefined) {\n            var elemE_1 = elem(E);\n            return function (as) { return elemE_1(a, as); };\n        }\n        var predicate = function (element) { return E.equals(element, a); };\n        var i = 0;\n        for (; i < as.length; i++) {\n            if (predicate(as[i])) {\n                return true;\n            }\n        }\n        return false;\n    };\n}\n/**\n * Remove duplicates from an array, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @since 2.5.0\n */\nexport var uniq = function (E) {\n    var f = RNEA.uniq(E);\n    return function (as) { return (isNonEmpty(as) ? f(as) : as); };\n};\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/ReadonlyArray'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age: number\n * }\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @since 2.5.0\n */\nexport var sortBy = function (ords) {\n    var f = RNEA.sortBy(ords);\n    return function (as) { return (isNonEmpty(as) ? f(as) : as); };\n};\n/**\n * A useful recursion pattern for processing a `ReadonlyArray` to produce a new `ReadonlyArray`, often used for \"chopping\" up the input\n * `ReadonlyArray`. Typically `chop` is called with some function that will consume an initial prefix of the `ReadonlyArray` and produce a\n * value and the tail of the `ReadonlyArray`.\n *\n * @example\n * import { Eq } from 'fp-ts/Eq'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * const group = <A>(S: Eq<A>): ((as: ReadonlyArray<A>) => ReadonlyArray<ReadonlyArray<A>>) => {\n *   return RA.chop(as => {\n *     const { init, rest } = pipe(as, RA.spanLeft((a: A) => S.equals(a, as[0])))\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(N.Eq)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @since 2.5.0\n */\nexport var chop = function (f) {\n    var g = RNEA.chop(f);\n    return function (as) { return (isNonEmpty(as) ? g(as) : empty); };\n};\n/**\n * Splits a `ReadonlyArray` into two pieces, the first piece has max `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @since 2.5.0\n */\nexport var splitAt = function (n) {\n    return function (as) {\n        return n >= 1 && isNonEmpty(as) ? RNEA.splitAt(n)(as) : isEmpty(as) ? [as, empty] : [empty, as];\n    };\n};\n/**\n * Splits a `ReadonlyArray` into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the `ReadonlyArray`. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that:\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `as`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n * @since 2.5.0\n */\nexport var chunksOf = function (n) {\n    var f = RNEA.chunksOf(n);\n    return function (as) { return (isNonEmpty(as) ? f(as) : empty); };\n};\n/**\n * @category lifting\n * @since 2.11.0\n */\nexport var fromOptionK = function (f) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return fromOption(f.apply(void 0, a));\n    };\n};\nexport function comprehension(input, f, g) {\n    if (g === void 0) { g = function () { return true; }; }\n    var go = function (scope, input) {\n        return isNonEmpty(input)\n            ? pipe(RNEA.head(input), chain(function (x) { return go(pipe(scope, append(x)), RNEA.tail(input)); }))\n            : g.apply(void 0, scope) ? [f.apply(void 0, scope)]\n                : empty;\n    };\n    return go(empty, input);\n}\n/**\n * @since 2.11.0\n */\nexport var concatW = function (second) {\n    return function (first) {\n        return isEmpty(first) ? second : isEmpty(second) ? first : first.concat(second);\n    };\n};\n/**\n * @since 2.11.0\n */\nexport var concat = concatW;\nexport function union(E) {\n    var unionE = RNEA.union(E);\n    return function (first, second) {\n        if (second === undefined) {\n            var unionE_1 = union(E);\n            return function (second) { return unionE_1(second, first); };\n        }\n        return isNonEmpty(first) && isNonEmpty(second) ? unionE(second)(first) : isNonEmpty(first) ? first : second;\n    };\n}\nexport function intersection(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var intersectionE_1 = intersection(E);\n            return function (ys) { return intersectionE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return elemE(a, ys); });\n    };\n}\nexport function difference(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var differenceE_1 = difference(E);\n            return function (ys) { return differenceE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return !elemE(a, ys); });\n    };\n}\nvar _map = function (fa, f) { return pipe(fa, map(f)); };\nvar _mapWithIndex = function (fa, f) { return pipe(fa, mapWithIndex(f)); };\nvar _ap = function (fab, fa) { return pipe(fab, ap(fa)); };\nvar _chain = function (ma, f) { return pipe(ma, chain(f)); };\nvar _filter = function (fa, predicate) {\n    return pipe(fa, filter(predicate));\n};\nvar _filterMap = function (fa, f) { return pipe(fa, filterMap(f)); };\nvar _partition = function (fa, predicate) {\n    return pipe(fa, partition(predicate));\n};\nvar _partitionMap = function (fa, f) { return pipe(fa, partitionMap(f)); };\nvar _partitionWithIndex = function (fa, predicateWithIndex) { return pipe(fa, partitionWithIndex(predicateWithIndex)); };\nvar _partitionMapWithIndex = function (fa, f) { return pipe(fa, partitionMapWithIndex(f)); };\nvar _alt = function (fa, that) { return pipe(fa, alt(that)); };\nvar _reduce = function (fa, b, f) { return pipe(fa, reduce(b, f)); };\nvar _foldMap = function (M) {\n    var foldMapM = foldMap(M);\n    return function (fa, f) { return pipe(fa, foldMapM(f)); };\n};\nvar _reduceRight = function (fa, b, f) { return pipe(fa, reduceRight(b, f)); };\nvar _reduceWithIndex = function (fa, b, f) {\n    return pipe(fa, reduceWithIndex(b, f));\n};\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = foldMapWithIndex(M);\n    return function (fa, f) { return pipe(fa, foldMapWithIndexM(f)); };\n};\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return pipe(fa, reduceRightWithIndex(b, f));\n};\nvar _filterMapWithIndex = function (fa, f) { return pipe(fa, filterMapWithIndex(f)); };\nvar _filterWithIndex = function (fa, predicateWithIndex) { return pipe(fa, filterWithIndex(predicateWithIndex)); };\nvar _extend = function (fa, f) { return pipe(fa, extend(f)); };\nvar _traverse = function (F) {\n    var traverseF = traverse(F);\n    return function (ta, f) { return pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (ta, f) { return pipe(ta, traverseWithIndexF(f)); };\n};\n/** @internal */\nexport var _chainRecDepthFirst = function (a, f) { return pipe(a, chainRecDepthFirst(f)); };\n/** @internal */\nexport var _chainRecBreadthFirst = function (a, f) { return pipe(a, chainRecBreadthFirst(f)); };\n/**\n * @category constructors\n * @since 2.5.0\n */\nexport var of = RNEA.of;\n/**\n * @since 2.7.0\n */\nexport var zero = function () { return empty; };\n/**\n * Less strict version of [`alt`](#alt).\n *\n * The `W` suffix (short for **W**idening) means that the return types will be merged.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RA.altW(() => ['a', 'b'])\n *   ),\n *   [1, 2, 3, 'a', 'b']\n * )\n *\n * @category error handling\n * @since 2.9.0\n */\nexport var altW = function (that) {\n    return function (fa) {\n        return fa.concat(that());\n    };\n};\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `ReadonlyArray` concatenates the inputs into a single array.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RA.alt(() => [4, 5])\n *   ),\n *   [1, 2, 3, 4, 5]\n * )\n *\n * @category error handling\n * @since 2.5.0\n */\nexport var alt = altW;\n/**\n * @since 2.5.0\n */\nexport var ap = function (fa) {\n    return chain(function (f) { return pipe(fa, map(f)); });\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RA.chain((n) => [`a${n}`, `b${n}`])\n *   ),\n *   ['a1', 'b1', 'a2', 'b2', 'a3', 'b3']\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RA.chain(() => [])\n *   ),\n *   []\n * )\n *\n * @category sequencing\n * @since 2.5.0\n */\nexport var chain = function (f) { return function (ma) {\n    return pipe(ma, chainWithIndex(function (_, a) { return f(a); }));\n}; };\n/**\n * @category sequencing\n * @since 2.5.0\n */\nexport var flatten = /*#__PURE__*/ chain(identity);\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category mapping\n * @since 2.5.0\n */\nexport var map = function (f) { return function (fa) {\n    return fa.map(function (a) { return f(a); });\n}; };\n/**\n * @category mapping\n * @since 2.5.0\n */\nexport var mapWithIndex = function (f) { return function (fa) {\n    return fa.map(function (a, i) { return f(i, a); });\n}; };\n/**\n * @category filtering\n * @since 2.5.0\n */\nexport var separate = function (fa) {\n    var left = [];\n    var right = [];\n    for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n        var e = fa_1[_i];\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return separated(left, right);\n};\n/**\n * @category filtering\n * @since 2.5.0\n */\nexport var filter = function (predicate) {\n    return function (as) {\n        return as.filter(predicate);\n    };\n};\n/**\n * @category filtering\n * @since 2.5.0\n */\nexport var filterMapWithIndex = function (f) {\n    return function (fa) {\n        var out = [];\n        for (var i = 0; i < fa.length; i++) {\n            var optionB = f(i, fa[i]);\n            if (_.isSome(optionB)) {\n                out.push(optionB.value);\n            }\n        }\n        return out;\n    };\n};\n/**\n * @category filtering\n * @since 2.5.0\n */\nexport var filterMap = function (f) {\n    return filterMapWithIndex(function (_, a) { return f(a); });\n};\n/**\n * @category filtering\n * @since 2.5.0\n */\nexport var compact = /*#__PURE__*/ filterMap(identity);\n/**\n * @category filtering\n * @since 2.5.0\n */\nexport var partition = function (predicate) {\n    return partitionWithIndex(function (_, a) { return predicate(a); });\n};\n/**\n * @category filtering\n * @since 2.5.0\n */\nexport var partitionWithIndex = function (predicateWithIndex) {\n    return function (as) {\n        var left = [];\n        var right = [];\n        for (var i = 0; i < as.length; i++) {\n            var a = as[i];\n            if (predicateWithIndex(i, a)) {\n                right.push(a);\n            }\n            else {\n                left.push(a);\n            }\n        }\n        return separated(left, right);\n    };\n};\n/**\n * @category filtering\n * @since 2.5.0\n */\nexport var partitionMap = function (f) {\n    return partitionMapWithIndex(function (_, a) { return f(a); });\n};\n/**\n * @category filtering\n * @since 2.5.0\n */\nexport var partitionMapWithIndex = function (f) {\n    return function (fa) {\n        var left = [];\n        var right = [];\n        for (var i = 0; i < fa.length; i++) {\n            var e = f(i, fa[i]);\n            if (e._tag === 'Left') {\n                left.push(e.left);\n            }\n            else {\n                right.push(e.right);\n            }\n        }\n        return separated(left, right);\n    };\n};\n/**\n * @category filtering\n * @since 2.5.0\n */\nexport var filterWithIndex = function (predicateWithIndex) {\n    return function (as) {\n        return as.filter(function (a, i) { return predicateWithIndex(i, a); });\n    };\n};\n/**\n * @since 2.5.0\n */\nexport var extend = function (f) { return function (wa) {\n    return wa.map(function (_, i) { return f(wa.slice(i)); });\n}; };\n/**\n * @since 2.5.0\n */\nexport var duplicate = /*#__PURE__*/ extend(identity);\n/**\n * @category folding\n * @since 2.5.0\n */\nexport var foldMapWithIndex = function (M) {\n    return function (f) {\n        return function (fa) {\n            return fa.reduce(function (b, a, i) { return M.concat(b, f(i, a)); }, M.empty);\n        };\n    };\n};\n/**\n * @category folding\n * @since 2.5.0\n */\nexport var reduce = function (b, f) {\n    return reduceWithIndex(b, function (_, b, a) { return f(b, a); });\n};\n/**\n * @category folding\n * @since 2.5.0\n */\nexport var foldMap = function (M) {\n    var foldMapWithIndexM = foldMapWithIndex(M);\n    return function (f) { return foldMapWithIndexM(function (_, a) { return f(a); }); };\n};\n/**\n * @category folding\n * @since 2.5.0\n */\nexport var reduceWithIndex = function (b, f) { return function (fa) {\n    var len = fa.length;\n    var out = b;\n    for (var i = 0; i < len; i++) {\n        out = f(i, out, fa[i]);\n    }\n    return out;\n}; };\n/**\n * @category folding\n * @since 2.5.0\n */\nexport var reduceRight = function (b, f) {\n    return reduceRightWithIndex(b, function (_, a, b) { return f(a, b); });\n};\n/**\n * @category folding\n * @since 2.5.0\n */\nexport var reduceRightWithIndex = function (b, f) { return function (fa) {\n    return fa.reduceRight(function (b, a, i) { return f(i, a, b); }, b);\n}; };\n/**\n * @category traversing\n * @since 2.6.3\n */\nexport var traverse = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\n/**\n * @category traversing\n * @since 2.6.3\n */\nexport var sequence = function (F) {\n    return function (ta) {\n        return _reduce(ta, F.of(zero()), function (fas, fa) {\n            return F.ap(F.map(fas, function (as) { return function (a) { return pipe(as, append(a)); }; }), fa);\n        });\n    };\n};\n/**\n * @category sequencing\n * @since 2.6.3\n */\nexport var traverseWithIndex = function (F) {\n    return function (f) {\n        return reduceWithIndex(F.of(zero()), function (i, fbs, a) {\n            return F.ap(F.map(fbs, function (bs) { return function (b) { return pipe(bs, append(b)); }; }), f(i, a));\n        });\n    };\n};\n/**\n * @category filtering\n * @since 2.6.5\n */\nexport var wither = function (F) {\n    var _witherF = _wither(F);\n    return function (f) { return function (fa) { return _witherF(fa, f); }; };\n};\n/**\n * @category filtering\n * @since 2.6.5\n */\nexport var wilt = function (F) {\n    var _wiltF = _wilt(F);\n    return function (f) { return function (fa) { return _wiltF(fa, f); }; };\n};\n/**\n * @since 2.6.6\n */\nexport var unfold = function (b, f) {\n    var out = [];\n    var bb = b;\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        var mt = f(bb);\n        if (_.isSome(mt)) {\n            var _a = mt.value, a = _a[0], b_1 = _a[1];\n            out.push(a);\n            bb = b_1;\n        }\n        else {\n            break;\n        }\n    }\n    return out;\n};\n/**\n * @category type lambdas\n * @since 2.5.0\n */\nexport var URI = 'ReadonlyArray';\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var getShow = function (S) { return ({\n    show: function (as) { return \"[\".concat(as.map(S.show).join(', '), \"]\"); }\n}); };\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var getSemigroup = function () { return ({\n    concat: function (first, second) { return (isEmpty(first) ? second : isEmpty(second) ? first : first.concat(second)); }\n}); };\n/**\n * Returns a `Monoid` for `ReadonlyArray<A>`.\n *\n * @example\n * import { getMonoid } from 'fp-ts/ReadonlyArray'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.5.0\n */\nexport var getMonoid = function () { return ({\n    concat: getSemigroup().concat,\n    empty: empty\n}); };\n/**\n * Derives an `Eq` over the `ReadonlyArray` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { getEq } from 'fp-ts/ReadonlyArray'\n *\n * const E = getEq(S.Eq)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.5.0\n */\nexport var getEq = function (E) {\n    return fromEquals(function (xs, ys) { return xs.length === ys.length && xs.every(function (x, i) { return E.equals(x, ys[i]); }); });\n};\n/**\n * Derives an `Ord` over the `ReadonlyArray` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/ReadonlyArray'\n * import * as S from 'fp-ts/string'\n *\n * const O = getOrd(S.Ord)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n *\n * @category instances\n * @since 2.5.0\n */\nexport var getOrd = function (O) {\n    return fromCompare(function (a, b) {\n        var aLen = a.length;\n        var bLen = b.length;\n        var len = Math.min(aLen, bLen);\n        for (var i = 0; i < len; i++) {\n            var ordering = O.compare(a[i], b[i]);\n            if (ordering !== 0) {\n                return ordering;\n            }\n        }\n        return N.Ord.compare(aLen, bLen);\n    });\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var getUnionSemigroup = function (E) {\n    var unionE = union(E);\n    return {\n        concat: function (first, second) { return unionE(second)(first); }\n    };\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var getUnionMonoid = function (E) { return ({\n    concat: getUnionSemigroup(E).concat,\n    empty: empty\n}); };\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var getIntersectionSemigroup = function (E) {\n    var intersectionE = intersection(E);\n    return {\n        concat: function (first, second) { return intersectionE(second)(first); }\n    };\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var getDifferenceMagma = function (E) {\n    var differenceE = difference(E);\n    return {\n        concat: function (first, second) { return differenceE(second)(first); }\n    };\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: _map\n};\n/**\n * @category mapping\n * @since 2.10.0\n */\nexport var flap = /*#__PURE__*/ flap_(Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Pointed = {\n    URI: URI,\n    of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FunctorWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Apply = {\n    URI: URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * @since 2.5.0\n */\nexport var apFirst = /*#__PURE__*/ apFirst_(Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * @since 2.5.0\n */\nexport var apSecond = /*#__PURE__*/ apSecond_(Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Chain = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @example\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RA.chainFirst(() => ['a', 'b'])\n *   ),\n *   [1, 1, 2, 2, 3, 3]\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     RA.chainFirst(() => [])\n *   ),\n *   []\n * )\n *\n * @category sequencing\n * @since 2.5.0\n */\nexport var chainFirst = \n/*#__PURE__*/ chainFirst_(Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Unfoldable = {\n    URI: URI,\n    unfold: unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n    URI: URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var Zero = {\n    URI: URI,\n    zero: zero\n};\n/**\n * @category do notation\n * @since 2.11.0\n */\nexport var guard = /*#__PURE__*/ guard_(Zero, Pointed);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alternative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    alt: _alt,\n    zero: zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Extend = {\n    URI: URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Compactable = {\n    URI: URI,\n    compact: compact,\n    separate: separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Filterable = {\n    URI: URI,\n    map: _map,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FilterableWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FoldableWithIndex = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n    URI: URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var TraversableWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverse: _traverse,\n    sequence: sequence,\n    traverseWithIndex: _traverseWithIndex\n};\n/**\n * @category sequencing\n * @since 2.11.0\n */\nexport var chainRecDepthFirst = function (f) {\n    return function (a) {\n        var todo = __spreadArray([], f(a), true);\n        var out = [];\n        while (todo.length > 0) {\n            var e = todo.shift();\n            if (_.isLeft(e)) {\n                todo.unshift.apply(todo, f(e.left));\n            }\n            else {\n                out.push(e.right);\n            }\n        }\n        return out;\n    };\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var ChainRecDepthFirst = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: _chainRecDepthFirst\n};\n/**\n * @category sequencing\n * @since 2.11.0\n */\nexport var chainRecBreadthFirst = function (f) {\n    return function (a) {\n        var initial = f(a);\n        var todo = [];\n        var out = [];\n        function go(e) {\n            if (_.isLeft(e)) {\n                f(e.left).forEach(function (v) { return todo.push(v); });\n            }\n            else {\n                out.push(e.right);\n            }\n        }\n        for (var _i = 0, initial_1 = initial; _i < initial_1.length; _i++) {\n            var e = initial_1[_i];\n            go(e);\n        }\n        while (todo.length > 0) {\n            go(todo.shift());\n        }\n        return out;\n    };\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var ChainRecBreadthFirst = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: _chainRecBreadthFirst\n};\nvar _wither = /*#__PURE__*/ witherDefault(Traversable, Compactable);\nvar _wilt = /*#__PURE__*/ wiltDefault(Traversable, Compactable);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Witherable = {\n    URI: URI,\n    map: _map,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    wither: _wither,\n    wilt: _wilt\n};\n/**\n * Filter values inside a context.\n *\n * @example\n * import { pipe } from 'fp-ts/function'\n * import * as RA from 'fp-ts/ReadonlyArray'\n * import * as T from 'fp-ts/Task'\n *\n * const filterE = RA.filterE(T.ApplicativePar)\n * async function test() {\n *   assert.deepStrictEqual(\n *     await pipe(\n *       [-1, 2, 3],\n *       filterE((n) => T.of(n > 0))\n *     )(),\n *     [2, 3]\n *   )\n * }\n * test()\n *\n * @since 2.11.0\n */\nexport var filterE = /*#__PURE__*/ filterE_(Witherable);\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var FromEither = {\n    URI: URI,\n    fromEither: fromEither\n};\n/**\n * @category lifting\n * @since 2.11.0\n */\nexport var fromEitherK = /*#__PURE__*/ fromEitherK_(FromEither);\n// -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n/**\n * @category unsafe\n * @since 2.5.0\n */\nexport var unsafeInsertAt = RNEA.unsafeInsertAt;\n/**\n * @category unsafe\n * @since 2.5.0\n */\nexport var unsafeUpdateAt = function (i, a, as) {\n    return isNonEmpty(as) ? RNEA.unsafeUpdateAt(i, a, as) : as;\n};\n/**\n * @category unsafe\n * @since 2.5.0\n */\nexport var unsafeDeleteAt = function (i, as) {\n    var xs = as.slice();\n    xs.splice(i, 1);\n    return xs;\n};\n/**\n * @category conversions\n * @since 2.5.0\n */\nexport var toArray = function (as) { return as.slice(); };\n/**\n * @category conversions\n * @since 2.5.0\n */\nexport var fromArray = function (as) { return (isEmpty(as) ? empty : as.slice()); };\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * An empty array\n *\n * @since 2.5.0\n */\nexport var empty = RNEA.empty;\nexport function every(predicate) {\n    return function (as) { return as.every(predicate); };\n}\n/**\n * Check if a predicate holds true for any array member.\n *\n * @example\n * import { some } from 'fp-ts/ReadonlyArray'\n * import { pipe } from 'fp-ts/function'\n *\n * const isPositive = (n: number): boolean => n > 0\n *\n * assert.deepStrictEqual(pipe([-1, -2, 3], some(isPositive)), true)\n * assert.deepStrictEqual(pipe([-1, -2, -3], some(isPositive)), false)\n *\n * @since 2.9.0\n */\nexport var some = function (predicate) {\n    return function (as) {\n        return as.some(predicate);\n    };\n};\n/**\n * Alias of [`some`](#some)\n *\n * @since 2.11.0\n */\nexport var exists = some;\n/**\n * Places an element in between members of a `ReadonlyArray`, then folds the results using the provided `Monoid`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { intercalate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(intercalate(S.Monoid)('-')(['a', 'b', 'c']), 'a-b-c')\n *\n * @since 2.12.0\n */\nexport var intercalate = function (M) {\n    var intercalateM = RNEA.intercalate(M);\n    return function (middle) { return match(function () { return M.empty; }, intercalateM(middle)); };\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @category do notation\n * @since 2.9.0\n */\nexport var Do = /*#__PURE__*/ of(_.emptyRecord);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var bindTo = /*#__PURE__*/ bindTo_(Functor);\nvar let_ = /*#__PURE__*/ let__(Functor);\nexport { \n/**\n * @category do notation\n * @since 2.13.0\n */\nlet_ as let };\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var bind = /*#__PURE__*/ bind_(Chain);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var apS = /*#__PURE__*/ apS_(Apply);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use `ReadonlyNonEmptyArray` module instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var range = RNEA.range;\n/**\n * Use [`prepend`](#prepend) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var cons = RNEA.cons;\n/**\n * Use [`append`](#append) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var snoc = RNEA.snoc;\n/**\n * Use [`prependAll`](#prependall) instead.\n *\n * @category zone of death\n * @since 2.9.0\n * @deprecated\n */\nexport var prependToAll = prependAll;\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `RA.Functor` instead of `RA.readonlyArray`\n * (where `RA` is from `import RA from 'fp-ts/ReadonlyArray'`)\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var readonlyArray = {\n    URI: URI,\n    compact: compact,\n    separate: separate,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    mapWithIndex: _mapWithIndex,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex,\n    alt: _alt,\n    zero: zero,\n    unfold: unfold,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    extend: _extend,\n    wither: _wither,\n    wilt: _wilt\n};\n", "import { apFirst as apFirst_, apS as apS_, apSecond as apSecond_ } from './Apply';\nimport { bind as bind_, chainFirst as chainFirst_ } from './Chain';\nimport { fromEitherK as fromEitherK_ } from './FromEither';\nimport { identity, pipe } from './function';\nimport { let as let__, bindTo as bindTo_, flap as flap_ } from './Functor';\nimport * as _ from './internal';\nimport * as NEA from './NonEmptyArray';\nimport * as RA from './ReadonlyArray';\nimport { separated } from './Separated';\nimport { filterE as filterE_, wiltDefault, witherDefault } from './Witherable';\nimport { guard as guard_ } from './Zero';\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * Test whether an array is empty\n *\n * @example\n * import { isEmpty } from 'fp-ts/Array'\n *\n * assert.strictEqual(isEmpty([]), true)\n * assert.strictEqual(isEmpty(['a']), false)\n *\n * @category refinements\n * @since 2.0.0\n */\nexport var isEmpty = function (as) { return as.length === 0; };\n/**\n * Test whether an array is non empty narrowing down the type to `NonEmptyArray<A>`\n *\n * @example\n * import { isNonEmpty } from 'fp-ts/Array'\n *\n * assert.strictEqual(isNonEmpty([]), false)\n * assert.strictEqual(isNonEmpty(['a']), true)\n *\n * @category refinements\n * @since 2.0.0\n */\nexport var isNonEmpty = NEA.isNonEmpty;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Prepend an element to the front of a `Array`, creating a new `NonEmptyArray`.\n *\n * @example\n * import { prepend } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([2, 3, 4], prepend(1)), [1, 2, 3, 4])\n *\n * @since 2.10.0\n */\nexport var prepend = NEA.prepend;\n/**\n * Less strict version of [`prepend`](#prepend).\n *\n * @example\n * import { prependW } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([2, 3, 4], prependW(\"a\")), [\"a\", 2, 3, 4]);\n *\n * @since 2.11.0\n */\nexport var prependW = NEA.prependW;\n/**\n * Append an element to the end of a `Array`, creating a new `NonEmptyArray`.\n *\n * @example\n * import { append } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], append(4)), [1, 2, 3, 4])\n *\n * @since 2.10.0\n */\nexport var append = NEA.append;\n/**\n * Less strict version of [`append`](#append).\n *\n * @example\n * import { appendW } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], appendW(\"d\")), [1, 2, 3, \"d\"]);\n *\n * @since 2.11.0\n */\nexport var appendW = NEA.appendW;\n/**\n * Return a `Array` of length `n` with element `i` initialized with `f(i)`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { makeBy } from 'fp-ts/Array'\n *\n * const double = (i: number): number => i * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n * assert.deepStrictEqual(makeBy(-3, double), [])\n * assert.deepStrictEqual(makeBy(4.32164, double), [0, 2, 4, 6])\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var makeBy = function (n, f) { return (n <= 0 ? [] : NEA.makeBy(f)(n)); };\n/**\n * Create a `Array` containing a value repeated the specified number of times.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { replicate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n * assert.deepStrictEqual(replicate(-3, 'a'), [])\n * assert.deepStrictEqual(replicate(2.985647, 'a'), ['a', 'a'])\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var replicate = function (n, a) { return makeBy(n, function () { return a; }); };\nexport function fromPredicate(predicate) {\n    return function (a) { return (predicate(a) ? [a] : []); };\n}\n// -------------------------------------------------------------------------------------\n// conversions\n// -------------------------------------------------------------------------------------\n/**\n * Create an array from an `Option`. The resulting array will contain the content of the\n * `Option` if it is `Some` and it will be empty if the `Option` is `None`.\n *\n * @example\n * import { fromOption } from 'fp-ts/Array'\n * import { option } from \"fp-ts\";\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(option.some(\"a\"), fromOption),[\"a\"])\n * assert.deepStrictEqual(pipe(option.none, fromOption),[])\n *\n * @category conversions\n * @since 2.11.0\n */\nexport var fromOption = function (ma) { return (_.isNone(ma) ? [] : [ma.value]); };\n/**\n * Create an array from an `Either`. The resulting array will contain the content of the\n * `Either` if it is `Right` and it will be empty if the `Either` is `Left`.\n *\n * @example\n * import { fromEither } from 'fp-ts/Array'\n * import { either } from \"fp-ts\";\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(either.right(\"r\"), fromEither), [\"r\"]);\n * assert.deepStrictEqual(pipe(either.left(\"l\"), fromEither), []);\n *\n * @category conversions\n * @since 2.11.0\n */\nexport var fromEither = function (e) { return (_.isLeft(e) ? [] : [e.right]); };\n/**\n * Less strict version of [`match`](#match).\n *\n * The `W` suffix (short for **W**idening) means that the handler return types will be merged.\n *\n * @example\n * import { matchW } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const matcherW = matchW(\n *   () => \"No elements\",\n *   (as) => as.length\n * );\n * assert.deepStrictEqual(pipe([1, 2, 3, 4], matcherW), 4);\n * assert.deepStrictEqual(pipe([], matcherW), \"No elements\");\n *\n * @category pattern matching\n * @since 2.11.0\n */\nexport var matchW = function (onEmpty, onNonEmpty) {\n    return function (as) {\n        return isNonEmpty(as) ? onNonEmpty(as) : onEmpty();\n    };\n};\n/**\n * Takes an array, if the array is empty it returns the result of `onEmpty`, otherwise\n * it passes the array to `onNonEmpty` and returns the result.\n *\n * @example\n * import { match } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const matcher = match(\n *   () => \"No elements\",\n *   (as) => `Found ${as.length} element(s)`\n * );\n * assert.deepStrictEqual(pipe([1, 2, 3, 4], matcher), \"Found 4 element(s)\");\n * assert.deepStrictEqual(pipe([], matcher), \"No elements\");\n *\n * @category pattern matching\n * @since 2.11.0\n */\nexport var match = matchW;\n/**\n * Less strict version of [`matchLeft`](#matchleft). It will work when `onEmpty` and\n * `onNonEmpty` have different return types.\n *\n * @example\n * import { matchLeftW } from 'fp-ts/Array'\n *\n * const f = matchLeftW(\n *   () => 0,\n *   (head: string, tail: string[]) => `Found \"${head}\" followed by ${tail.length} elements`\n * );\n * assert.strictEqual(f([\"a\", \"b\", \"c\"]), 'Found \"a\" followed by 2 elements');\n * assert.strictEqual(f([]), 0);\n *\n * @category pattern matching\n * @since 2.11.0\n */\nexport var matchLeftW = function (onEmpty, onNonEmpty) {\n    return function (as) {\n        return isNonEmpty(as) ? onNonEmpty(NEA.head(as), NEA.tail(as)) : onEmpty();\n    };\n};\n/**\n * Takes an array, if the array is empty it returns the result of `onEmpty`, otherwise\n * it passes the array to `onNonEmpty` broken into its first element and remaining elements.\n *\n * @example\n * import { matchLeft } from 'fp-ts/Array'\n *\n * const len: <A>(as: Array<A>) => number = matchLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexport var matchLeft = matchLeftW;\n/**\n * Alias of [`matchLeft`](#matchleft).\n *\n * @category pattern matching\n * @since 2.0.0\n */\nexport var foldLeft = matchLeft;\n/**\n * Less strict version of [`matchRight`](#matchright). It will work when `onEmpty` and\n * `onNonEmpty` have different return types.\n *\n * @example\n * import { matchRightW } from 'fp-ts/Array'\n *\n * const f = matchRightW(\n *   () => 0,\n *   (head: string[], tail: string) => `Found ${head.length} elements folllowed by \"${tail}\"`\n * );\n * assert.strictEqual(f([\"a\", \"b\", \"c\"]), 'Found 2 elements folllowed by \"c\"');\n * assert.strictEqual(f([]), 0);\n *\n * @category pattern matching\n * @since 2.11.0\n */\nexport var matchRightW = function (onEmpty, onNonEmpty) {\n    return function (as) {\n        return isNonEmpty(as) ? onNonEmpty(NEA.init(as), NEA.last(as)) : onEmpty();\n    };\n};\n/**\n * Takes an array, if the array is empty it returns the result of `onEmpty`, otherwise\n * it passes the array to `onNonEmpty` broken  into its initial elements and the last element.\n *\n * @example\n * import { matchRight } from 'fp-ts/Array'\n *\n * const len: <A>(as: Array<A>) => number = matchRight(\n *   () => 0,\n *   (head, _) => 1 + len(head)\n * );\n * assert.strictEqual(len([1, 2, 3]), 3);\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexport var matchRight = matchRightW;\n/**\n * Alias of [`matchRight`](#matchright).\n *\n * @category pattern matching\n * @since 2.0.0\n */\nexport var foldRight = matchRight;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * Same as [`chain`](#chain), but passing also the index to the iterating function.\n *\n * @example\n * import { chainWithIndex, replicate } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (index: number, x: string) => replicate(2, `${x}${index}`);\n * assert.deepStrictEqual(pipe([\"a\", \"b\", \"c\"], chainWithIndex(f)), [\"a0\", \"a0\", \"b1\", \"b1\", \"c2\", \"c2\"]);\n *\n * @category sequencing\n * @since 2.7.0\n */\nexport var chainWithIndex = function (f) {\n    return function (as) {\n        var out = [];\n        for (var i = 0; i < as.length; i++) {\n            out.push.apply(out, f(i, as[i]));\n        }\n        return out;\n    };\n};\n/**\n * Same as `reduce` but it carries over the intermediate steps\n *\n * @example\n * import { scanLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n *\n * @since 2.0.0\n */\nexport var scanLeft = function (b, f) {\n    return function (as) {\n        var len = as.length;\n        var out = new Array(len + 1);\n        out[0] = b;\n        for (var i = 0; i < len; i++) {\n            out[i + 1] = f(out[i], as[i]);\n        }\n        return out;\n    };\n};\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @since 2.0.0\n */\nexport var scanRight = function (b, f) {\n    return function (as) {\n        var len = as.length;\n        var out = new Array(len + 1);\n        out[len] = b;\n        for (var i = len - 1; i >= 0; i--) {\n            out[i] = f(as[i], out[i + 1]);\n        }\n        return out;\n    };\n};\n/**\n * Calculate the number of elements in a `Array`.\n *\n * @example\n * import { size } from 'fp-ts/Array'\n *\n * assert.strictEqual(size([\"a\",\"b\",\"c\"]),3)\n *\n * @since 2.10.0\n */\nexport var size = function (as) { return as.length; };\n/**\n * Test whether an array contains a particular index\n *\n * @example\n * import { isOutOfBound } from 'fp-ts/Array'\n *\n * assert.strictEqual(isOutOfBound(1,[\"a\",\"b\",\"c\"]),false)\n * assert.strictEqual(isOutOfBound(-1,[\"a\",\"b\",\"c\"]),true)\n * assert.strictEqual(isOutOfBound(3,[\"a\",\"b\",\"c\"]),true)\n *\n * @since 2.0.0\n */\nexport var isOutOfBound = NEA.isOutOfBound;\n// TODO: remove non-curried overloading in v3\n/**\n * This function provides a safe way to read a value at a particular index from an array.\n * It returns a `none` if the index is out of bounds, and a `some` of the element if the\n * index is valid.\n *\n * @example\n * import { lookup } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], lookup(1)), some(2))\n * assert.deepStrictEqual(pipe([1, 2, 3], lookup(3)), none)\n *\n * @since 2.0.0\n */\nexport var lookup = RA.lookup;\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @since 2.0.0\n */\nexport var head = RA.head;\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @since 2.0.0\n */\nexport var last = RA.last;\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @since 2.0.0\n */\nexport var tail = function (as) { return (isNonEmpty(as) ? _.some(NEA.tail(as)) : _.none); };\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @since 2.0.0\n */\nexport var init = function (as) { return (isNonEmpty(as) ? _.some(NEA.init(as)) : _.none); };\n/**\n * Keep only a max number of elements from the start of an `Array`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { takeLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(takeLeft(2)([1, 2, 3, 4, 5]), [1, 2]);\n * assert.deepStrictEqual(takeLeft(7)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n * assert.deepStrictEqual(takeLeft(0)([1, 2, 3, 4, 5]), []);\n * assert.deepStrictEqual(takeLeft(-1)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n *\n * @since 2.0.0\n */\nexport var takeLeft = function (n) {\n    return function (as) {\n        return isOutOfBound(n, as) ? copy(as) : as.slice(0, n);\n    };\n};\n/**\n * Keep only a max number of elements from the end of an `Array`, creating a new `Array`.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { takeRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(takeRight(2)([1, 2, 3, 4, 5]), [4, 5]);\n * assert.deepStrictEqual(takeRight(7)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n * assert.deepStrictEqual(takeRight(0)([1, 2, 3, 4, 5]), []);\n * assert.deepStrictEqual(takeRight(-1)([1, 2, 3, 4, 5]), [1, 2, 3, 4, 5]);\n *\n * @since 2.0.0\n */\nexport var takeRight = function (n) {\n    return function (as) {\n        return isOutOfBound(n, as) ? copy(as) : n === 0 ? [] : as.slice(-n);\n    };\n};\nexport function takeLeftWhile(predicate) {\n    return function (as) {\n        var out = [];\n        for (var _i = 0, as_1 = as; _i < as_1.length; _i++) {\n            var a = as_1[_i];\n            if (!predicate(a)) {\n                break;\n            }\n            out.push(a);\n        }\n        return out;\n    };\n}\nvar spanLeftIndex = function (as, predicate) {\n    var l = as.length;\n    var i = 0;\n    for (; i < l; i++) {\n        if (!predicate(as[i])) {\n            break;\n        }\n    }\n    return i;\n};\nexport function spanLeft(predicate) {\n    return function (as) {\n        var _a = splitAt(spanLeftIndex(as, predicate))(as), init = _a[0], rest = _a[1];\n        return { init: init, rest: rest };\n    };\n}\n/**\n * Creates a new `Array` which is a copy of the input dropping a max number of elements from the start.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { dropLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(dropLeft(2)([1, 2, 3]), [3]);\n * assert.deepStrictEqual(dropLeft(5)([1, 2, 3]), []);\n * assert.deepStrictEqual(dropLeft(0)([1, 2, 3]), [1, 2, 3]);\n * assert.deepStrictEqual(dropLeft(-2)([1, 2, 3]), [1, 2, 3]);\n *\n * @since 2.0.0\n */\nexport var dropLeft = function (n) {\n    return function (as) {\n        return n <= 0 || isEmpty(as) ? copy(as) : n >= as.length ? [] : as.slice(n, as.length);\n    };\n};\n/**\n * Creates a new `Array` which is a copy of the input dropping a max number of elements from the end.\n *\n * **Note**. `n` is normalized to a non negative integer.\n *\n * @example\n * import { dropRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(dropRight(2)([1, 2, 3]), [1]);\n * assert.deepStrictEqual(dropRight(5)([1, 2, 3]), []);\n * assert.deepStrictEqual(dropRight(0)([1, 2, 3]), [1, 2, 3]);\n * assert.deepStrictEqual(dropRight(-2)([1, 2, 3]), [1, 2, 3]);\n *\n * @since 2.0.0\n */\nexport var dropRight = function (n) {\n    return function (as) {\n        return n <= 0 || isEmpty(as) ? copy(as) : n >= as.length ? [] : as.slice(0, as.length - n);\n    };\n};\nexport function dropLeftWhile(predicate) {\n    return function (as) { return as.slice(spanLeftIndex(as, predicate)); };\n}\n/**\n * `findIndex` returns an `Option` containing the first index for which a predicate holds.\n * It returns `None` if no element satisfies the predicate.\n * Similar to [`findFirst`](#findFirst) but returning the index instead of the element.\n *\n * @example\n * import { findIndex } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.0.0\n */\nexport var findIndex = RA.findIndex;\nexport function findFirst(predicate) {\n    return RA.findFirst(predicate);\n}\n/**\n * Given a selector function which takes an element and returns an option,\n * this function applies the selector to each element of the array and\n * returns the first `Some` result. Otherwise it returns `None`.\n *\n * @example\n * import { findFirstMap } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string;\n *   readonly age: number;\n * }\n *\n * const persons: Array<Person> = [\n *   { name: \"John\", age: 16 },\n *   { name: \"Mary\", age: 45 },\n *   { name: \"Joey\", age: 28 },\n * ];\n *\n * const nameOfPersonAbove18 = (p: Person) => (p.age <= 18 ? none : some(p.name));\n * const nameOfPersonAbove70 = (p: Person) => (p.age <= 70 ? none : some(p.name));\n * assert.deepStrictEqual(findFirstMap(nameOfPersonAbove18)(persons), some(\"Mary\"));\n * assert.deepStrictEqual(findFirstMap(nameOfPersonAbove70)(persons), none);\n *\n * @since 2.0.0\n */\nexport var findFirstMap = RA.findFirstMap;\nexport function findLast(predicate) {\n    return RA.findLast(predicate);\n}\n/**\n * Given a selector function which takes an element and returns an option,\n * this function applies the selector to each element of the array starting from the\n * end and returns the last `Some` result. Otherwise it returns `None`.\n *\n * @example\n * import { findLastMap } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   readonly name: string;\n *   readonly age: number;\n * }\n *\n * const persons: Array<Person> = [\n *   { name: \"John\", age: 16 },\n *   { name: \"Mary\", age: 45 },\n *   { name: \"Joey\", age: 28 },\n * ];\n *\n * const nameOfPersonAbove18 = (p: Person) => (p.age <= 18 ? none : some(p.name));\n * const nameOfPersonAbove70 = (p: Person) => (p.age <= 70 ? none : some(p.name));\n * assert.deepStrictEqual(findLastMap(nameOfPersonAbove18)(persons), some(\"Joey\"));\n * assert.deepStrictEqual(findLastMap(nameOfPersonAbove70)(persons), none);\n *\n * @since 2.0.0\n */\nexport var findLastMap = RA.findLastMap;\n/**\n * Returns the index of the last element of the list which matches the predicate.\n * It returns an `Option` containing the index or `None` if not found.\n *\n * @example\n * import { findLastIndex } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   readonly a: number\n *   readonly b: number\n * }\n * const xs: Array<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { readonly a: number }) => x.a === 4)(xs), none)\n *\n * @since 2.0.0\n */\nexport var findLastIndex = RA.findLastIndex;\n/**\n * This function takes an array and makes a new array containing the same elements.\n *\n * @since 2.0.0\n */\nexport var copy = function (as) { return as.slice(); };\n/**\n * Insert an element at the specified index, creating a new array,\n * or returning `None` if the index is out of bounds.\n *\n * @example\n * import { insertAt } from 'fp-ts/Array'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.0.0\n */\nexport var insertAt = function (i, a) {\n    return function (as) {\n        return i < 0 || i > as.length ? _.none : _.some(unsafeInsertAt(i, a, as));\n    };\n};\n/**\n * Change the element at the specified index, creating a new array,\n * or returning `None` if the index is out of bounds.\n *\n * @example\n * import { updateAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.0.0\n */\nexport var updateAt = function (i, a) { return modifyAt(i, function () { return a; }); };\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds.\n *\n * @example\n * import { deleteAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.0.0\n */\nexport var deleteAt = function (i) {\n    return function (as) {\n        return isOutOfBound(i, as) ? _.none : _.some(unsafeDeleteAt(i, as));\n    };\n};\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds.\n *\n * @example\n * import { modifyAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.0.0\n */\nexport var modifyAt = function (i, f) {\n    return function (as) {\n        return isOutOfBound(i, as) ? _.none : _.some(unsafeUpdateAt(i, f(as[i]), as));\n    };\n};\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @since 2.0.0\n */\nexport var reverse = function (as) { return (isEmpty(as) ? [] : as.slice().reverse()); };\n/**\n * Takes an `Array` of `Either` and produces a new `Array` containing\n * the values of all the `Right` elements in the same order.\n *\n * @example\n * import { rights } from 'fp-ts/Array'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @since 2.0.0\n */\nexport var rights = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Right') {\n            r.push(a.right);\n        }\n    }\n    return r;\n};\n/**\n * Takes an `Array` of `Either` and produces a new `Array` containing\n * the values of all the `Left` elements in the same order.\n *\n * @example\n * import { lefts } from 'fp-ts/Array'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @since 2.0.0\n */\nexport var lefts = function (as) {\n    var r = [];\n    for (var i = 0; i < as.length; i++) {\n        var a = as[i];\n        if (a._tag === 'Left') {\n            r.push(a.left);\n        }\n    }\n    return r;\n};\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(sort(N.Ord)([3, 2, 1]), [1, 2, 3])\n *\n * @since 2.0.0\n */\nexport var sort = function (O) {\n    return function (as) {\n        return as.length <= 1 ? copy(as) : as.slice().sort(O.compare);\n    };\n};\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @since 2.0.0\n */\nexport var zipWith = function (fa, fb, f) {\n    var fc = [];\n    var len = Math.min(fa.length, fb.length);\n    for (var i = 0; i < len; i++) {\n        fc[i] = f(fa[i], fb[i]);\n    }\n    return fc;\n};\nexport function zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return zipWith(as, bs, function (a, b) { return [a, b]; });\n}\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @since 2.0.0\n */\nexport var unzip = function (as) {\n    var fa = [];\n    var fb = [];\n    for (var i = 0; i < as.length; i++) {\n        fa[i] = as[i][0];\n        fb[i] = as[i][1];\n    }\n    return [fa, fb];\n};\n/**\n * Creates a new `Array`, prepending an element to every member of the input `Array`.\n *\n * @example\n * import { prependAll } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(prependAll(9)([1, 2, 3, 4]), [9, 1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.10.0\n */\nexport var prependAll = function (middle) {\n    var f = NEA.prependAll(middle);\n    return function (as) { return (isNonEmpty(as) ? f(as) : []); };\n};\n/**\n * Creates a new `Array` placing an element in between members of the input `Array`.\n *\n * @example\n * import { intersperse } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(intersperse(9)([1, 2, 3, 4]), [1, 9, 2, 9, 3, 9, 4])\n *\n * @since 2.9.0\n */\nexport var intersperse = function (middle) {\n    var f = NEA.intersperse(middle);\n    return function (as) { return (isNonEmpty(as) ? f(as) : copy(as)); };\n};\n/**\n * Creates a new `Array` rotating the input `Array` by `n` steps.\n *\n * @example\n * import { rotate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @since 2.0.0\n */\nexport var rotate = function (n) {\n    var f = NEA.rotate(n);\n    return function (as) { return (isNonEmpty(as) ? f(as) : copy(as)); };\n};\n// TODO: remove non-curried overloading in v3\n/**\n * Test if a value is a member of an `Array`. Takes a `Eq<A>` as a single\n * argument which returns the function to use to search for a value of type `A` in\n * an `Array<A>`.\n *\n * @example\n * import { elem } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(pipe([1, 2, 3], elem(N.Eq)(2)), true)\n * assert.strictEqual(pipe([1, 2, 3], elem(N.Eq)(0)), false)\n *\n * @since 2.0.0\n */\nexport var elem = RA.elem;\n/**\n * Creates a new `Array` removing duplicate elements, keeping the first occurrence of an element,\n * based on a `Eq<A>`.\n *\n * @example\n * import { uniq } from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n *\n * assert.deepStrictEqual(uniq(N.Eq)([1, 2, 1]), [1, 2])\n *\n * @since 2.0.0\n */\nexport var uniq = function (E) {\n    var f = NEA.uniq(E);\n    return function (as) { return (isNonEmpty(as) ? f(as) : copy(as)); };\n};\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/Array'\n * import { contramap } from 'fp-ts/Ord'\n * import * as S from 'fp-ts/string'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Person {\n *   readonly name: string\n *   readonly age: number\n * }\n * const byName = pipe(S.Ord, contramap((p: Person) => p.name))\n * const byAge = pipe(N.Ord, contramap((p: Person) => p.age))\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @since 2.0.0\n */\nexport var sortBy = function (ords) {\n    var f = NEA.sortBy(ords);\n    return function (as) { return (isNonEmpty(as) ? f(as) : copy(as)); };\n};\n/**\n * A useful recursion pattern for processing an array to produce a new array, often used for \"chopping\" up the input\n * array. Typically chop is called with some function that will consume an initial prefix of the array and produce a\n * value and the rest of the array.\n *\n * @example\n * import { Eq } from 'fp-ts/Eq'\n * import * as A from 'fp-ts/Array'\n * import * as N from 'fp-ts/number'\n * import { pipe } from 'fp-ts/function'\n *\n * const group = <A>(S: Eq<A>): ((as: Array<A>) => Array<Array<A>>) => {\n *   return A.chop(as => {\n *     const { init, rest } = pipe(as, A.spanLeft((a: A) => S.equals(a, as[0])))\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(N.Eq)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @since 2.0.0\n */\nexport var chop = function (f) {\n    var g = NEA.chop(f);\n    return function (as) { return (isNonEmpty(as) ? g(as) : []); };\n};\n/**\n * Splits an `Array` into two pieces, the first piece has max `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @since 2.0.0\n */\nexport var splitAt = function (n) {\n    return function (as) {\n        return n >= 1 && isNonEmpty(as) ? NEA.splitAt(n)(as) : isEmpty(as) ? [copy(as), []] : [[], copy(as)];\n    };\n};\n/**\n * Splits an array into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the array. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `xs`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n * @since 2.0.0\n */\nexport var chunksOf = function (n) {\n    var f = NEA.chunksOf(n);\n    return function (as) { return (isNonEmpty(as) ? f(as) : []); };\n};\n/**\n * @category lifting\n * @since 2.11.0\n */\nexport var fromOptionK = function (f) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return fromOption(f.apply(void 0, a));\n    };\n};\nexport function comprehension(input, f, g) {\n    if (g === void 0) { g = function () { return true; }; }\n    var go = function (scope, input) {\n        return isNonEmpty(input)\n            ? pipe(NEA.head(input), chain(function (x) { return go(pipe(scope, append(x)), NEA.tail(input)); }))\n            : g.apply(void 0, scope) ? [f.apply(void 0, scope)]\n                : [];\n    };\n    return go([], input);\n}\n/**\n * @since 2.11.0\n */\nexport var concatW = function (second) {\n    return function (first) {\n        return isEmpty(first) ? copy(second) : isEmpty(second) ? copy(first) : first.concat(second);\n    };\n};\n/**\n * @since 2.11.0\n */\nexport var concat = concatW;\nexport function union(E) {\n    var unionE = NEA.union(E);\n    return function (first, second) {\n        if (second === undefined) {\n            var unionE_1 = union(E);\n            return function (second) { return unionE_1(second, first); };\n        }\n        return isNonEmpty(first) && isNonEmpty(second)\n            ? unionE(second)(first)\n            : isNonEmpty(first)\n                ? copy(first)\n                : copy(second);\n    };\n}\nexport function intersection(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var intersectionE_1 = intersection(E);\n            return function (ys) { return intersectionE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return elemE(a, ys); });\n    };\n}\nexport function difference(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var differenceE_1 = difference(E);\n            return function (ys) { return differenceE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return !elemE(a, ys); });\n    };\n}\nvar _map = function (fa, f) { return pipe(fa, map(f)); };\n/* istanbul ignore next */\nvar _mapWithIndex = function (fa, f) { return pipe(fa, mapWithIndex(f)); };\nvar _ap = function (fab, fa) { return pipe(fab, ap(fa)); };\nvar _chain = function (ma, f) { return pipe(ma, chain(f)); };\n/* istanbul ignore next */\nvar _filter = function (fa, predicate) { return pipe(fa, filter(predicate)); };\n/* istanbul ignore next */\nvar _filterMap = function (fa, f) { return pipe(fa, filterMap(f)); };\n/* istanbul ignore next */\nvar _partition = function (fa, predicate) {\n    return pipe(fa, partition(predicate));\n};\n/* istanbul ignore next */\nvar _partitionMap = function (fa, f) { return pipe(fa, partitionMap(f)); };\n/* istanbul ignore next */\nvar _partitionWithIndex = function (fa, predicateWithIndex) { return pipe(fa, partitionWithIndex(predicateWithIndex)); };\n/* istanbul ignore next */\nvar _partitionMapWithIndex = function (fa, f) { return pipe(fa, partitionMapWithIndex(f)); };\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return pipe(fa, alt(that)); };\nvar _reduce = function (fa, b, f) { return pipe(fa, reduce(b, f)); };\n/* istanbul ignore next */\nvar _foldMap = function (M) {\n    var foldMapM = foldMap(M);\n    return function (fa, f) { return pipe(fa, foldMapM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRight = function (fa, b, f) { return pipe(fa, reduceRight(b, f)); };\n/* istanbul ignore next */\nvar _reduceWithIndex = function (fa, b, f) {\n    return pipe(fa, reduceWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = foldMapWithIndex(M);\n    return function (fa, f) { return pipe(fa, foldMapWithIndexM(f)); };\n};\n/* istanbul ignore next */\nvar _reduceRightWithIndex = function (fa, b, f) {\n    return pipe(fa, reduceRightWithIndex(b, f));\n};\n/* istanbul ignore next */\nvar _filterMapWithIndex = function (fa, f) { return pipe(fa, filterMapWithIndex(f)); };\n/* istanbul ignore next */\nvar _filterWithIndex = function (fa, predicateWithIndex) { return pipe(fa, filterWithIndex(predicateWithIndex)); };\n/* istanbul ignore next */\nvar _extend = function (fa, f) { return pipe(fa, extend(f)); };\n/* istanbul ignore next */\nvar _traverse = function (F) {\n    var traverseF = traverse(F);\n    return function (ta, f) { return pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _traverseWithIndex = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (ta, f) { return pipe(ta, traverseWithIndexF(f)); };\n};\nvar _chainRecDepthFirst = RA._chainRecDepthFirst;\nvar _chainRecBreadthFirst = RA._chainRecBreadthFirst;\n/**\n * Given an element of the base type, `of` builds an `Array` containing just that\n * element of the base type (this is useful for building a `Monad`).\n *\n * @example\n * import { of } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(of(\"a\"), [\"a\"]);\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var of = NEA.of;\n/**\n * Makes an empty `Array`, useful for building a [`Monoid`](#Monoid)\n *\n * @since 2.7.0\n */\nexport var zero = function () { return []; };\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: Array<A>) => Array<B>`.\n * In practice it applies the base function to each element of the array and collects the\n * results in a new array.\n *\n * @example\n * import { map } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (n: number) => n * 2;\n * assert.deepStrictEqual(pipe([1, 2, 3], map(f)), [2, 4, 6]);\n *\n * @category mapping\n * @since 2.0.0\n */\nexport var map = function (f) { return function (fa) { return fa.map(function (a) { return f(a); }); }; };\n/**\n * @example\n * import { ap, map, of } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * // a curried function with 3 input parameteres\n * const f = (s1: string) => (n: number) => (s2: string) => s1 + n + s2;\n *\n * // let's use `ap` to iterate `f` over an array for each input parameter\n * assert.deepStrictEqual(pipe([\"a\", \"b\"], map(f), ap([1, 2]), ap([\"😀\", \"😫\", \"😎\"])), [\n *   \"a1😀\", \"a1😫\", \"a1😎\",\n *   \"a2😀\", \"a2😫\", \"a2😎\",\n *   \"b1😀\", \"b1😫\", \"b1😎\",\n *   \"b2😀\", \"b2😫\", \"b2😎\",\n * ]);\n *\n * // given Array implements the Applicative interface with the `of` method,\n * // we can write exactly the same thing in a more symmetric way\n * // using `of` on `f` and `ap` on each array in input\n * assert.deepStrictEqual(\n *   pipe(of(f), ap([\"a\", \"b\"]), ap([1, 2]), ap([\"😀\", \"😫\", \"😎\"])),\n *   pipe([\"a\", \"b\"], map(f), ap([1, 2]), ap([\"😀\", \"😫\", \"😎\"]))\n * );\n *\n * @since 2.0.0\n */\nexport var ap = function (fa) { return chain(function (f) { return pipe(fa, map(f)); }); };\n/**\n * Composes computations in sequence, using the return value of one computation to\n * determine the next computation.\n *\n * In other words it takes a function `f` that produces an array from a single element of\n * the base type `A` and returns a new function which applies `f` to each element of the\n * input array (like [`map`](#map)) and, instead of returning an array of arrays, concatenates the\n * results into a single array (like [`flatten`](#flatten)).\n *\n * This is the `chain` component of the array `Monad`.\n *\n * @example\n * import { chain, map, replicate } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (n: number) => replicate(n, `${n}`);\n * assert.deepStrictEqual(pipe([1, 2, 3], map(f)), [[\"1\"], [\"2\", \"2\"], [\"3\", \"3\", \"3\"]]);\n * assert.deepStrictEqual(pipe([1, 2, 3], chain(f)), [\"1\", \"2\", \"2\", \"3\", \"3\", \"3\"]);\n *\n * @category sequencing\n * @since 2.0.0\n */\nexport var chain = function (f) { return function (ma) {\n    return pipe(ma, chainWithIndex(function (_, a) { return f(a); }));\n}; };\n/**\n * Takes an array of arrays of `A` and flattens them into an array of `A`\n * by concatenating the elements of each array in order.\n *\n * @example\n * import { flatten } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(flatten([[\"a\"], [\"b\", \"c\"], [\"d\", \"e\", \"f\"]]), [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"]);\n *\n * @category sequencing\n * @since 2.5.0\n */\nexport var flatten = /*#__PURE__*/ chain(identity);\n/**\n * Same as [`map`](#map), but the iterating function takes both the index and the value\n * of the element.\n *\n * @example\n * import { mapWithIndex } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * const f = (i: number, s: string) => `${s} - ${i}`;\n * assert.deepStrictEqual(pipe([\"a\", \"b\", \"c\"], mapWithIndex(f)), [\"a - 0\", \"b - 1\", \"c - 2\"]);\n *\n * @category mapping\n * @since 2.0.0\n */\nexport var mapWithIndex = function (f) { return function (fa) {\n    return fa.map(function (a, i) { return f(i, a); });\n}; };\n/**\n * Maps an array with an iterating function that takes the index and the value of\n * each element and returns an `Option`. It keeps only the `Some` values discarding\n * the `None`s.\n *\n * Same as [`filterMap`](#filterMap), but with an iterating function which takes also\n * the index as input.\n *\n * @example\n * import { filterMapWithIndex } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n * import { option } from \"fp-ts\";\n *\n * const f = (i: number, s: string) => (i % 2 === 1 ? option.some(s.toUpperCase()) : option.none);\n * assert.deepStrictEqual(pipe([\"a\", \"no\", \"neither\", \"b\"], filterMapWithIndex(f)), [\"NO\", \"B\"]);\n *\n * @category filtering\n * @since 2.0.0\n */\nexport var filterMapWithIndex = function (f) {\n    return function (fa) {\n        var out = [];\n        for (var i = 0; i < fa.length; i++) {\n            var optionB = f(i, fa[i]);\n            if (_.isSome(optionB)) {\n                out.push(optionB.value);\n            }\n        }\n        return out;\n    };\n};\n/**\n * Maps an array with an iterating function that returns an `Option`\n * and it keeps only the `Some` values discarding the `None`s.\n *\n * @example\n * import { filterMap } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n * import { option } from \"fp-ts\";\n *\n * const f = (s: string) => s.length === 1 ? option.some(s.toUpperCase()) : option.none;\n * assert.deepStrictEqual(pipe([\"a\", \"no\", \"neither\", \"b\"], filterMap(f)), [\"A\", \"B\"]);\n *\n * @category filtering\n * @since 2.0.0\n */\nexport var filterMap = function (f) {\n    return filterMapWithIndex(function (_, a) { return f(a); });\n};\n/**\n * Compact an array of `Option`s discarding the `None` values and\n * keeping the `Some` values. It returns a new array containing the values of\n * the `Some` options.\n *\n * @example\n * import { compact } from 'fp-ts/Array'\n * import { option } from \"fp-ts\";\n *\n * assert.deepStrictEqual(compact([option.some(\"a\"), option.none, option.some(\"b\")]), [\"a\", \"b\"]);\n *\n * @category filtering\n * @since 2.0.0\n */\nexport var compact = /*#__PURE__*/ filterMap(identity);\n/**\n * Separate an array of `Either`s into `Left`s and `Right`s, creating two new arrays:\n * one containing all the left values and one containing all the right values.\n *\n * @example\n * import { separate } from 'fp-ts/Array'\n * import { either } from \"fp-ts\";\n *\n * assert.deepStrictEqual(separate([either.right(\"r1\"), either.left(\"l1\"), either.right(\"r2\")]), {\n *   left: [\"l1\"],\n *   right: [\"r1\", \"r2\"],\n * });\n *\n * @category filtering\n * @since 2.0.0\n */\nexport var separate = function (fa) {\n    var left = [];\n    var right = [];\n    for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n        var e = fa_1[_i];\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return separated(left, right);\n};\n/**\n * Given an iterating function that is a `Predicate` or a `Refinement`,\n * `filter` creates a new `Array` containing the elements of the original\n * `Array` for which the iterating function is `true`.\n *\n * @example\n * import { filter } from 'fp-ts/Array'\n * import { isString } from \"fp-ts/lib/string\";\n *\n * assert.deepStrictEqual(filter(isString)([\"a\", 1, {}, \"b\", 5]), [\"a\", \"b\"]);\n * assert.deepStrictEqual(filter((x:number) => x > 0)([-3, 1, -2, 5]), [1, 5]);\n *\n * @category filtering\n * @since 2.0.0\n */\nexport var filter = function (predicate) {\n    return function (as) {\n        return as.filter(predicate);\n    };\n};\n/**\n * Given an iterating function that is a `Predicate` or a `Refinement`,\n * `partition` creates two new `Array`s: `right` containing the elements of the original\n * `Array` for which the iterating function is `true`, `left` containing the elements\n * for which it is false.\n *\n * @example\n * import { partition } from 'fp-ts/Array'\n * import { isString } from \"fp-ts/lib/string\";\n *\n * assert.deepStrictEqual(partition(isString)([\"a\", 1, {}, \"b\", 5]), { left: [1, {}, 5], right: [\"a\", \"b\"] });\n * assert.deepStrictEqual(partition((x: number) => x > 0)([-3, 1, -2, 5]), { left: [-3, -2], right: [1, 5] });\n *\n * @category filtering\n * @since 2.0.0\n */\nexport var partition = function (predicate) {\n    return partitionWithIndex(function (_, a) { return predicate(a); });\n};\n/**\n * Same as [`partition`](#partition), but passing also the index to the iterating function.\n *\n * @example\n * import { partitionWithIndex } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(partitionWithIndex((index, x: number) => index < 3 && x > 0)([-2, 5, 6, 7]), {\n *   left: [-2, 7],\n *   right: [5, 6],\n * });\n *\n * @category filtering\n * @since 2.0.0\n */\nexport var partitionWithIndex = function (predicateWithIndex) {\n    return function (as) {\n        var left = [];\n        var right = [];\n        for (var i = 0; i < as.length; i++) {\n            var b = as[i];\n            if (predicateWithIndex(i, b)) {\n                right.push(b);\n            }\n            else {\n                left.push(b);\n            }\n        }\n        return separated(left, right);\n    };\n};\n/**\n * Given an iterating function that returns an `Either`,\n * `partitionMap` applies the iterating function to each element and it creates two `Array`s:\n * `right` containing the values of `Right` results, `left` containing the values of `Left` results.\n *\n * @example\n * import { partitionMap } from 'fp-ts/Array'\n * import { Either, left, right } from \"fp-ts/lib/Either\";\n *\n * const upperIfString = <B>(x: B): Either<B, string> =>\n *   typeof x === \"string\" ? right(x.toUpperCase()) : left(x);\n * assert.deepStrictEqual(partitionMap(upperIfString)([-2, \"hello\", 6, 7, \"world\"]), {\n *   left: [-2, 6, 7],\n *   right: [ 'HELLO', 'WORLD' ],\n * });\n *\n * @category filtering\n * @since 2.0.0\n */\nexport var partitionMap = function (f) { return partitionMapWithIndex(function (_, a) { return f(a); }); };\n/**\n * Same as [`partitionMap`](#partitionMap), but passing also the index to the iterating function.\n *\n * @example\n * import { partitionMapWithIndex } from 'fp-ts/Array'\n * import { Either, left, right } from \"fp-ts/lib/Either\";\n *\n * const upperIfStringBefore3 = <B>(index: number, x: B): Either<B, string> =>\n *   index < 3 && typeof x === \"string\" ? right(x.toUpperCase()) : left(x);\n * assert.deepStrictEqual(partitionMapWithIndex(upperIfStringBefore3)([-2, \"hello\", 6, 7, \"world\"]), {\n *   left: [-2, 6, 7, \"world\"],\n *   right: [\"HELLO\"],\n * });\n *\n * @category filtering\n * @since 2.0.0\n */\nexport var partitionMapWithIndex = function (f) {\n    return function (fa) {\n        var left = [];\n        var right = [];\n        for (var i = 0; i < fa.length; i++) {\n            var e = f(i, fa[i]);\n            if (e._tag === 'Left') {\n                left.push(e.left);\n            }\n            else {\n                right.push(e.right);\n            }\n        }\n        return separated(left, right);\n    };\n};\n/**\n * Less strict version of [`alt`](#alt).\n *\n * The `W` suffix (short for **W**idening) means that the return types will be merged.\n *\n * @example\n * import * as A from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     A.altW(() => ['a', 'b'])\n *   ),\n *   [1, 2, 3, 'a', 'b']\n * )\n *\n * @category error handling\n * @since 2.9.0\n */\nexport var altW = function (that) {\n    return function (fa) {\n        return fa.concat(that());\n    };\n};\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `Array` concatenates the inputs into a single array.\n *\n * @example\n * import * as A from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     A.alt(() => [4, 5])\n *   ),\n *   [1, 2, 3, 4, 5]\n * )\n *\n * @category error handling\n * @since 2.0.0\n */\nexport var alt = altW;\n/**\n * Same as [`filter`](#filter), but passing also the index to the iterating function.\n *\n * @example\n * import { filterWithIndex } from 'fp-ts/Array';\n *\n * const f = (index: number, x: number) => x > 0 && index <= 2;\n * assert.deepStrictEqual(filterWithIndex(f)([-3, 1, -2, 5]), [1]);\n *\n * @category filtering\n * @since 2.0.0\n */\nexport var filterWithIndex = function (predicateWithIndex) {\n    return function (as) {\n        return as.filter(function (b, i) { return predicateWithIndex(i, b); });\n    };\n};\n/**\n * Given an iterating function that takes `Array<A>` as input, `extend` returns\n * an array containing the results of the iterating function applied to the whole input\n * `Array`, then to the input `Array` without the first element, then to the input\n * `Array` without the first two elements, etc.\n *\n * @example\n * import { extend } from 'fp-ts/Array'\n *\n * const f = (a: string[]) => a.join(\",\");\n * assert.deepStrictEqual(extend(f)([\"a\", \"b\", \"c\"]), [\"a,b,c\", \"b,c\", \"c\"]);\n *\n * @since 2.0.0\n */\nexport var extend = function (f) { return function (wa) {\n    return wa.map(function (_, i) { return f(wa.slice(i)); });\n}; };\n/**\n * `duplicate` returns an array containing the whole input `Array`,\n * then to the input `Array` dropping the first element, then to the input\n * `Array` dropping the first two elements, etc.\n *\n * @example\n * import { duplicate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(duplicate([\"a\", \"b\", \"c\"]), [[\"a\", \"b\", \"c\"], [\"b\", \"c\"], [\"c\"]]);\n *\n * @since 2.0.0\n */\nexport var duplicate = /*#__PURE__*/ extend(identity);\n/**\n * Map and fold an `Array`.\n * Map the `Array` passing each value to the iterating function.\n * Then fold the results using the provided `Monoid`.\n *\n * @example\n * import { foldMap } from 'fp-ts/Array'\n *\n * const monoid = { concat: (a: string, b: string) => a + b, empty: \"\" };\n * const f = (s: string) => s.toUpperCase()\n * assert.deepStrictEqual(foldMap(monoid)(f)([\"a\", \"b\", \"c\"]), \"ABC\");\n *\n * @category folding\n * @since 2.0.0\n */\nexport var foldMap = RA.foldMap;\n/**\n * Same as [`foldMap`](#foldMap) but passing also the index to the iterating function.\n *\n * @example\n * import { foldMapWithIndex } from 'fp-ts/Array'\n *\n * const monoid = { concat: (a: string, b: string) => a + b, empty: \"\" };\n * const f = (index:number, s: string) => `${s.toUpperCase()}(${index})`\n * assert.deepStrictEqual(foldMapWithIndex(monoid)(f)([\"a\", \"b\", \"c\"]), \"A(0)B(1)C(2)\");\n *\n * @category folding\n * @since 2.0.0\n */\nexport var foldMapWithIndex = RA.foldMapWithIndex;\n/**\n * Reduces an `Array`.\n *\n * `reduce` executes the supplied iterating function on each element of the array,\n * in order, passing in the element and the return value from the calculation on the preceding element.\n *\n * The first time that the iterating function is called there is no \"return value of the\n * previous calculation\", the initial value is used in its place.\n *\n * @example\n * import { reduce } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(reduce(5, (acc: number, cur: number) => acc * cur)([2, 3]), 5 * 2 * 3);\n *\n * @category folding\n * @since 2.0.0\n */\nexport var reduce = RA.reduce;\n/**\n * Same as [`reduce`](#reduce) but passing also the index to the iterating function.\n *\n * @example\n * import { reduceWithIndex } from 'fp-ts/Array'\n *\n * const f = (index: number, acc: string, cur: unknown) =>\n *   acc + (typeof cur === \"string\" ? cur.toUpperCase() + index : \"\");\n * assert.deepStrictEqual(reduceWithIndex(\"\", f)([2, \"a\", \"b\", null]), \"A1B2\");\n *\n * @category folding\n * @since 2.0.0\n */\nexport var reduceWithIndex = RA.reduceWithIndex;\n/**\n * Same as [`reduce`](#reduce) but applied from the end to the start.\n *\n * *Note*: the iterating function in this case takes the accumulator as the last argument.\n *\n * @example\n * import { reduceRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(reduceRight(\"\", (cur: string, acc: string) => acc + cur)([\"a\", \"b\", \"c\"]), \"cba\");\n *\n * @category folding\n * @since 2.0.0\n */\nexport var reduceRight = RA.reduceRight;\n/**\n * Same as [`reduceRight`](#reduceRight) but passing also the index to the iterating function.\n *\n * @example\n * import { reduceRightWithIndex } from 'fp-ts/Array'\n *\n * const f = (index: number, cur: unknown, acc: string) =>\n *   acc + (typeof cur === \"string\" ? cur.toUpperCase() + index : \"\");\n * assert.deepStrictEqual(reduceRightWithIndex(\"\", f)([2, \"a\", \"b\", null]), \"B2A1\");\n *\n * @category folding\n * @since 2.0.0\n */\nexport var reduceRightWithIndex = RA.reduceRightWithIndex;\n/**\n * Given an iterating function that returns a `HKT` (higher kinded type), `traverse`\n * applies the iterating function to each element of the `Array` and then [`sequence`](#sequence)-s\n * the results using the provided `Applicative`.\n *\n * E.g. suppose you have an `Array` and you want to format each element with a function\n * that returns a result or an error as `f = (a: A) => Either<Error, B>`, using `traverse`\n * you can apply `f` to all elements and directly obtain as a result an `Either<Error,Array<B>>`\n * i.e. an `Array<B>` if all the results are `B`, or an `Error` if some of the results\n * are `Error`s.\n *\n * @example\n * import { traverse } from 'fp-ts/Array'\n * import { Applicative, left, right } from \"fp-ts/lib/Either\";\n *\n * const f = (x: unknown) =>\n *   typeof x === \"string\" ? right(x.toUpperCase()) : left(new Error(\"not a string\"));\n * assert.deepStrictEqual(traverse(Applicative)(f)([\"a\", \"b\"]), right([\"A\", \"B\"]));\n * assert.deepStrictEqual(traverse(Applicative)(f)([\"a\", 5]), left(new Error(\"not a string\")));\n *\n * @category traversing\n * @since 2.6.3\n */\nexport var traverse = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\n/**\n * `sequence` takes an `Array` where elements are `HKT<A>` (higher kinded type) and,\n * using an applicative of that `HKT`, returns an `HKT` of `Array<A>`.\n * E.g. it can turn an `Array<Either<Error, string>>` into an `Either<Error, Array<string>>`.\n *\n * `sequence` requires an `Applicative` of the `HKT` you are targeting, e.g. to turn an\n * `Array<Either<E, A>>` into an `Either<E, Array<A>>`, it needs an\n * `Applicative` for `Either`, to to turn an `Array<Option<A>>` into an `Option<Array<A>>`,\n * it needs an `Applicative` for `Option`.\n *\n * @example\n * import { sequence } from 'fp-ts/Array'\n * import { Applicative, left, right } from \"fp-ts/lib/Either\";\n *\n * assert.deepStrictEqual(sequence(Applicative)([right(\"a\"), right(\"b\")]), right([\"a\", \"b\"]));\n * assert.deepStrictEqual(\n *   sequence(Applicative)([right(\"a\"), left(new Error(\"not a string\"))]),\n *   left(new Error(\"not a string\"))\n * );\n *\n * @category traversing\n * @since 2.6.3\n */\nexport var sequence = function (F) {\n    return function (ta) {\n        return _reduce(ta, F.of(zero()), function (fas, fa) {\n            return F.ap(F.map(fas, function (as) { return function (a) { return pipe(as, append(a)); }; }), fa);\n        });\n    };\n};\n/**\n * Same as [`traverse`](#traverse) but passing also the index to the iterating function.\n *\n * @example\n * import { traverseWithIndex } from 'fp-ts/Array'\n * import { Applicative, left, right } from \"fp-ts/lib/Either\";\n *\n * const f = (index:number, x:unknown) =>\n *   typeof x === \"string\" ? right(x.toUpperCase() + index) : left(new Error(\"not a string\"));\n * assert.deepStrictEqual(traverseWithIndex(Applicative)(f)([\"a\", \"b\"]), right([\"A0\", \"B1\"]));\n * assert.deepStrictEqual(traverseWithIndex(Applicative)(f)([\"a\", 5]), left(new Error(\"not a string\")));\n *\n * @category sequencing\n * @since 2.6.3\n */\nexport var traverseWithIndex = function (F) {\n    return function (f) {\n        return reduceWithIndex(F.of(zero()), function (i, fbs, a) {\n            return F.ap(F.map(fbs, function (bs) { return function (b) { return pipe(bs, append(b)); }; }), f(i, a));\n        });\n    };\n};\n/**\n * @category filtering\n * @since 2.6.5\n */\nexport var wither = function (F) {\n    var _witherF = _wither(F);\n    return function (f) { return function (fa) { return _witherF(fa, f); }; };\n};\n/**\n * @category filtering\n * @since 2.6.5\n */\nexport var wilt = function (F) {\n    var _wiltF = _wilt(F);\n    return function (f) { return function (fa) { return _wiltF(fa, f); }; };\n};\n/**\n * `unfold` takes a function `f` which returns an `Option` of a tuple containing an outcome\n * value and an input for the following iteration.\n * `unfold` applies `f` to the initial value `b` and then recursively to the second\n * element of the tuple contained in the returned `option` of the previous\n * calculation until `f` returns `Option.none`.\n *\n * @example\n * import { unfold } from 'fp-ts/Array'\n * import { option } from 'fp-ts'\n *\n * const f = (n: number) => {\n *   if (n <= 0) return option.none;\n *   const returnValue = n * 2;\n *   const inputForNextRound = n - 1;\n *   return option.some([returnValue, inputForNextRound] as const);\n * };\n * assert.deepStrictEqual(unfold(5, f), [10, 8, 6, 4, 2]);\n *\n * @since 2.6.6\n */\nexport var unfold = function (b, f) {\n    var out = [];\n    var bb = b;\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        var mt = f(bb);\n        if (_.isSome(mt)) {\n            var _a = mt.value, a = _a[0], b_1 = _a[1];\n            out.push(a);\n            bb = b_1;\n        }\n        else {\n            break;\n        }\n    }\n    return out;\n};\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexport var URI = 'Array';\n/**\n * `getShow` makes a `Show` for an `Array<A>` from a `Show` for\n * an `A`.\n *\n * @example\n * import { getShow } from 'fp-ts/Array'\n *\n * const numShow = { show: (n: number) => (n >= 0 ? `${n}` : `(${-n})`) };\n * assert.deepStrictEqual(getShow(numShow).show([-2, -1, 0, 1]), \"[(2), (1), 0, 1]\");\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getShow = RA.getShow;\n/**\n * Get a `Semigroup` based on the concatenation of `Array`s.\n * See also [`getMonoid`](#getMonoid).\n *\n * @example\n * import { getSemigroup } from 'fp-ts/Array'\n *\n * const S = getSemigroup<number>();\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [1, 2, 2, 3]);\n *\n * @category instances\n * @since 2.10.0\n */\nexport var getSemigroup = function () { return ({\n    concat: function (first, second) { return first.concat(second); }\n}); };\n/**\n * Returns a `Monoid` for `Array<A>` based on the concatenation of `Array`s.\n *\n * @example\n * import { getMonoid } from 'fp-ts/Array'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getMonoid = function () { return ({\n    concat: getSemigroup().concat,\n    empty: []\n}); };\n/**\n * Derives an `Eq` over the `Array` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { getEq } from 'fp-ts/Array'\n *\n * const E = getEq(S.Eq)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getEq = RA.getEq;\n/**\n * Derives an `Ord` over the `Array` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/Array'\n * import * as S from 'fp-ts/string'\n *\n * const O = getOrd(S.Ord)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getOrd = RA.getOrd;\n/**\n * Get a `Semigroup` based on the union of the elements of `Array`s.\n * Elements which equal according to the provided `Eq` are included\n * only once in the result.\n * See also [`getUnionMonoid`](#getUnionMonoid).\n *\n * @example\n * import { getUnionSemigroup } from 'fp-ts/Array';\n * import { Eq } from 'fp-ts/number';\n *\n * const S = getUnionSemigroup<number>(Eq);\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [1, 2, 3]);\n *\n * @category instances\n * @since 2.11.0\n */\nexport var getUnionSemigroup = function (E) {\n    var unionE = union(E);\n    return {\n        concat: function (first, second) { return unionE(second)(first); }\n    };\n};\n/**\n * Get a `Monoid` based on the union of the elements of `Array`s.\n * Elements which equal according to the provided `Eq` are included\n * only once in the result.\n *\n * @example\n * import { getUnionMonoid } from 'fp-ts/Array'\n * import { Eq } from 'fp-ts/number';\n *\n * const M = getUnionMonoid<number>(Eq);\n * assert.deepStrictEqual(M.concat([1, 2], [2, 3]), [1, 2, 3]);\n * assert.deepStrictEqual(M.empty,[]);\n *\n * @category instances\n * @since 2.11.0\n */\nexport var getUnionMonoid = function (E) { return ({\n    concat: getUnionSemigroup(E).concat,\n    empty: []\n}); };\n/**\n * Get a `Semigroup` based on the intersection of the elements of `Array`s.\n * Only elements present in the two arrays which are equal according to the\n * provided `Eq` are included in the result.\n *\n * @example\n * import { getIntersectionSemigroup } from 'fp-ts/Array'\n * import { Eq } from 'fp-ts/number';\n *\n * const S = getIntersectionSemigroup<number>(Eq);\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [2]);\n *\n * @category instances\n * @since 2.11.0\n */\nexport var getIntersectionSemigroup = function (E) {\n    var intersectionE = intersection(E);\n    return {\n        concat: function (first, second) { return intersectionE(second)(first); }\n    };\n};\n/**\n * Get a `Magma` for `Array` where the `concat` function is the differnce between\n * the first and the second array, i.e. the result contains all the elements of the\n * first array for which their is no equal element in the second array according\n * to the `Eq` provided.\n *\n *\n * @example\n * import { getDifferenceMagma } from 'fp-ts/Array'\n * import { Eq } from 'fp-ts/number';\n *\n * const S = getDifferenceMagma<number>(Eq);\n * assert.deepStrictEqual(S.concat([1, 2], [2, 3]), [1]);\n *\n * @category instances\n * @since 2.11.0\n */\nexport var getDifferenceMagma = function (E) {\n    var differenceE = difference(E);\n    return {\n        concat: function (first, second) { return differenceE(second)(first); }\n    };\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: _map\n};\n/**\n * Given an input an `Array` of functions, `flap` returns an `Array` containing\n * the results of applying each function to the given input.\n *\n * @example\n * import { flap } from 'fp-ts/Array'\n *\n * const funs = [\n *   (n: number) => `Double: ${n * 2}`,\n *   (n: number) => `Triple: ${n * 3}`,\n *   (n: number) => `Square: ${n * n}`,\n * ];\n * assert.deepStrictEqual(flap(4)(funs), ['Double: 8', 'Triple: 12', 'Square: 16']);\n *\n * @category mapping\n * @since 2.10.0\n */\nexport var flap = /*#__PURE__*/ flap_(Functor);\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Pointed = {\n    URI: URI,\n    of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FunctorWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Apply = {\n    URI: URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * @since 2.5.0\n */\nexport var apFirst = /*#__PURE__*/ apFirst_(Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * @since 2.5.0\n */\nexport var apSecond = /*#__PURE__*/ apSecond_(Apply);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of\n};\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Chain = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @example\n * import * as A from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     A.chainFirst(() => ['a', 'b'])\n *   ),\n *   [1, 1, 2, 2, 3, 3]\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     [1, 2, 3],\n *     A.chainFirst(() => [])\n *   ),\n *   []\n * )\n *\n * @category sequencing\n * @since 2.0.0\n */\nexport var chainFirst = \n/*#__PURE__*/ chainFirst_(Chain);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Unfoldable = {\n    URI: URI,\n    unfold: unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n    URI: URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var Zero = {\n    URI: URI,\n    zero: zero\n};\n/**\n * @category do notation\n * @since 2.11.0\n */\nexport var guard = /*#__PURE__*/ guard_(Zero, Pointed);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alternative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    alt: _alt,\n    zero: zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Extend = {\n    URI: URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Compactable = {\n    URI: URI,\n    compact: compact,\n    separate: separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Filterable = {\n    URI: URI,\n    map: _map,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FilterableWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FoldableWithIndex = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n    URI: URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var TraversableWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverse: _traverse,\n    sequence: sequence,\n    traverseWithIndex: _traverseWithIndex\n};\nvar _wither = /*#__PURE__*/ witherDefault(Traversable, Compactable);\nvar _wilt = /*#__PURE__*/ wiltDefault(Traversable, Compactable);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Witherable = {\n    URI: URI,\n    map: _map,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    wither: _wither,\n    wilt: _wilt\n};\n/**\n * @category sequencing\n * @since 2.11.0\n */\nexport var chainRecDepthFirst = RA.chainRecDepthFirst;\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var ChainRecDepthFirst = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: _chainRecDepthFirst\n};\n/**\n * @category sequencing\n * @since 2.11.0\n */\nexport var chainRecBreadthFirst = RA.chainRecBreadthFirst;\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var ChainRecBreadthFirst = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain,\n    chainRec: _chainRecBreadthFirst\n};\n/**\n * Filter values inside a context.\n *\n * @since 2.11.0\n */\nexport var filterE = /*#__PURE__*/ filterE_(Witherable);\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var FromEither = {\n    URI: URI,\n    fromEither: fromEither\n};\n/**\n * @category lifting\n * @since 2.11.0\n */\nexport var fromEitherK = /*#__PURE__*/ fromEitherK_(FromEither);\n// -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n/**\n * @category unsafe\n * @since 2.0.0\n */\nexport var unsafeInsertAt = NEA.unsafeInsertAt;\n/**\n * @category unsafe\n * @since 2.0.0\n */\nexport var unsafeUpdateAt = function (i, a, as) {\n    return isNonEmpty(as) ? NEA.unsafeUpdateAt(i, a, as) : [];\n};\n/**\n * @category unsafe\n * @since 2.0.0\n */\nexport var unsafeDeleteAt = function (i, as) {\n    var xs = as.slice();\n    xs.splice(i, 1);\n    return xs;\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * `every` tells if the provided predicate holds true for every element in the `Array`.\n *\n * @example\n * import { every } from 'fp-ts/Array'\n *\n * assert.equal(every((x: number) => x >= 0)([1, 2, 3]), true);\n * assert.equal(every((x: number) => x >= 0)([-1, 2, 3]), false);\n *\n * @since 2.9.0\n */\nexport var every = RA.every;\n/**\n * `some` tells if the provided predicate holds true at least for one element in the `Array`.\n *\n * @example\n * import { some } from 'fp-ts/Array'\n *\n * assert.equal(some((x: number) => x >= 0)([1, 2, 3]), true);\n * assert.equal(some((x: number) => x >= 10)([1, 2, 3]), false);\n *\n * @since 2.9.0\n */\nexport var some = function (predicate) {\n    return function (as) {\n        return as.some(predicate);\n    };\n};\n/**\n * Alias of [`some`](#some)\n *\n * @since 2.11.0\n */\nexport var exists = some;\n/**\n * Places an element in between members of an `Array`, then folds the results using the provided `Monoid`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { intercalate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(intercalate(S.Monoid)('-')(['a', 'b', 'c']), 'a-b-c')\n *\n * @since 2.12.0\n */\nexport var intercalate = RA.intercalate;\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @category do notation\n * @since 2.9.0\n */\nexport var Do = /*#__PURE__*/ of(_.emptyRecord);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var bindTo = /*#__PURE__*/ bindTo_(Functor);\nvar let_ = /*#__PURE__*/ let__(Functor);\nexport { \n/**\n * @category do notation\n * @since 2.13.0\n */\nlet_ as let };\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var bind = /*#__PURE__*/ bind_(Chain);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var apS = /*#__PURE__*/ apS_(Apply);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use `NonEmptyArray` module instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var range = NEA.range;\n/**\n * Use a new `[]` instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var empty = [];\n/**\n * Use `prepend` instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var cons = NEA.cons;\n/**\n * Use `append` instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var snoc = NEA.snoc;\n/**\n * Use `prependAll` instead\n *\n * @category zone of death\n * @since 2.9.0\n * @deprecated\n */\nexport var prependToAll = prependAll;\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `A.Functor` instead of `A.array`\n * (where `A` is from `import A from 'fp-ts/Array'`)\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var array = {\n    URI: URI,\n    compact: compact,\n    separate: separate,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    mapWithIndex: _mapWithIndex,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex,\n    alt: _alt,\n    zero: zero,\n    unfold: unfold,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    reduceWithIndex: _reduceWithIndex,\n    foldMapWithIndex: _foldMapWithIndex,\n    reduceRightWithIndex: _reduceRightWithIndex,\n    traverseWithIndex: _traverseWithIndex,\n    extend: _extend,\n    wither: _wither,\n    wilt: _wilt\n};\n", "import { constFalse, constTrue, flow, pipe } from './function';\nvar contramap_ = function (predicate, f) { return pipe(predicate, contramap(f)); };\n/**\n * @since 2.11.0\n */\nexport var contramap = function (f) {\n    return function (predicate) {\n        return flow(f, predicate);\n    };\n};\n/**\n * @category type lambdas\n * @since 2.11.0\n */\nexport var URI = 'Predicate';\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var getSemigroupAny = function () { return ({\n    concat: function (first, second) { return pipe(first, or(second)); }\n}); };\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var getMonoidAny = function () { return ({\n    concat: getSemigroupAny().concat,\n    empty: constFalse\n}); };\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var getSemigroupAll = function () { return ({\n    concat: function (first, second) { return pipe(first, and(second)); }\n}); };\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var getMonoidAll = function () { return ({\n    concat: getSemigroupAll().concat,\n    empty: constTrue\n}); };\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var Contravariant = {\n    URI: URI,\n    contramap: contramap_\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.11.0\n */\nexport var not = function (predicate) {\n    return function (a) {\n        return !predicate(a);\n    };\n};\n/**\n * @since 2.11.0\n */\nexport var or = function (second) {\n    return function (first) {\n        return function (a) {\n            return first(a) || second(a);\n        };\n    };\n};\n/**\n * @since 2.11.0\n */\nexport var and = function (second) {\n    return function (first) {\n        return function (a) {\n            return first(a) && second(a);\n        };\n    };\n};\n", "import { getApplicativeMonoid } from './Applicative';\nimport { apFirst as apFirst_, apS as apS_, apSecond as apSecond_, getApplySemigroup as getApplySemigroup_ } from './Apply';\nimport { bind as bind_, chainFirst as chainFirst_ } from './Chain';\nimport { chainEitherK as chainEitherK_, fromEitherK as fromEitherK_, chainFirstEitherK as chainFirstEitherK_ } from './FromEither';\nimport { constNull, constUndefined, flow, identity, pipe } from './function';\nimport { let as let__, bindTo as bindTo_, flap as flap_ } from './Functor';\nimport * as _ from './internal';\nimport { not } from './Predicate';\nimport { first, last } from './Semigroup';\nimport { separated } from './Separated';\nimport { wiltDefault, witherDefault } from './Witherable';\nimport { guard as guard_ } from './Zero';\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * `None` doesn't have a constructor, instead you can use it directly as a value. Represents a missing value.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var none = _.none;\n/**\n * Constructs a `Some`. Represents an optional value that exists.\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var some = _.some;\nexport function fromPredicate(predicate) {\n    return function (a) { return (predicate(a) ? some(a) : none); };\n}\n/**\n * Returns the `Left` value of an `Either` if possible.\n *\n * @example\n * import { getLeft, none, some } from 'fp-ts/Option'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(getLeft(right(1)), none)\n * assert.deepStrictEqual(getLeft(left('a')), some('a'))\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var getLeft = function (ma) { return (ma._tag === 'Right' ? none : some(ma.left)); };\n/**\n * Returns the `Right` value of an `Either` if possible.\n *\n * @example\n * import { getRight, none, some } from 'fp-ts/Option'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(getRight(right(1)), some(1))\n * assert.deepStrictEqual(getRight(left('a')), none)\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var getRight = function (ma) { return (ma._tag === 'Left' ? none : some(ma.right)); };\nvar _map = function (fa, f) { return pipe(fa, map(f)); };\nvar _ap = function (fab, fa) { return pipe(fab, ap(fa)); };\nvar _chain = function (ma, f) { return pipe(ma, chain(f)); };\nvar _reduce = function (fa, b, f) { return pipe(fa, reduce(b, f)); };\nvar _foldMap = function (M) {\n    var foldMapM = foldMap(M);\n    return function (fa, f) { return pipe(fa, foldMapM(f)); };\n};\nvar _reduceRight = function (fa, b, f) { return pipe(fa, reduceRight(b, f)); };\nvar _traverse = function (F) {\n    var traverseF = traverse(F);\n    return function (ta, f) { return pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar _alt = function (fa, that) { return pipe(fa, alt(that)); };\nvar _filter = function (fa, predicate) { return pipe(fa, filter(predicate)); };\n/* istanbul ignore next */\nvar _filterMap = function (fa, f) { return pipe(fa, filterMap(f)); };\n/* istanbul ignore next */\nvar _extend = function (wa, f) { return pipe(wa, extend(f)); };\n/* istanbul ignore next */\nvar _partition = function (fa, predicate) {\n    return pipe(fa, partition(predicate));\n};\n/* istanbul ignore next */\nvar _partitionMap = function (fa, f) { return pipe(fa, partitionMap(f)); };\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexport var URI = 'Option';\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var getShow = function (S) { return ({\n    show: function (ma) { return (isNone(ma) ? 'none' : \"some(\".concat(S.show(ma.value), \")\")); }\n}); };\n/**\n * @example\n * import { none, some, getEq } from 'fp-ts/Option'\n * import * as N from 'fp-ts/number'\n *\n * const E = getEq(N.Eq)\n * assert.strictEqual(E.equals(none, none), true)\n * assert.strictEqual(E.equals(none, some(1)), false)\n * assert.strictEqual(E.equals(some(1), none), false)\n * assert.strictEqual(E.equals(some(1), some(2)), false)\n * assert.strictEqual(E.equals(some(1), some(1)), true)\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getEq = function (E) { return ({\n    equals: function (x, y) { return x === y || (isNone(x) ? isNone(y) : isNone(y) ? false : E.equals(x.value, y.value)); }\n}); };\n/**\n * The `Ord` instance allows `Option` values to be compared with\n * `compare`, whenever there is an `Ord` instance for\n * the type the `Option` contains.\n *\n * `None` is considered to be less than any `Some` value.\n *\n *\n * @example\n * import { none, some, getOrd } from 'fp-ts/Option'\n * import * as N from 'fp-ts/number'\n *\n * const O = getOrd(N.Ord)\n * assert.strictEqual(O.compare(none, none), 0)\n * assert.strictEqual(O.compare(none, some(1)), -1)\n * assert.strictEqual(O.compare(some(1), none), 1)\n * assert.strictEqual(O.compare(some(1), some(2)), -1)\n * assert.strictEqual(O.compare(some(1), some(1)), 0)\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getOrd = function (O) { return ({\n    equals: getEq(O).equals,\n    compare: function (x, y) { return (x === y ? 0 : isSome(x) ? (isSome(y) ? O.compare(x.value, y.value) : 1) : -1); }\n}); };\n/**\n * Monoid returning the left-most non-`None` value. If both operands are `Some`s then the inner values are\n * concatenated using the provided `Semigroup`\n *\n * | x       | y       | concat(x, y)       |\n * | ------- | ------- | ------------------ |\n * | none    | none    | none               |\n * | some(a) | none    | some(a)            |\n * | none    | some(b) | some(b)            |\n * | some(a) | some(b) | some(concat(a, b)) |\n *\n * @example\n * import { getMonoid, some, none } from 'fp-ts/Option'\n * import { SemigroupSum } from 'fp-ts/number'\n *\n * const M = getMonoid(SemigroupSum)\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(1)), some(1))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(3))\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getMonoid = function (S) { return ({\n    concat: function (x, y) { return (isNone(x) ? y : isNone(y) ? x : some(S.concat(x.value, y.value))); },\n    empty: none\n}); };\n/**\n * @category mapping\n * @since 2.0.0\n */\nexport var map = function (f) { return function (fa) {\n    return isNone(fa) ? none : some(f(fa.value));\n}; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: _map\n};\n/**\n * @category constructors\n * @since 2.7.0\n */\nexport var of = some;\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Pointed = {\n    URI: URI,\n    of: of\n};\n/**\n * @since 2.0.0\n */\nexport var ap = function (fa) { return function (fab) {\n    return isNone(fab) ? none : isNone(fa) ? none : some(fab.value(fa.value));\n}; };\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Apply = {\n    URI: URI,\n    map: _map,\n    ap: _ap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category sequencing\n * @since 2.0.0\n */\nexport var chain = function (f) { return function (ma) {\n    return isNone(ma) ? none : f(ma.value);\n}; };\n/**\n * @category instances\n * @since 2.10.0\n */\nexport var Chain = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    chain: _chain\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain\n};\n/**\n * @category folding\n * @since 2.0.0\n */\nexport var reduce = function (b, f) { return function (fa) {\n    return isNone(fa) ? b : f(b, fa.value);\n}; };\n/**\n * @category folding\n * @since 2.0.0\n */\nexport var foldMap = function (M) { return function (f) { return function (fa) {\n    return isNone(fa) ? M.empty : f(fa.value);\n}; }; };\n/**\n * @category folding\n * @since 2.0.0\n */\nexport var reduceRight = function (b, f) { return function (fa) {\n    return isNone(fa) ? b : f(fa.value, b);\n}; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight\n};\n/**\n * Less strict version of [`alt`](#alt).\n *\n * The `W` suffix (short for **W**idening) means that the return types will be merged.\n *\n * @category error handling\n * @since 2.9.0\n */\nexport var altW = function (that) { return function (fa) {\n    return isNone(fa) ? that() : fa;\n}; };\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `Option` returns the left-most non-`None` value.\n *\n * | x       | y       | pipe(x, alt(() => y) |\n * | ------- | ------- | -------------------- |\n * | none    | none    | none                 |\n * | some(a) | none    | some(a)              |\n * | none    | some(b) | some(b)              |\n * | some(a) | some(b) | some(a)              |\n *\n * @example\n * import * as O from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     O.none,\n *     O.alt(() => O.none)\n *   ),\n *   O.none\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     O.some('a'),\n *     O.alt<string>(() => O.none)\n *   ),\n *   O.some('a')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     O.none,\n *     O.alt(() => O.some('b'))\n *   ),\n *   O.some('b')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     O.some('a'),\n *     O.alt(() => O.some('b'))\n *   ),\n *   O.some('a')\n * )\n *\n * @category error handling\n * @since 2.0.0\n */\nexport var alt = altW;\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n    URI: URI,\n    map: _map,\n    alt: _alt\n};\n/**\n * @since 2.7.0\n */\nexport var zero = function () { return none; };\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var Zero = {\n    URI: URI,\n    zero: zero\n};\n/**\n * @category do notation\n * @since 2.11.0\n */\nexport var guard = /*#__PURE__*/ guard_(Zero, Pointed);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alternative = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    alt: _alt,\n    zero: zero\n};\n/**\n * @since 2.0.0\n */\nexport var extend = function (f) { return function (wa) {\n    return isNone(wa) ? none : some(f(wa));\n}; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Extend = {\n    URI: URI,\n    map: _map,\n    extend: _extend\n};\n/**\n * @category filtering\n * @since 2.0.0\n */\nexport var compact = /*#__PURE__*/ chain(identity);\nvar defaultSeparated = /*#__PURE__*/ separated(none, none);\n/**\n * @category filtering\n * @since 2.0.0\n */\nexport var separate = function (ma) {\n    return isNone(ma) ? defaultSeparated : separated(getLeft(ma.value), getRight(ma.value));\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Compactable = {\n    URI: URI,\n    compact: compact,\n    separate: separate\n};\n/**\n * @category filtering\n * @since 2.0.0\n */\nexport var filter = function (predicate) {\n    return function (fa) {\n        return isNone(fa) ? none : predicate(fa.value) ? fa : none;\n    };\n};\n/**\n * @category filtering\n * @since 2.0.0\n */\nexport var filterMap = function (f) { return function (fa) {\n    return isNone(fa) ? none : f(fa.value);\n}; };\n/**\n * @category filtering\n * @since 2.0.0\n */\nexport var partition = function (predicate) {\n    return function (fa) {\n        return separated(_filter(fa, not(predicate)), _filter(fa, predicate));\n    };\n};\n/**\n * @category filtering\n * @since 2.0.0\n */\nexport var partitionMap = function (f) { return flow(map(f), separate); };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Filterable = {\n    URI: URI,\n    map: _map,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category traversing\n * @since 2.6.3\n */\nexport var traverse = function (F) {\n    return function (f) {\n        return function (ta) {\n            return isNone(ta) ? F.of(none) : F.map(f(ta.value), some);\n        };\n    };\n};\n/**\n * @category traversing\n * @since 2.6.3\n */\nexport var sequence = function (F) {\n    return function (ta) {\n        return isNone(ta) ? F.of(none) : F.map(ta.value, some);\n    };\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n    URI: URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence\n};\nvar _wither = /*#__PURE__*/ witherDefault(Traversable, Compactable);\nvar _wilt = /*#__PURE__*/ wiltDefault(Traversable, Compactable);\n/**\n * @category filtering\n * @since 2.6.5\n */\nexport var wither = function (F) {\n    var _witherF = _wither(F);\n    return function (f) { return function (fa) { return _witherF(fa, f); }; };\n};\n/**\n * @category filtering\n * @since 2.6.5\n */\nexport var wilt = function (F) {\n    var _wiltF = _wilt(F);\n    return function (f) { return function (fa) { return _wiltF(fa, f); }; };\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Witherable = {\n    URI: URI,\n    map: _map,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    wither: _wither,\n    wilt: _wilt\n};\n/**\n * @since 2.7.0\n */\nexport var throwError = function () { return none; };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var MonadThrow = {\n    URI: URI,\n    map: _map,\n    ap: _ap,\n    of: of,\n    chain: _chain,\n    throwError: throwError\n};\n/**\n * Transforms an `Either` to an `Option` discarding the error.\n *\n * Alias of [getRight](#getright)\n *\n * @category conversions\n * @since 2.0.0\n */\nexport var fromEither = getRight;\n/**\n * @category instances\n * @since 2.11.0\n */\nexport var FromEither = {\n    URI: URI,\n    fromEither: fromEither\n};\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * Returns `true` if the option is an instance of `Some`, `false` otherwise.\n *\n * @example\n * import { some, none, isSome } from 'fp-ts/Option'\n *\n * assert.strictEqual(isSome(some(1)), true)\n * assert.strictEqual(isSome(none), false)\n *\n * @category refinements\n * @since 2.0.0\n */\nexport var isSome = _.isSome;\n/**\n * Returns `true` if the option is `None`, `false` otherwise.\n *\n * @example\n * import { some, none, isNone } from 'fp-ts/Option'\n *\n * assert.strictEqual(isNone(some(1)), false)\n * assert.strictEqual(isNone(none), true)\n *\n * @category refinements\n * @since 2.0.0\n */\nexport var isNone = function (fa) { return fa._tag === 'None'; };\n/**\n * Less strict version of [`match`](#match).\n *\n * The `W` suffix (short for **W**idening) means that the handler return types will be merged.\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexport var matchW = function (onNone, onSome) {\n    return function (ma) {\n        return isNone(ma) ? onNone() : onSome(ma.value);\n    };\n};\n/**\n * Alias of [`matchW`](#matchw).\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexport var foldW = matchW;\n/**\n * Takes a (lazy) default value, a function, and an `Option` value, if the `Option` value is `None` the default value is\n * returned, otherwise the function is applied to the value inside the `Some` and the result is returned.\n *\n * @example\n * import { some, none, match } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     match(() => 'a none', a => `a some containing ${a}`)\n *   ),\n *   'a some containing 1'\n * )\n *\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     match(() => 'a none', a => `a some containing ${a}`)\n *   ),\n *   'a none'\n * )\n *\n * @category pattern matching\n * @since 2.10.0\n */\nexport var match = matchW;\n/**\n * Alias of [`match`](#match).\n *\n * @category pattern matching\n * @since 2.0.0\n */\nexport var fold = match;\n/**\n * Less strict version of [`getOrElse`](#getorelse).\n *\n * The `W` suffix (short for **W**idening) means that the handler return type will be merged.\n *\n * @category error handling\n * @since 2.6.0\n */\nexport var getOrElseW = function (onNone) {\n    return function (ma) {\n        return isNone(ma) ? onNone() : ma.value;\n    };\n};\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns the given default value\n *\n * @example\n * import { some, none, getOrElse } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     getOrElse(() => 0)\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     getOrElse(() => 0)\n *   ),\n *   0\n * )\n *\n * @category error handling\n * @since 2.0.0\n */\nexport var getOrElse = getOrElseW;\n/**\n * @category mapping\n * @since 2.10.0\n */\nexport var flap = /*#__PURE__*/ flap_(Functor);\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * @since 2.0.0\n */\nexport var apFirst = /*#__PURE__*/ apFirst_(Apply);\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * @since 2.0.0\n */\nexport var apSecond = /*#__PURE__*/ apSecond_(Apply);\n/**\n * @category sequencing\n * @since 2.0.0\n */\nexport var flatten = compact;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @category sequencing\n * @since 2.0.0\n */\nexport var chainFirst = \n/*#__PURE__*/ chainFirst_(Chain);\n/**\n * @since 2.0.0\n */\nexport var duplicate = /*#__PURE__*/ extend(identity);\n/**\n * @category lifting\n * @since 2.11.0\n */\nexport var fromEitherK = /*#__PURE__*/ fromEitherK_(FromEither);\n/**\n * @category sequencing\n * @since 2.11.0\n */\nexport var chainEitherK = \n/*#__PURE__*/ chainEitherK_(FromEither, Chain);\n/**\n * @category sequencing\n * @since 2.12.0\n */\nexport var chainFirstEitherK = \n/*#__PURE__*/ chainFirstEitherK_(FromEither, Chain);\n/**\n * Constructs a new `Option` from a nullable type. If the value is `null` or `undefined`, returns `None`, otherwise\n * returns the value wrapped in a `Some`.\n *\n * @example\n * import { none, some, fromNullable } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(fromNullable(undefined), none)\n * assert.deepStrictEqual(fromNullable(null), none)\n * assert.deepStrictEqual(fromNullable(1), some(1))\n *\n * @category conversions\n * @since 2.0.0\n */\nexport var fromNullable = function (a) { return (a == null ? none : some(a)); };\n/**\n * Transforms an exception into an `Option`. If `f` throws, returns `None`, otherwise returns the output wrapped in a\n * `Some`.\n *\n * See also [`tryCatchK`](#trycatchk).\n *\n * @example\n * import { none, some, tryCatch } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   tryCatch(() => {\n *     throw new Error()\n *   }),\n *   none\n * )\n * assert.deepStrictEqual(tryCatch(() => 1), some(1))\n *\n * @category interop\n * @since 2.0.0\n */\nexport var tryCatch = function (f) {\n    try {\n        return some(f());\n    }\n    catch (e) {\n        return none;\n    }\n};\n/**\n * Converts a function that may throw to one returning a `Option`.\n *\n * @category interop\n * @since 2.10.0\n */\nexport var tryCatchK = function (f) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return tryCatch(function () { return f.apply(void 0, a); });\n    };\n};\n/**\n * Returns a *smart constructor* from a function that returns a nullable value.\n *\n * @example\n * import { fromNullableK, none, some } from 'fp-ts/Option'\n *\n * const f = (s: string): number | undefined => {\n *   const n = parseFloat(s)\n *   return isNaN(n) ? undefined : n\n * }\n *\n * const g = fromNullableK(f)\n *\n * assert.deepStrictEqual(g('1'), some(1))\n * assert.deepStrictEqual(g('a'), none)\n *\n * @category lifting\n * @since 2.9.0\n */\nexport var fromNullableK = function (f) { return flow(f, fromNullable); };\n/**\n * This is `chain` + `fromNullable`, useful when working with optional values.\n *\n * @example\n * import { some, none, fromNullable, chainNullableK } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Employee {\n *   readonly company?: {\n *     readonly address?: {\n *       readonly street?: {\n *         readonly name?: string\n *       }\n *     }\n *   }\n * }\n *\n * const employee1: Employee = { company: { address: { street: { name: 'high street' } } } }\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     fromNullable(employee1.company),\n *     chainNullableK(company => company.address),\n *     chainNullableK(address => address.street),\n *     chainNullableK(street => street.name)\n *   ),\n *   some('high street')\n * )\n *\n * const employee2: Employee = { company: { address: { street: {} } } }\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     fromNullable(employee2.company),\n *     chainNullableK(company => company.address),\n *     chainNullableK(address => address.street),\n *     chainNullableK(street => street.name)\n *   ),\n *   none\n * )\n *\n * @category sequencing\n * @since 2.9.0\n */\nexport var chainNullableK = function (f) {\n    return function (ma) {\n        return isNone(ma) ? none : fromNullable(f(ma.value));\n    };\n};\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns `null`.\n *\n * @example\n * import { some, none, toNullable } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     toNullable\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     toNullable\n *   ),\n *   null\n * )\n *\n * @category conversions\n * @since 2.0.0\n */\nexport var toNullable = /*#__PURE__*/ match(constNull, identity);\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns `undefined`.\n *\n * @example\n * import { some, none, toUndefined } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     toUndefined\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     toUndefined\n *   ),\n *   undefined\n * )\n *\n * @category conversions\n * @since 2.0.0\n */\nexport var toUndefined = /*#__PURE__*/ match(constUndefined, identity);\nexport function elem(E) {\n    return function (a, ma) {\n        if (ma === undefined) {\n            var elemE_1 = elem(E);\n            return function (ma) { return elemE_1(a, ma); };\n        }\n        return isNone(ma) ? false : E.equals(a, ma.value);\n    };\n}\n/**\n * Returns `true` if the predicate is satisfied by the wrapped value\n *\n * @example\n * import { some, none, exists } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     exists(n => n > 0)\n *   ),\n *   true\n * )\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     exists(n => n > 1)\n *   ),\n *   false\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     exists(n => n > 0)\n *   ),\n *   false\n * )\n *\n * @since 2.0.0\n */\nexport var exists = function (predicate) {\n    return function (ma) {\n        return isNone(ma) ? false : predicate(ma.value);\n    };\n};\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @category do notation\n * @since 2.9.0\n */\nexport var Do = /*#__PURE__*/ of(_.emptyRecord);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var bindTo = /*#__PURE__*/ bindTo_(Functor);\nvar let_ = /*#__PURE__*/ let__(Functor);\nexport { \n/**\n * @category do notation\n * @since 2.13.0\n */\nlet_ as let };\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var bind = /*#__PURE__*/ bind_(Chain);\n/**\n * @category do notation\n * @since 2.8.0\n */\nexport var apS = /*#__PURE__*/ apS_(Apply);\n/**\n * @since 2.11.0\n */\nexport var ApT = /*#__PURE__*/ of(_.emptyReadonlyArray);\n// -------------------------------------------------------------------------------------\n// array utils\n// -------------------------------------------------------------------------------------\n/**\n * Equivalent to `ReadonlyNonEmptyArray#traverseWithIndex(Applicative)`.\n *\n * @category traversing\n * @since 2.11.0\n */\nexport var traverseReadonlyNonEmptyArrayWithIndex = function (f) {\n    return function (as) {\n        var o = f(0, _.head(as));\n        if (isNone(o)) {\n            return none;\n        }\n        var out = [o.value];\n        for (var i = 1; i < as.length; i++) {\n            var o_1 = f(i, as[i]);\n            if (isNone(o_1)) {\n                return none;\n            }\n            out.push(o_1.value);\n        }\n        return some(out);\n    };\n};\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @category traversing\n * @since 2.11.0\n */\nexport var traverseReadonlyArrayWithIndex = function (f) {\n    var g = traverseReadonlyNonEmptyArrayWithIndex(f);\n    return function (as) { return (_.isNonEmpty(as) ? g(as) : ApT); };\n};\n/**\n * Equivalent to `ReadonlyArray#traverseWithIndex(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nexport var traverseArrayWithIndex = traverseReadonlyArrayWithIndex;\n/**\n * Equivalent to `ReadonlyArray#traverse(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nexport var traverseArray = function (f) {\n    return traverseReadonlyArrayWithIndex(function (_, a) { return f(a); });\n};\n/**\n * Equivalent to `ReadonlyArray#sequence(Applicative)`.\n *\n * @category traversing\n * @since 2.9.0\n */\nexport var sequenceArray = \n/*#__PURE__*/ traverseArray(identity);\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use `Refinement` module instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport function getRefinement(getOption) {\n    return function (a) { return isSome(getOption(a)); };\n}\n/**\n * Use [`chainNullableK`](#chainnullablek) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var mapNullable = chainNullableK;\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `O.Functor` instead of `O.option`\n * (where `O` is from `import O from 'fp-ts/Option'`)\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var option = {\n    URI: URI,\n    map: _map,\n    of: of,\n    ap: _ap,\n    chain: _chain,\n    reduce: _reduce,\n    foldMap: _foldMap,\n    reduceRight: _reduceRight,\n    traverse: _traverse,\n    sequence: sequence,\n    zero: zero,\n    alt: _alt,\n    extend: _extend,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    wither: _wither,\n    wilt: _wilt,\n    throwError: throwError\n};\n/**\n * Use [`getApplySemigroup`](./Apply.ts.html#getapplysemigroup) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getApplySemigroup = /*#__PURE__*/ getApplySemigroup_(Apply);\n/**\n * Use [`getApplicativeMonoid`](./Applicative.ts.html#getapplicativemonoid) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getApplyMonoid = /*#__PURE__*/ getApplicativeMonoid(Applicative);\n/**\n * Use\n *\n * ```ts\n * import { first } from 'fp-ts/Semigroup'\n * import { getMonoid } from 'fp-ts/Option'\n *\n * getMonoid(first())\n * ```\n *\n * instead.\n *\n * Monoid returning the left-most non-`None` value\n *\n * | x       | y       | concat(x, y) |\n * | ------- | ------- | ------------ |\n * | none    | none    | none         |\n * | some(a) | none    | some(a)      |\n * | none    | some(b) | some(b)      |\n * | some(a) | some(b) | some(a)      |\n *\n * @example\n * import { getFirstMonoid, some, none } from 'fp-ts/Option'\n *\n * const M = getFirstMonoid<number>()\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(2)), some(2))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(1))\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getFirstMonoid = function () { return getMonoid(first()); };\n/**\n * Use\n *\n * ```ts\n * import { last } from 'fp-ts/Semigroup'\n * import { getMonoid } from 'fp-ts/Option'\n *\n * getMonoid(last())\n * ```\n *\n * instead.\n *\n * Monoid returning the right-most non-`None` value\n *\n * | x       | y       | concat(x, y) |\n * | ------- | ------- | ------------ |\n * | none    | none    | none         |\n * | some(a) | none    | some(a)      |\n * | none    | some(b) | some(b)      |\n * | some(a) | some(b) | some(b)      |\n *\n * @example\n * import { getLastMonoid, some, none } from 'fp-ts/Option'\n *\n * const M = getLastMonoid<number>()\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(2)), some(2))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(2))\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var getLastMonoid = function () { return getMonoid(last()); };\n", "import { isNonEmpty } from './ReadonlyNonEmptyArray';\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @example\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(S.Eq.equals('a', 'a'), true)\n * assert.deepStrictEqual(S.Eq.equals('a', 'b'), false)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var Eq = {\n    equals: function (first, second) { return first === second; }\n};\n/**\n * `string` semigroup under concatenation.\n *\n * @example\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(S.Semigroup.concat('a', 'b'), 'ab')\n *\n * @category instances\n * @since 2.10.0\n */\nexport var Semigroup = {\n    concat: function (first, second) { return first + second; }\n};\n/**\n * An empty `string`.\n *\n * @since 2.10.0\n */\nexport var empty = '';\n/**\n * `string` monoid under concatenation.\n *\n * The `empty` value is `''`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(S.Monoid.concat('a', 'b'), 'ab')\n * assert.deepStrictEqual(S.Monoid.concat('a', S.Monoid.empty), 'a')\n *\n * @category instances\n * @since 2.10.0\n */\nexport var Monoid = {\n    concat: Semigroup.concat,\n    empty: empty\n};\n/**\n * @example\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(S.Ord.compare('a', 'a'), 0)\n * assert.deepStrictEqual(S.Ord.compare('a', 'b'), -1)\n * assert.deepStrictEqual(S.Ord.compare('b', 'a'), 1)\n *\n * @category instances\n * @since 2.10.0\n */\nexport var Ord = {\n    equals: Eq.equals,\n    compare: function (first, second) { return (first < second ? -1 : first > second ? 1 : 0); }\n};\n/**\n * @example\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(S.Show.show('a'), '\"a\"')\n *\n * @category instances\n * @since 2.10.0\n */\nexport var Show = {\n    show: function (s) { return JSON.stringify(s); }\n};\n// -------------------------------------------------------------------------------------\n// refinements\n// -------------------------------------------------------------------------------------\n/**\n * @example\n * import * as S from 'fp-ts/string'\n *\n * assert.deepStrictEqual(S.isString('a'), true)\n * assert.deepStrictEqual(S.isString(1), false)\n *\n * @category refinements\n * @since 2.11.0\n */\nexport var isString = function (u) { return typeof u === 'string'; };\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('a', S.toUpperCase), 'A')\n *\n * @since 2.11.0\n */\nexport var toUpperCase = function (s) { return s.toUpperCase(); };\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('A', S.toLowerCase), 'a')\n *\n * @since 2.11.0\n */\nexport var toLowerCase = function (s) { return s.toLowerCase(); };\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('abc', S.replace('b', 'd')), 'adc')\n *\n * @since 2.11.0\n */\nexport var replace = function (searchValue, replaceValue) {\n    return function (s) {\n        return s.replace(searchValue, replaceValue);\n    };\n};\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(' a ', S.trim), 'a')\n *\n * @since 2.11.0\n */\nexport var trim = function (s) { return s.trim(); };\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(' a ', S.trimLeft), 'a ')\n *\n * @since 2.11.0\n */\nexport var trimLeft = function (s) { return s.trimLeft(); };\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe(' a ', S.trimRight), ' a')\n *\n * @since 2.11.0\n */\nexport var trimRight = function (s) { return s.trimRight(); };\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('abcd', S.slice(1, 3)), 'bc')\n *\n * @since 2.11.0\n */\nexport var slice = function (start, end) {\n    return function (s) {\n        return s.slice(start, end);\n    };\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Test whether a `string` is empty.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('', S.isEmpty), true)\n * assert.deepStrictEqual(pipe('a', S.isEmpty), false)\n *\n * @since 2.10.0\n */\nexport var isEmpty = function (s) { return s.length === 0; };\n/**\n * Calculate the number of characters in a `string`.\n *\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('abc', S.size), 3)\n *\n * @since 2.10.0\n */\nexport var size = function (s) { return s.length; };\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('abc', S.split('')), ['a', 'b', 'c'])\n * assert.deepStrictEqual(pipe('', S.split('')), [''])\n *\n * @since 2.11.0\n */\nexport var split = function (separator) {\n    return function (s) {\n        var out = s.split(separator);\n        return isNonEmpty(out) ? out : [s];\n    };\n};\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('abc', S.includes('b')), true)\n * assert.deepStrictEqual(pipe('abc', S.includes('d')), false)\n *\n * @since 2.11.0\n */\nexport var includes = function (searchString, position) {\n    return function (s) {\n        return s.includes(searchString, position);\n    };\n};\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('abc', S.startsWith('a')), true)\n * assert.deepStrictEqual(pipe('bc', S.startsWith('a')), false)\n *\n * @since 2.11.0\n */\nexport var startsWith = function (searchString, position) {\n    return function (s) {\n        return s.startsWith(searchString, position);\n    };\n};\n/**\n * @example\n * import * as S from 'fp-ts/string'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe('abc', S.endsWith('c')), true)\n * assert.deepStrictEqual(pipe('ab', S.endsWith('c')), false)\n *\n * @since 2.11.0\n */\nexport var endsWith = function (searchString, position) {\n    return function (s) {\n        return s.endsWith(searchString, position);\n    };\n};\n", "import { fromEquals } from './Eq';\nimport { flow, identity, pipe, SK } from './function';\nimport { flap as flap_ } from './Functor';\nimport * as _ from './internal';\nimport { separated } from './Separated';\nimport * as S from './string';\nimport { wiltDefault, witherDefault } from './Witherable';\n/**\n * Builds a `ReadonlyRecord` by copying a `Record`.\n *\n * @example\n * import { ReadonlyRecord, fromRecord } from \"fp-ts/ReadonlyRecord\"\n *\n * const x: Record<string, number> = { a: 1, b: 2 };\n * const y: ReadonlyRecord<string, number> = fromRecord(x);\n * assert.deepStrictEqual(x,y);\n * // `y.a = 5` gives compiler error\n *\n * @category conversions\n * @since 2.5.0\n */\nexport var fromRecord = function (r) { return Object.assign({}, r); };\n/**\n * Builds a mutable `Record` from a `ReadonlyRecord`.\n *\n * @example\n * import { ReadonlyRecord, toRecord } from \"fp-ts/ReadonlyRecord\"\n *\n * const x: ReadonlyRecord<string, number> = { a: 1, b: 2 };\n * const y: Record<string, number> = toRecord(x);\n * assert.deepStrictEqual(x,y);\n * y.a = 5; // it's ok, y is mutable\n *\n * @category conversions\n * @since 2.5.0\n */\nexport var toRecord = function (r) { return Object.assign({}, r); };\n/**\n * Calculate the number of key/value pairs in a `ReadonlyRecord`,\n *\n * @example\n * import { size } from \"fp-ts/ReadonlyRecord\";\n *\n * assert.deepStrictEqual(size({ a: true, b: 2, c: \"three\" }), 3);\n *\n * @since 2.5.0\n */\nexport var size = function (r) { return Object.keys(r).length; };\n/**\n * Test whether a `ReadonlyRecord` is empty.\n *\n * @example\n * import { isEmpty } from \"fp-ts/ReadonlyRecord\"\n *\n * assert.deepStrictEqual(isEmpty({}), true);\n * assert.deepStrictEqual(isEmpty({ a: 3 }), false);\n * @since 2.5.0\n */\nexport var isEmpty = function (r) {\n    for (var k in r) {\n        if (_.has.call(r, k)) {\n            return false;\n        }\n    }\n    return true;\n};\nvar keys_ = function (O) {\n    return function (r) {\n        return Object.keys(r).sort(O.compare);\n    };\n};\n/**\n * @since 2.5.0\n */\nexport var keys = /*#__PURE__*/ keys_(S.Ord);\nexport function collect(O) {\n    if (typeof O === 'function') {\n        return collect(S.Ord)(O);\n    }\n    var keysO = keys_(O);\n    return function (f) {\n        return function (r) {\n            var out = [];\n            for (var _i = 0, _a = keysO(r); _i < _a.length; _i++) {\n                var key = _a[_i];\n                out.push(f(key, r[key]));\n            }\n            return out;\n        };\n    };\n}\n/**\n * Get a sorted `ReadonlyArray` of the key/value pairs contained in a `ReadonlyRecord`.\n *\n * @example\n * import { toReadonlyArray } from 'fp-ts/ReadonlyRecord'\n *\n * const x = { c: 3, a: \"foo\", b: false };\n * assert.deepStrictEqual(toReadonlyArray(x), [\n *   [\"a\", \"foo\"],\n *   [\"b\", false],\n *   [\"c\", 3],\n * ]);\n *\n * @category conversions\n * @since 2.5.0\n */\nexport var toReadonlyArray = \n/*#__PURE__*/ collect(S.Ord)(function (k, a) { return [k, a]; });\nexport function toUnfoldable(U) {\n    return function (r) {\n        var sas = toReadonlyArray(r);\n        var len = sas.length;\n        return U.unfold(0, function (b) { return (b < len ? _.some([sas[b], b + 1]) : _.none); });\n    };\n}\n/**\n * Insert or replace a key/value pair in a `ReadonlyRecord`.\n *\n * @example\n * import { upsertAt } from 'fp-ts/ReadonlyRecord'\n *\n * assert.deepStrictEqual(upsertAt(\"a\", 5)({ a: 1, b: 2 }), { a: 5, b: 2 });\n * assert.deepStrictEqual(upsertAt(\"c\", 5)({ a: 1, b: 2 }), { a: 1, b: 2, c: 5 });\n *\n * @since 2.10.0\n */\nexport var upsertAt = function (k, a) {\n    return function (r) {\n        if (_.has.call(r, k) && r[k] === a) {\n            return r;\n        }\n        var out = Object.assign({}, r);\n        out[k] = a;\n        return out;\n    };\n};\n/**\n * Test whether or not a key exists in a `ReadonlyRecord`.\n *\n * Note. This function is not pipeable because is a `Refinement`.\n *\n * @example\n * import { has } from 'fp-ts/ReadonlyRecord'\n *\n * assert.deepStrictEqual(has(\"a\", { a: 1, b: 2 }), true);\n * assert.deepStrictEqual(has(\"c\", { a: 1, b: 2 }), false);\n *\n * @since 2.10.0\n */\nexport var has = function (k, r) { return _.has.call(r, k); };\nexport function deleteAt(k) {\n    return function (r) {\n        if (!_.has.call(r, k)) {\n            return r;\n        }\n        var out = Object.assign({}, r);\n        delete out[k];\n        return out;\n    };\n}\n/**\n * Replace a key/value pair in a `ReadonlyRecord`.\n *\n * @returns If the specified key exists it returns an `Option` containing a new `Record`\n * with the entry updated, otherwise it returns `None`\n *\n * @example\n * import { updateAt } from 'fp-ts/ReadonlyRecord'\n * import { option } from 'fp-ts'\n *\n * assert.deepStrictEqual(updateAt(\"a\", 3)({ a: 1, b: 2 }), option.some({ a: 3, b: 2 }));\n * assert.deepStrictEqual(updateAt(\"c\", 3)({ a: 1, b: 2 }), option.none);\n *\n * @since 2.5.0\n */\nexport var updateAt = function (k, a) {\n    return function (r) {\n        if (!has(k, r)) {\n            return _.none;\n        }\n        if (r[k] === a) {\n            return _.some(r);\n        }\n        var out = Object.assign({}, r);\n        out[k] = a;\n        return _.some(out);\n    };\n};\n/**\n * Applies a mapping function to one specific key/value pair in a `ReadonlyRecord`.\n *\n * @returns If the specified key exists it returns an `Option` containing a new `Record`\n * with the entry updated, otherwise it returns `None`\n *\n * @example\n * import { modifyAt } from 'fp-ts/ReadonlyRecord'\n * import { option } from 'fp-ts'\n *\n * assert.deepStrictEqual(modifyAt(\"a\", (x: number) => x * 3)({ a: 1, b: 2 }), option.some({ a: 3, b: 2 }));\n * assert.deepStrictEqual(modifyAt(\"c\", (x: number) => x * 3)({ a: 1, b: 2 }), option.none);\n *\n * @since 2.5.0\n */\nexport var modifyAt = function (k, f) {\n    return function (r) {\n        if (!has(k, r)) {\n            return _.none;\n        }\n        var next = f(r[k]);\n        if (next === r[k]) {\n            return _.some(r);\n        }\n        var out = Object.assign({}, r);\n        out[k] = next;\n        return _.some(out);\n    };\n};\nexport function pop(k) {\n    var deleteAtk = deleteAt(k);\n    return function (r) {\n        var oa = lookup(k, r);\n        return _.isNone(oa) ? _.none : _.some([oa.value, deleteAtk(r)]);\n    };\n}\nexport function isSubrecord(E) {\n    return function (me, that) {\n        if (that === undefined) {\n            var isSubrecordE_1 = isSubrecord(E);\n            return function (that) { return isSubrecordE_1(that, me); };\n        }\n        for (var k in me) {\n            if (!_.has.call(that, k) || !E.equals(me[k], that[k])) {\n                return false;\n            }\n        }\n        return true;\n    };\n}\nexport function lookup(k, r) {\n    if (r === undefined) {\n        return function (r) { return lookup(k, r); };\n    }\n    return _.has.call(r, k) ? _.some(r[k]) : _.none;\n}\n/**\n * @since 2.5.0\n */\nexport var empty = {};\nexport function mapWithIndex(f) {\n    return function (r) {\n        var out = {};\n        for (var k in r) {\n            if (_.has.call(r, k)) {\n                out[k] = f(k, r[k]);\n            }\n        }\n        return out;\n    };\n}\nexport function map(f) {\n    return mapWithIndex(function (_, a) { return f(a); });\n}\nexport function reduceWithIndex() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    if (args.length === 2) {\n        return reduceWithIndex(S.Ord).apply(void 0, args);\n    }\n    var keysO = keys_(args[0]);\n    return function (b, f) { return function (fa) {\n        var out = b;\n        var ks = keysO(fa);\n        var len = ks.length;\n        for (var i = 0; i < len; i++) {\n            var k = ks[i];\n            out = f(k, out, fa[k]);\n        }\n        return out;\n    }; };\n}\nexport function foldMapWithIndex(O) {\n    if ('compare' in O) {\n        var keysO_1 = keys_(O);\n        return function (M) {\n            return function (f) {\n                return function (fa) {\n                    var out = M.empty;\n                    var ks = keysO_1(fa);\n                    var len = ks.length;\n                    for (var i = 0; i < len; i++) {\n                        var k = ks[i];\n                        out = M.concat(out, f(k, fa[k]));\n                    }\n                    return out;\n                };\n            };\n        };\n    }\n    return foldMapWithIndex(S.Ord)(O);\n}\nexport function reduceRightWithIndex() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    if (args.length === 2) {\n        return reduceRightWithIndex(S.Ord).apply(void 0, args);\n    }\n    var keysO = keys_(args[0]);\n    return function (b, f) { return function (fa) {\n        var out = b;\n        var ks = keysO(fa);\n        var len = ks.length;\n        for (var i = len - 1; i >= 0; i--) {\n            var k = ks[i];\n            out = f(k, fa[k], out);\n        }\n        return out;\n    }; };\n}\n/**\n * Create a `ReadonlyRecord` with one key/value pair.\n *\n * @example\n * import { singleton } from \"fp-ts/ReadonlyRecord\";\n *\n * assert.deepStrictEqual(singleton(\"a\", 1), { a: 1 });\n *\n * @category constructors\n * @since 2.5.0\n */\nexport var singleton = function (k, a) {\n    var _a;\n    return (_a = {}, _a[k] = a, _a);\n};\nexport function traverseWithIndex(F) {\n    var traverseWithIndexOF = _traverseWithIndex(S.Ord)(F);\n    return function (f) { return function (ta) { return traverseWithIndexOF(ta, f); }; };\n}\nexport function traverse(F) {\n    var traverseOF = _traverse(S.Ord)(F);\n    return function (f) { return function (ta) { return traverseOF(ta, f); }; };\n}\nexport function sequence(F) {\n    return _sequence(S.Ord)(F);\n}\n/**\n * @category filtering\n * @since 2.6.5\n */\nexport var wither = function (F) {\n    var traverseF = traverse(F);\n    return function (f) { return function (fa) { return F.map(pipe(fa, traverseF(f)), compact); }; };\n};\n/**\n * @category filtering\n * @since 2.6.5\n */\nexport var wilt = function (F) {\n    var traverseF = traverse(F);\n    return function (f) { return function (fa) { return F.map(pipe(fa, traverseF(f)), separate); }; };\n};\nexport function partitionMapWithIndex(f) {\n    return function (r) {\n        var left = {};\n        var right = {};\n        for (var k in r) {\n            if (_.has.call(r, k)) {\n                var e = f(k, r[k]);\n                switch (e._tag) {\n                    case 'Left':\n                        left[k] = e.left;\n                        break;\n                    case 'Right':\n                        right[k] = e.right;\n                        break;\n                }\n            }\n        }\n        return separated(left, right);\n    };\n}\nexport function partitionWithIndex(predicateWithIndex) {\n    return function (r) {\n        var left = {};\n        var right = {};\n        for (var k in r) {\n            if (_.has.call(r, k)) {\n                var a = r[k];\n                if (predicateWithIndex(k, a)) {\n                    right[k] = a;\n                }\n                else {\n                    left[k] = a;\n                }\n            }\n        }\n        return separated(left, right);\n    };\n}\nexport function filterMapWithIndex(f) {\n    return function (r) {\n        var out = {};\n        for (var k in r) {\n            if (_.has.call(r, k)) {\n                var ob = f(k, r[k]);\n                if (_.isSome(ob)) {\n                    out[k] = ob.value;\n                }\n            }\n        }\n        return out;\n    };\n}\nexport function filterWithIndex(predicateWithIndex) {\n    return function (fa) {\n        var out = {};\n        var changed = false;\n        for (var key in fa) {\n            if (_.has.call(fa, key)) {\n                var a = fa[key];\n                if (predicateWithIndex(key, a)) {\n                    out[key] = a;\n                }\n                else {\n                    changed = true;\n                }\n            }\n        }\n        return changed ? out : fa;\n    };\n}\nexport function fromFoldable(M, F) {\n    var fromFoldableMapM = fromFoldableMap(M, F);\n    return function (fka) { return fromFoldableMapM(fka, identity); };\n}\nexport function fromFoldableMap(M, F) {\n    return function (ta, f) {\n        return F.reduce(ta, {}, function (r, a) {\n            var _a = f(a), k = _a[0], b = _a[1];\n            r[k] = _.has.call(r, k) ? M.concat(r[k], b) : b;\n            return r;\n        });\n    };\n}\n/**\n * Alias of [`toReadonlyArray`](#toreadonlyarray).\n *\n * @example\n * import { toEntries } from 'fp-ts/ReadonlyRecord'\n *\n * assert.deepStrictEqual(toEntries({ b: 2, a: 1 }), [['a', 1], ['b', 2]])\n *\n * @category conversions\n * @since 2.12.0\n */\nexport var toEntries = toReadonlyArray;\n/**\n * Converts a `ReadonlyArray` of `[key, value]` tuples into a `ReadonlyRecord`.\n *\n * @example\n * import { fromEntries } from 'fp-ts/ReadonlyRecord'\n *\n * assert.deepStrictEqual(fromEntries([['a', 1], ['b', 2], ['a', 3]]), { b: 2, a: 3 })\n *\n * @since 2.12.0\n * @category conversions\n */\nexport var fromEntries = function (fa) {\n    var out = {};\n    for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n        var a = fa_1[_i];\n        out[a[0]] = a[1];\n    }\n    return out;\n};\nexport function every(predicate) {\n    return function (r) {\n        for (var k in r) {\n            if (!predicate(r[k])) {\n                return false;\n            }\n        }\n        return true;\n    };\n}\n/**\n * Test if at least one value in a `ReadonlyRecord` satisfies the predicate.\n *\n * @example\n * import { some } from \"fp-ts/ReadonlyRecord\"\n *\n * assert.deepStrictEqual(some((n: number) => n >= 0)({ a: 1, b: -2 }), true);\n * assert.deepStrictEqual(some((n: number) => n >= 0)({ a: -1, b: -2 }), false);\n *\n * @since 2.5.0\n */\nexport function some(predicate) {\n    return function (r) {\n        for (var k in r) {\n            if (predicate(r[k])) {\n                return true;\n            }\n        }\n        return false;\n    };\n}\nexport function elem(E) {\n    return function (a, fa) {\n        if (fa === undefined) {\n            var elemE_1 = elem(E);\n            return function (fa) { return elemE_1(a, fa); };\n        }\n        for (var k in fa) {\n            if (E.equals(fa[k], a)) {\n                return true;\n            }\n        }\n        return false;\n    };\n}\n/**\n * Union of two `ReadonlyRecord`s.\n * Takes two `ReadonlyRecord`s and produces a `ReadonlyRecord` combining all the\n * entries of the two inputs.\n * It uses the `concat` function of the provided `Magma` to\n * combine the elements with the same key.\n *\n * @example\n * import { union } from \"fp-ts/ReadonlyRecord\";\n * import { Magma } from \"fp-ts/Magma\";\n *\n * const m1: Magma<number> = { concat: (x: number, y: number) => x + y };\n * assert.deepStrictEqual(union(m1)({ a: 3, c: 3 })({ a: 1, b: 2 }), { a: 4, b: 2, c: 3 });\n * const m2: Magma<number> = { concat: (x: number) => x };\n * assert.deepStrictEqual(union(m2)({ a: 3, c: 3 })({ a: 1, b: 2 }), { a: 1, b: 2, c: 3 });\n *\n * @since 2.11.0\n */\nexport var union = function (M) {\n    return function (second) {\n        return function (first) {\n            if (isEmpty(first)) {\n                return second;\n            }\n            if (isEmpty(second)) {\n                return first;\n            }\n            var out = {};\n            for (var k in first) {\n                if (has(k, second)) {\n                    out[k] = M.concat(first[k], second[k]);\n                }\n                else {\n                    out[k] = first[k];\n                }\n            }\n            for (var k in second) {\n                if (!has(k, out)) {\n                    out[k] = second[k];\n                }\n            }\n            return out;\n        };\n    };\n};\n/**\n * Intersection of two `ReadonlyRecord`s.\n * Takes two `ReadonlyRecord`s and produces a `ReadonlyRecord` combining only the\n * entries of the two inputswith the same key.\n * It uses the `concat` function of the provided `Magma` to\n * combine the elements.\n *\n * @example\n * import { intersection } from \"fp-ts/ReadonlyRecord\";\n * import { Magma } from \"fp-ts/Magma\";\n *\n * const m1: Magma<number> = { concat: (x: number, y: number) => x + y };\n * assert.deepStrictEqual(intersection(m1)({ a: 3, c: 3 })({ a: 1, b: 2 }), { a: 4});\n * const m2: Magma<number> = { concat: (x: number) => x };\n * assert.deepStrictEqual(intersection(m2)({ a: 3, c: 3 })({ a: 1, b: 2 }), { a: 1});\n *\n * @since 2.11.0\n */\nexport var intersection = function (M) {\n    return function (second) {\n        return function (first) {\n            if (isEmpty(first) || isEmpty(second)) {\n                return empty;\n            }\n            var out = {};\n            for (var k in first) {\n                if (has(k, second)) {\n                    out[k] = M.concat(first[k], second[k]);\n                }\n            }\n            return out;\n        };\n    };\n};\n/**\n * Difference between two `ReadonlyRecord`s.\n * Takes two `ReadonlyRecord`s and produces a `ReadonlyRecord` composed by the\n * entries of the two inputs, removing the entries with the same\n * key in both inputs.\n *\n * @example\n * import { difference } from \"fp-ts/ReadonlyRecord\";\n *\n * assert.deepStrictEqual(difference({ a: 1 })({ a: 1, b: 2 }), { b: 2 });\n * assert.deepStrictEqual(difference({ a: 3 })({ a: 1, b: 2 }), { b: 2 });\n * assert.deepStrictEqual(difference({ a: 3, c: 3 })({ a: 1, b: 2 }), { b: 2, c: 3 });\n *\n * @since 2.11.0\n */\nexport var difference = function (second) {\n    return function (first) {\n        if (isEmpty(first)) {\n            return second;\n        }\n        if (isEmpty(second)) {\n            return first;\n        }\n        var out = {};\n        for (var k in first) {\n            if (!has(k, second)) {\n                out[k] = first[k];\n            }\n        }\n        for (var k in second) {\n            if (!has(k, first)) {\n                out[k] = second[k];\n            }\n        }\n        return out;\n    };\n};\n/** @internal */\nexport var _map = function (fa, f) { return pipe(fa, map(f)); };\n/** @internal */\n/* istanbul ignore next */\nexport var _mapWithIndex = function (fa, f) { return pipe(fa, mapWithIndex(f)); };\n/** @internal */\n/* istanbul ignore next */\nexport var _reduce = function (O) {\n    var reduceO = reduce(O);\n    return function (fa, b, f) { return pipe(fa, reduceO(b, f)); };\n};\n/** @internal */\nexport var _foldMap = function (O) { return function (M) {\n    var foldMapM = foldMap(O)(M);\n    return function (fa, f) { return pipe(fa, foldMapM(f)); };\n}; };\n/** @internal */\n/* istanbul ignore next */\nexport var _reduceRight = function (O) {\n    var reduceRightO = reduceRight(O);\n    return function (fa, b, f) { return pipe(fa, reduceRightO(b, f)); };\n};\n/** @internal */\n/* istanbul ignore next */\nexport var _filter = function (fa, predicate) {\n    return pipe(fa, filter(predicate));\n};\n/** @internal */\n/* istanbul ignore next */\nexport var _filterMap = function (fa, f) { return pipe(fa, filterMap(f)); };\n/** @internal */\n/* istanbul ignore next */\nexport var _partition = function (fa, predicate) { return pipe(fa, partition(predicate)); };\n/** @internal */\n/* istanbul ignore next */\nexport var _partitionMap = function (fa, f) { return pipe(fa, partitionMap(f)); };\n/** @internal */\n/* istanbul ignore next */\nexport var _reduceWithIndex = function (O) {\n    var reduceWithIndexO = reduceWithIndex(O);\n    return function (fa, b, f) { return pipe(fa, reduceWithIndexO(b, f)); };\n};\n/** @internal */\nexport var _foldMapWithIndex = function (O) {\n    var foldMapWithIndexO = foldMapWithIndex(O);\n    return function (M) {\n        var foldMapWithIndexM = foldMapWithIndexO(M);\n        return function (fa, f) { return pipe(fa, foldMapWithIndexM(f)); };\n    };\n};\n/** @internal */\n/* istanbul ignore next */\nexport var _reduceRightWithIndex = function (O) {\n    var reduceRightWithIndexO = reduceRightWithIndex(O);\n    return function (fa, b, f) { return pipe(fa, reduceRightWithIndexO(b, f)); };\n};\n/** @internal */\n/* istanbul ignore next */\nexport var _partitionMapWithIndex = function (fa, f) { return pipe(fa, partitionMapWithIndex(f)); };\n/** @internal */\n/* istanbul ignore next */\nexport var _partitionWithIndex = function (fa, predicateWithIndex) {\n    return pipe(fa, partitionWithIndex(predicateWithIndex));\n};\n/** @internal */\n/* istanbul ignore next */\nexport var _filterMapWithIndex = function (fa, f) { return pipe(fa, filterMapWithIndex(f)); };\n/** @internal */\n/* istanbul ignore next */\nexport var _filterWithIndex = function (fa, predicateWithIndex) { return pipe(fa, filterWithIndex(predicateWithIndex)); };\n/** @internal */\nexport var _traverse = function (O) {\n    var traverseWithIndexO = _traverseWithIndex(O);\n    return function (F) {\n        var traverseWithIndexOF = traverseWithIndexO(F);\n        return function (ta, f) { return traverseWithIndexOF(ta, flow(SK, f)); };\n    };\n};\n/** @internal */\nexport var _sequence = function (O) {\n    var traverseO = _traverse(O);\n    return function (F) {\n        var traverseOF = traverseO(F);\n        return function (ta) { return traverseOF(ta, identity); };\n    };\n};\nvar _traverseWithIndex = function (O) {\n    return function (F) {\n        var keysO = keys_(O);\n        return function (ta, f) {\n            var ks = keysO(ta);\n            if (ks.length === 0) {\n                return F.of(empty);\n            }\n            var fr = F.of({});\n            var _loop_1 = function (key) {\n                fr = F.ap(F.map(fr, function (r) { return function (b) {\n                    var _a;\n                    return Object.assign({}, r, (_a = {}, _a[key] = b, _a));\n                }; }), f(key, ta[key]));\n            };\n            for (var _i = 0, ks_1 = ks; _i < ks_1.length; _i++) {\n                var key = ks_1[_i];\n                _loop_1(key);\n            }\n            return fr;\n        };\n    };\n};\n/**\n * Given a `Predicate`, it produces a new `ReadonlyRecord` keeping only the entries with a\n * value that satisfies the provided predicate.\n *\n * @example\n * import { filter } from \"fp-ts/ReadonlyRecord\"\n *\n * assert.deepStrictEqual(filter((s: string) => s.length < 4)({ a: \"foo\", b: \"bar\", c: \"verylong\" }), {\n *   a: \"foo\",\n *   b: \"bar\",\n * });\n *\n * @category filtering\n * @since 2.5.0\n */\nexport var filter = function (predicate) {\n    return filterWithIndex(function (_, a) { return predicate(a); });\n};\n/**\n * Maps a `ReadonlyRecord` with an iterating function that returns an `Option`\n * and it keeps only the `Some` values discarding the `None`s.\n *\n * @example\n * import { filterMap } from \"fp-ts/ReadonlyRecord\"\n * import { option } from \"fp-ts\"\n *\n * const f = (s: string) => s.length < 4 ? option.some(`${s} is short`): option.none\n * assert.deepStrictEqual(filterMap(f)({ a: \"foo\", b: \"bar\", c: \"verylong\" }), {\n *   a: \"foo is short\",\n *   b: \"bar is short\",\n * });\n *\n * @category filtering\n * @since 2.5.0\n */\nexport var filterMap = function (f) { return filterMapWithIndex(function (_, a) { return f(a); }); };\n/**\n * Partition a `ReadonlyRecord` into two parts according to a `Predicate`.\n *\n * @example\n * import { partition } from \"fp-ts/ReadonlyRecord\"\n *\n * assert.deepStrictEqual(partition((s: string) => s.length < 4)({ a: \"foo\", b: \"bar\", c: \"verylong\" }), {\n *   left:{\n *     c: \"verylong\"\n *   },\n *   right: {\n *     a: \"foo\",\n *     b: \"bar\",\n *   },\n * });\n *\n * @category filtering\n * @since 2.5.0\n */\nexport var partition = function (predicate) {\n    return partitionWithIndex(function (_, a) { return predicate(a); });\n};\n/**\n * Maps a `ReadonlyRecord` with a function returning an `Either` and\n * partitions the resulting `ReadonlyRecord` into `Left`s and `Right`s.\n *\n * @example\n * import { partitionMap } from \"fp-ts/ReadonlyRecord\"\n * import { either } from \"fp-ts\"\n *\n * const f = (s: string) => (s.length < 4 ? either.right(`${s} is short`) : either.left(`${s} is not short`));\n * assert.deepStrictEqual(partitionMap(f)({ a: \"foo\", b: \"bar\", c: \"verylong\" }), {\n *   left: {\n *     c: \"verylong is not short\",\n *   },\n *   right: {\n *     a: \"foo is short\",\n *     b: \"bar is short\",\n *   },\n * });\n *\n * @category filtering\n * @since 2.5.0\n */\nexport var partitionMap = function (f) {\n    return partitionMapWithIndex(function (_, a) { return f(a); });\n};\nexport function reduce() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    if (args.length === 1) {\n        var reduceWithIndexO_1 = reduceWithIndex(args[0]);\n        return function (b, f) { return reduceWithIndexO_1(b, function (_, b, a) { return f(b, a); }); };\n    }\n    return reduce(S.Ord).apply(void 0, args);\n}\nexport function foldMap(O) {\n    if ('compare' in O) {\n        var foldMapWithIndexO_1 = foldMapWithIndex(O);\n        return function (M) {\n            var foldMapWithIndexM = foldMapWithIndexO_1(M);\n            return function (f) { return foldMapWithIndexM(function (_, a) { return f(a); }); };\n        };\n    }\n    return foldMap(S.Ord)(O);\n}\nexport function reduceRight() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    if (args.length === 1) {\n        var reduceRightWithIndexO_1 = reduceRightWithIndex(args[0]);\n        return function (b, f) { return reduceRightWithIndexO_1(b, function (_, b, a) { return f(b, a); }); };\n    }\n    return reduceRight(S.Ord).apply(void 0, args);\n}\n/**\n * Compact a `ReadonlyRecord` of `Option`s discarding the `None` values and\n * keeping the `Some` values.\n *\n * @example\n * import { compact } from 'fp-ts/ReadonlyRecord'\n * import { option } from 'fp-ts'\n *\n * assert.deepStrictEqual(compact({ a: option.some(\"foo\"), b: option.none, c: option.some(\"bar\") }), {\n *   a: \"foo\",\n *   c: \"bar\",\n * });\n *\n * @category filtering\n * @since 2.5.0\n */\nexport var compact = function (r) {\n    var out = {};\n    for (var k in r) {\n        if (_.has.call(r, k)) {\n            var oa = r[k];\n            if (_.isSome(oa)) {\n                out[k] = oa.value;\n            }\n        }\n    }\n    return out;\n};\n/**\n * Separate a `ReadonlyRecord` of `Either`s into `Left`s and `Right`s.\n *\n * @example\n * import { separate } from 'fp-ts/ReadonlyRecord'\n * import { either } from 'fp-ts'\n *\n * assert.deepStrictEqual(\n *   separate({ a: either.right(\"foo\"), b: either.left(\"bar\"), c: either.right(\"baz\") }),\n *   {\n *     right: {\n *       a: \"foo\",\n *       c: \"baz\",\n *     },\n *     left: {\n *       b: \"bar\",\n *     },\n *   }\n * );\n *\n * @category filtering\n * @since 2.5.0\n */\nexport var separate = function (r) {\n    var left = {};\n    var right = {};\n    for (var k in r) {\n        if (_.has.call(r, k)) {\n            var e = r[k];\n            if (_.isLeft(e)) {\n                left[k] = e.left;\n            }\n            else {\n                right[k] = e.right;\n            }\n        }\n    }\n    return separated(left, right);\n};\n/**\n * @category type lambdas\n * @since 2.5.0\n */\nexport var URI = 'ReadonlyRecord';\nexport function getShow(O) {\n    if ('compare' in O) {\n        return function (S) { return ({\n            show: function (r) {\n                var elements = collect(O)(function (k, a) { return \"\".concat(JSON.stringify(k), \": \").concat(S.show(a)); })(r).join(', ');\n                return elements === '' ? '{}' : \"{ \".concat(elements, \" }\");\n            }\n        }); };\n    }\n    return getShow(S.Ord)(O);\n}\nexport function getEq(E) {\n    var isSubrecordE = isSubrecord(E);\n    return fromEquals(function (x, y) { return isSubrecordE(x)(y) && isSubrecordE(y)(x); });\n}\nexport function getMonoid(S) {\n    return {\n        concat: function (first, second) {\n            if (isEmpty(first)) {\n                return second;\n            }\n            if (isEmpty(second)) {\n                return first;\n            }\n            var r = Object.assign({}, first);\n            for (var k in second) {\n                if (_.has.call(second, k)) {\n                    r[k] = _.has.call(first, k) ? S.concat(first[k], second[k]) : second[k];\n                }\n            }\n            return r;\n        },\n        empty: empty\n    };\n}\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: _map\n};\n/**\n * Takes a value and a `ReadonlyRecord` of functions and returns a\n * `ReadonlyRecord` by applying each function to the input value.\n *\n * @example\n * import { flap } from \"fp-ts/ReadonlyRecord\"\n *\n * const fab = { x: (n: number) => `${n} times 2`, y: (n: number) => `${n * 2}` };\n * assert.deepStrictEqual(flap(3)(fab), {\n *   x: \"3 times 2\",\n *   y: \"6\",\n * });\n *\n * @category mapping\n * @since 2.10.0\n */\nexport var flap = /*#__PURE__*/ flap_(Functor);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FunctorWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * Produces a `Foldable` instance for a `ReadonlyRecord`, using the\n * provided `Ord` to sort the `ReadonlyRecord`'s entries by key.\n *\n * @category folding\n * @since 2.11.0\n */\nexport var getFoldable = function (O) { return ({\n    URI: URI,\n    reduce: _reduce(O),\n    foldMap: _foldMap(O),\n    reduceRight: _reduceRight(O)\n}); };\n/**\n * Produces a `FoldableWithIndex1` instance for a `ReadonlyRecord`, using the\n * provided `Ord` to sort the `ReadonlyRecord`'s entries by key.\n *\n * @category folding\n * @since 2.11.0\n */\nexport var getFoldableWithIndex = function (O) { return ({\n    URI: URI,\n    reduce: _reduce(O),\n    foldMap: _foldMap(O),\n    reduceRight: _reduceRight(O),\n    reduceWithIndex: _reduceWithIndex(O),\n    foldMapWithIndex: _foldMapWithIndex(O),\n    reduceRightWithIndex: _reduceRightWithIndex(O)\n}); };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Compactable = {\n    URI: URI,\n    compact: compact,\n    separate: separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Filterable = {\n    URI: URI,\n    map: _map,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FilterableWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex\n};\n/**\n * Produces a `Traversable` instance for a `ReadonlyRecord`, using the\n * provided `Ord` to sort the `ReadonlyRecord`'s entries by key.\n *\n * @category traversing\n * @since 2.11.0\n */\nexport var getTraversable = function (O) { return ({\n    URI: URI,\n    map: _map,\n    reduce: _reduce(O),\n    foldMap: _foldMap(O),\n    reduceRight: _reduceRight(O),\n    traverse: _traverse(O),\n    sequence: _sequence(O)\n}); };\n/**\n * Produces a `TraversableWithIndex` instance for a `ReadonlyRecord`, using the\n * provided `Ord` to sort the `ReadonlyRecord`'s entries by key.\n *\n * @category traversing\n * @since 2.11.0\n */\nexport var getTraversableWithIndex = function (O) { return ({\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce(O),\n    foldMap: _foldMap(O),\n    reduceRight: _reduceRight(O),\n    reduceWithIndex: _reduceWithIndex(O),\n    foldMapWithIndex: _foldMapWithIndex(O),\n    reduceRightWithIndex: _reduceRightWithIndex(O),\n    traverse: _traverse(O),\n    sequence: _sequence(O),\n    traverseWithIndex: _traverseWithIndex(O)\n}); };\n/**\n * @category filtering\n * @since 2.11.0\n */\nexport var getWitherable = function (O) {\n    var T = getTraversable(O);\n    return {\n        URI: URI,\n        map: _map,\n        reduce: _reduce(O),\n        foldMap: _foldMap(O),\n        reduceRight: _reduceRight(O),\n        traverse: T.traverse,\n        sequence: T.sequence,\n        compact: compact,\n        separate: separate,\n        filter: _filter,\n        filterMap: _filterMap,\n        partition: _partition,\n        partitionMap: _partitionMap,\n        wither: witherDefault(T, Compactable),\n        wilt: wiltDefault(T, Compactable)\n    };\n};\n/**\n * Given a `Semigroup` in the base type, it produces a `Semigroup`\n * in the `ReadonlyRecord` of the base type.\n * The resulting `Semigroup` concatenates two `ReadonlyRecord`s by\n * `union`.\n *\n * @example\n * import { getUnionSemigroup, ReadonlyRecord } from \"fp-ts/ReadonlyRecord\"\n * import { Semigroup } from \"fp-ts/Semigroup\"\n *\n * const sNumber: Semigroup<number> = { concat: (x, y) => x - y };\n * const sReadonlyRecord: Semigroup<ReadonlyRecord<string, number>> = getUnionSemigroup(sNumber);\n * assert.deepStrictEqual(sReadonlyRecord.concat({ a: 1, b: 2 }, { b: 3, c: 4 }), { a: 1, b: -1, c: 4 });\n *\n * @category instances\n * @since 2.11.0\n */\nexport var getUnionSemigroup = function (S) {\n    var unionS = union(S);\n    return {\n        concat: function (first, second) { return unionS(second)(first); }\n    };\n};\n/**\n * Same as `getMonoid`.\n * Returns a `Monoid` instance for `ReadonlyRecord`s given a `Semigroup`\n * instance for the base type.\n * The `Monoid` makes the union of two `ReadonlyRecord`s combining the\n * entries that have the same key with the provided `Semigroup`.\n *\n * @example\n * import { SemigroupSum } from 'fp-ts/number'\n * import { getUnionMonoid } from 'fp-ts/ReadonlyRecord'\n *\n * const M = getUnionMonoid(SemigroupSum);\n * assert.deepStrictEqual(M.concat({ foo: 123, bar: 234 }, { foo: 456, baz: 567 }), { foo: 579 , bar: 234, baz: 567 });\n *\n * @category instances\n * @since 2.11.0\n */\nexport var getUnionMonoid = function (S) { return ({\n    concat: getUnionSemigroup(S).concat,\n    empty: empty\n}); };\n/**\n * Given a `Semigroup` in the base type, it produces a `Semigroup`\n * in the `ReadonlyRecord` of the base type.\n * The resulting `Semigroup` concatenates two `ReadonlyRecord`s by\n * `intersection`.\n *\n * @example\n * import { getIntersectionSemigroup, ReadonlyRecord } from \"fp-ts/ReadonlyRecord\"\n * import { Semigroup } from \"fp-ts/Semigroup\"\n *\n * const sNumber: Semigroup<number> = { concat: (x, y) => x - y };\n * const sReadonlyRecord: Semigroup<ReadonlyRecord<string, number>> = getIntersectionSemigroup(sNumber);\n * assert.deepStrictEqual(sReadonlyRecord.concat({ a: 1, b: 2 }, { b: 3, c: 4 }), { b: -1 });\n *\n * @category instances\n * @since 2.11.0\n */\nexport var getIntersectionSemigroup = function (S) {\n    var intersectionS = intersection(S);\n    return {\n        concat: function (first, second) { return intersectionS(second)(first); }\n    };\n};\n/**\n * Produces a `Magma` with a `concat` function that combines\n * two `ReadonlyRecord`s by making the `difference`.\n *\n * @example\n * import { getDifferenceMagma, difference, ReadonlyRecord } from \"fp-ts/ReadonlyRecord\"\n * import { Magma } from \"fp-ts/Magma\"\n *\n * const r1 = { a: 3, c: 3 };\n * const r2 = { a: 1, b: 2 };\n * const m: Magma<ReadonlyRecord<string, number>> = getDifferenceMagma<number>();\n * assert.deepStrictEqual(m.concat(r1, r2), difference(r2)(r1));\n * assert.deepStrictEqual(m.concat(r1, r2), { c: 3, b: 2 });\n *\n * @category instances\n * @since 2.11.0\n */\nexport var getDifferenceMagma = function () { return ({\n    concat: function (first, second) { return difference(second)(first); }\n}); };\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use `getFoldable` instead.\n *\n * @category zone of death\n * @since 2.7.0\n * @deprecated\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: /*#__PURE__*/ _reduce(S.Ord),\n    foldMap: /*#__PURE__*/ _foldMap(S.Ord),\n    reduceRight: /*#__PURE__*/ _reduceRight(S.Ord)\n};\n/**\n * Use `getFoldableWithIndex` instead.\n *\n * @category zone of death\n * @since 2.7.0\n * @deprecated\n */\nexport var FoldableWithIndex = {\n    URI: URI,\n    reduce: /*#__PURE__*/ _reduce(S.Ord),\n    foldMap: /*#__PURE__*/ _foldMap(S.Ord),\n    reduceRight: /*#__PURE__*/ _reduceRight(S.Ord),\n    reduceWithIndex: /*#__PURE__*/ _reduceWithIndex(S.Ord),\n    foldMapWithIndex: /*#__PURE__*/ _foldMapWithIndex(S.Ord),\n    reduceRightWithIndex: /*#__PURE__*/ _reduceRightWithIndex(S.Ord)\n};\n/**\n * Use `getTraversable` instead.\n *\n * @category zone of death\n * @since 2.7.0\n * @deprecated\n */\nexport var Traversable = {\n    URI: URI,\n    map: _map,\n    reduce: /*#__PURE__*/ _reduce(S.Ord),\n    foldMap: /*#__PURE__*/ _foldMap(S.Ord),\n    reduceRight: /*#__PURE__*/ _reduceRight(S.Ord),\n    traverse: /*#__PURE__*/ _traverse(S.Ord),\n    sequence: sequence\n};\n/**\n * Use `getTraversableWithIndex` instead.\n *\n * @category zone of death\n * @since 2.7.0\n * @deprecated\n */\nexport var TraversableWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: /*#__PURE__*/ _reduce(S.Ord),\n    foldMap: /*#__PURE__*/ _foldMap(S.Ord),\n    reduceRight: /*#__PURE__*/ _reduceRight(S.Ord),\n    reduceWithIndex: /*#__PURE__*/ _reduceWithIndex(S.Ord),\n    foldMapWithIndex: /*#__PURE__*/ _foldMapWithIndex(S.Ord),\n    reduceRightWithIndex: /*#__PURE__*/ _reduceRightWithIndex(S.Ord),\n    traverse: /*#__PURE__*/ _traverse(S.Ord),\n    sequence: sequence,\n    traverseWithIndex: /*#__PURE__*/ _traverseWithIndex(S.Ord)\n};\nvar _wither = /*#__PURE__*/ witherDefault(Traversable, Compactable);\nvar _wilt = /*#__PURE__*/ wiltDefault(Traversable, Compactable);\n/**\n * Use `getWitherable` instead.\n *\n * @category zone of death\n * @since 2.7.0\n * @deprecated\n */\nexport var Witherable = {\n    URI: URI,\n    map: _map,\n    reduce: /*#__PURE__*/ _reduce(S.Ord),\n    foldMap: /*#__PURE__*/ _foldMap(S.Ord),\n    reduceRight: /*#__PURE__*/ _reduceRight(S.Ord),\n    traverse: /*#__PURE__*/ _traverse(S.Ord),\n    sequence: sequence,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    wither: _wither,\n    wilt: _wilt\n};\n/**\n * Use [`upsertAt`](#upsertat) instead.\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var insertAt = upsertAt;\nexport function hasOwnProperty(k, r) {\n    return _.has.call(r === undefined ? this : r, k);\n}\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `RR.Functor` instead of `RR.readonlyRecord`\n * (where `RR` is from `import RR from 'fp-ts/ReadonlyRecord'`)\n *\n * @category zone of death\n * @since 2.5.0\n * @deprecated\n */\nexport var readonlyRecord = {\n    URI: URI,\n    map: _map,\n    reduce: /*#__PURE__*/ _reduce(S.Ord),\n    foldMap: /*#__PURE__*/ _foldMap(S.Ord),\n    reduceRight: /*#__PURE__*/ _reduceRight(S.Ord),\n    traverse: /*#__PURE__*/ _traverse(S.Ord),\n    sequence: sequence,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    mapWithIndex: _mapWithIndex,\n    reduceWithIndex: /*#__PURE__*/ _reduceWithIndex(S.Ord),\n    foldMapWithIndex: /*#__PURE__*/ _foldMapWithIndex(S.Ord),\n    reduceRightWithIndex: /*#__PURE__*/ _reduceRightWithIndex(S.Ord),\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    traverseWithIndex: /*#__PURE__*/ _traverseWithIndex(S.Ord),\n    wither: _wither,\n    wilt: _wilt\n};\n", "var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as A from './Array';\nimport { pipe } from './function';\nimport { flap as flap_ } from './Functor';\nimport * as _ from './internal';\nimport * as RR from './ReadonlyRecord';\nimport * as Se from './Semigroup';\nimport * as S from './string';\nimport { wiltDefault, witherDefault } from './Witherable';\n// -------------------------------------------------------------------------------------\n// model\n// -------------------------------------------------------------------------------------\n/**\n * Calculate the number of key/value pairs in a `Record`.\n *\n * @example\n * import { size } from \"fp-ts/Record\";\n *\n * assert.deepStrictEqual(size({ a: true, b: 2, c: \"three\" }), 3);\n *\n * @since 2.0.0\n */\nexport var size = RR.size;\n/**\n * Test whether a `Record` is empty.\n *\n * @example\n * import { isEmpty } from \"fp-ts/Record\";\n *\n * assert.deepStrictEqual(isEmpty({}), true);\n * assert.deepStrictEqual(isEmpty({ a: 3 }), false);\n *\n * @since 2.0.0\n */\nexport var isEmpty = RR.isEmpty;\nvar keys_ = function (O) {\n    return function (r) {\n        return Object.keys(r).sort(O.compare);\n    };\n};\n/**\n * The keys of a `Record`, sorted alphabetically.\n *\n * @example\n * import { keys } from \"fp-ts/Record\";\n *\n * assert.deepStrictEqual(keys({ c: 1, a: 2, b: 3 }), [\"a\", \"b\", \"c\"]);\n *\n * @since 2.0.0\n */\nexport var keys = /*#__PURE__*/ keys_(S.Ord);\nexport function collect(O) {\n    if (typeof O === 'function') {\n        return collect(S.Ord)(O);\n    }\n    var keysO = keys_(O);\n    return function (f) {\n        return function (r) {\n            var out = [];\n            for (var _i = 0, _a = keysO(r); _i < _a.length; _i++) {\n                var key = _a[_i];\n                out.push(f(key, r[key]));\n            }\n            return out;\n        };\n    };\n}\n/**\n * Get a sorted `Array` of the key/value pairs contained in a `Record`.\n * Sorted alphabetically by key.\n *\n * @example\n * import { toArray } from 'fp-ts/Record'\n *\n * const x = { c: 3, a: \"foo\", b: false };\n * assert.deepStrictEqual(toArray(x), [\n *   [\"a\", \"foo\"],\n *   [\"b\", false],\n *   [\"c\", 3],\n * ]);\n *\n * @category conversions\n * @since 2.0.0\n */\nexport var toArray = /*#__PURE__*/ collect(S.Ord)(function (k, a) { return [\n    k,\n    a\n]; });\nexport function toUnfoldable(U) {\n    return function (r) {\n        var sas = toArray(r);\n        var len = sas.length;\n        return U.unfold(0, function (b) { return (b < len ? _.some([sas[b], b + 1]) : _.none); });\n    };\n}\n/**\n * Insert or replace a key/value pair in a `Record`.\n *\n * @example\n * import { upsertAt } from 'fp-ts/Record'\n *\n * assert.deepStrictEqual(upsertAt(\"a\", 5)({ a: 1, b: 2 }), { a: 5, b: 2 });\n * assert.deepStrictEqual(upsertAt(\"c\", 5)({ a: 1, b: 2 }), { a: 1, b: 2, c: 5 });\n *\n * @since 2.10.0\n */\nexport var upsertAt = RR.upsertAt;\n/**\n * Test whether or not a key exists in a `Record`.\n *\n * Note. This function is not pipeable because is a `Refinement`.\n *\n * @example\n * import { has } from 'fp-ts/Record'\n *\n * assert.deepStrictEqual(has(\"a\", { a: 1, b: 2 }), true);\n * assert.deepStrictEqual(has(\"c\", { a: 1, b: 2 }), false);\n *\n * @since 2.10.0\n */\nexport var has = RR.has;\nexport function deleteAt(k) {\n    return function (r) {\n        if (!_.has.call(r, k)) {\n            return r;\n        }\n        var out = Object.assign({}, r);\n        delete out[k];\n        return out;\n    };\n}\n/**\n * Replace a key/value pair in a `Record`.\n *\n * @returns If the specified key exists it returns an `Option` containing a new `Record`\n * with the entry updated, otherwise it returns `None`\n *\n * @example\n * import { updateAt } from 'fp-ts/Record'\n * import { option } from 'fp-ts'\n *\n * assert.deepStrictEqual(updateAt(\"a\", 3)({ a: 1, b: 2 }), option.some({ a: 3, b: 2 }));\n * assert.deepStrictEqual(updateAt(\"c\", 3)({ a: 1, b: 2 }), option.none);\n *\n * @since 2.0.0\n */\nexport var updateAt = function (k, a) {\n    return modifyAt(k, function () { return a; });\n};\n/**\n * Applies a mapping function to one spcific key/value pair in a `Record`.\n *\n * @returns If the specified key exists it returns an `Option` containing a new `Record`\n * with the entry updated, otherwise it returns `None`\n *\n * @example\n * import { modifyAt } from 'fp-ts/Record'\n * import { option } from 'fp-ts'\n *\n * assert.deepStrictEqual(modifyAt(\"a\", (x: number) => x * 3)({ a: 1, b: 2 }), option.some({ a: 3, b: 2 }));\n * assert.deepStrictEqual(modifyAt(\"c\", (x: number) => x * 3)({ a: 1, b: 2 }), option.none);\n *\n * @since 2.0.0\n */\nexport var modifyAt = function (k, f) {\n    return function (r) {\n        if (!has(k, r)) {\n            return _.none;\n        }\n        var out = Object.assign({}, r);\n        out[k] = f(r[k]);\n        return _.some(out);\n    };\n};\nexport function pop(k) {\n    var deleteAtk = deleteAt(k);\n    return function (r) {\n        var oa = lookup(k, r);\n        return _.isNone(oa) ? _.none : _.some([oa.value, deleteAtk(r)]);\n    };\n}\n// TODO: remove non-curried overloading in v3\n/**\n * Test whether one `Record` contains all of the keys and values\n * contained in another `Record`.\n *\n * @example\n * import { isSubrecord } from 'fp-ts/Record'\n * import { string } from 'fp-ts'\n *\n * assert.deepStrictEqual(\n *   isSubrecord(string.Eq)({ a: \"foo\", b: \"bar\", c: \"baz\" })({ a: \"foo\", b: \"bar\", c: \"baz\" }),\n *   true\n * );\n * assert.deepStrictEqual(\n *   isSubrecord(string.Eq)({ a: \"foo\", b: \"bar\", c: \"baz\" })({ a: \"foo\", c: \"baz\" }),\n *   true\n * );\n * assert.deepStrictEqual(\n *   isSubrecord(string.Eq)({ a: \"foo\", b: \"bar\", c: \"baz\" })({ a: \"foo\", b: \"not-bar\", c: \"baz\" }),\n *   false\n * );\n * assert.deepStrictEqual(\n *   isSubrecord(string.Eq)({ a: \"foo\", b: \"bar\" })({ a: \"foo\", b: \"bar\", c: \"baz\" }),\n *   false\n * );\n *\n * @since 2.0.0\n */\nexport var isSubrecord = RR.isSubrecord;\n// TODO: remove non-curried overloading in v3\n/**\n * Lookup the value for a key in a `Record`.\n *\n * @returns If the specified key exists it returns an `Option` containing the value,\n * otherwise it returns `None`\n *\n * @example\n * import { lookup } from 'fp-ts/Record'\n * import { option } from 'fp-ts'\n *\n * assert.deepStrictEqual(lookup(\"b\")({ a: \"foo\", b: \"bar\" }), option.some(\"bar\"));\n * assert.deepStrictEqual(lookup(\"c\")({ a: \"foo\", b: \"bar\" }), option.none);\n *\n * @since 2.0.0\n */\nexport var lookup = RR.lookup;\n/**\n * Map a `Record` passing the key/value pairs to the iterating function.\n *\n * @example\n * import { mapWithIndex } from \"fp-ts/Record\";\n *\n * const f = (k: string, n: number) => `${k.toUpperCase()}-${n}`;\n * assert.deepStrictEqual(mapWithIndex(f)({ a: 3, b: 5 }), { a: \"A-3\", b: \"B-5\" });\n *\n * @since 2.0.0\n */\nexport var mapWithIndex = RR.mapWithIndex;\n/**\n * Map a `Record` passing the values to the iterating function.\n *\n * @example\n * import { map } from \"fp-ts/Record\";\n *\n * const f = (n: number) => `-${n}-`;\n * assert.deepStrictEqual(map(f)({ a: 3, b: 5 }), { a: \"-3-\", b: \"-5-\" });\n *\n * @category mapping\n * @since 2.0.0\n */\nexport var map = RR.map;\nexport function reduceWithIndex() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return args.length === 1 ? RR.reduceWithIndex(args[0]) : RR.reduceWithIndex(S.Ord).apply(void 0, args);\n}\nexport function foldMapWithIndex(O) {\n    return 'compare' in O ? RR.foldMapWithIndex(O) : RR.foldMapWithIndex(S.Ord)(O);\n}\nexport function reduceRightWithIndex() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return args.length === 1 ? RR.reduceRightWithIndex(args[0]) : RR.reduceRightWithIndex(S.Ord).apply(void 0, args);\n}\n/**\n * Create a `Record` with one key/value pair.\n *\n * @example\n * import { singleton } from \"fp-ts/Record\";\n *\n * assert.deepStrictEqual(singleton(\"a\", 1), { a: 1 });\n *\n * @since 2.0.0\n */\nexport var singleton = RR.singleton;\nexport function traverseWithIndex(F) {\n    return RR.traverseWithIndex(F);\n}\nexport function traverse(F) {\n    return RR.traverse(F);\n}\nexport function sequence(F) {\n    return RR.sequence(F);\n}\n/**\n * @category filtering\n * @since 2.6.5\n */\nexport var wither = function (F) {\n    var traverseF = traverse(F);\n    return function (f) { return function (fa) { return F.map(pipe(fa, traverseF(f)), compact); }; };\n};\n/**\n * @category filtering\n * @since 2.6.5\n */\nexport var wilt = function (F) {\n    var traverseF = traverse(F);\n    return function (f) { return function (fa) { return F.map(pipe(fa, traverseF(f)), separate); }; };\n};\n/**\n * Maps a `Record` with a function returning an `Either` and\n * partitions the resulting `Record` into `Left`s and `Right`s.\n *\n * @example\n * import { partitionMapWithIndex } from \"fp-ts/Record\"\n * import { either } from \"fp-ts\"\n *\n * const f = (key: string, a: number) =>\n *   a >= 0 ? either.right(`${key} is >= 0 (${a})`) : either.left(`${key} is < 0 (${a})`);\n * assert.deepStrictEqual(partitionMapWithIndex(f)({ a: -1, b: 2, c: 123 }), {\n *   left: {\n *     a: \"a is < 0 (-1)\",\n *   },\n *   right: {\n *     b: \"b is >= 0 (2)\",\n *     c: \"c is >= 0 (123)\",\n *   },\n * });\n *\n * @since 2.0.0\n */\nexport var partitionMapWithIndex = RR.partitionMapWithIndex;\nexport function partitionWithIndex(predicateWithIndex) {\n    return RR.partitionWithIndex(predicateWithIndex);\n}\n/**\n * Maps a `Record` with an iterating function that takes key and value and\n * returns an `Option`, keeping only the `Some` values and discarding `None`s.\n *\n * @example\n * import { filterMapWithIndex } from \"fp-ts/Record\"\n * import { option } from \"fp-ts\"\n *\n * const f = (key: string, a: number) => (a >= 0 ? option.some(`${key}${a}`) : option.none);\n * assert.deepStrictEqual(filterMapWithIndex(f)({ a: -1, b: 2, c: 3 }), {\n *   b: \"b2\",\n *   c: \"c3\",\n * });\n *\n * @since 2.0.0\n */\nexport var filterMapWithIndex = RR.filterMapWithIndex;\nexport function filterWithIndex(predicateWithIndex) {\n    return RR.filterWithIndex(predicateWithIndex);\n}\nexport function fromFoldable(M, F) {\n    return RR.fromFoldable(M, F);\n}\n/**\n * Alias of [`toArray`](#toArray).\n *\n * @example\n * import { toEntries } from 'fp-ts/Record'\n *\n * assert.deepStrictEqual(toEntries({ b: 2, a: 1 }), [['a', 1], ['b', 2]])\n *\n * @since 2.12.0\n * @category conversions\n */\nexport var toEntries = toArray;\n/**\n * Converts an `Array` of `[key, value]` tuples into a `Record`.\n *\n * @example\n * import { fromEntries } from 'fp-ts/Record'\n *\n * assert.deepStrictEqual(fromEntries([['a', 1], ['b', 2], ['a', 3]]), { b: 2, a: 3 })\n *\n * @since 2.12.0\n * @category conversions\n */\nexport var fromEntries = function (fa) { return fromFoldable(Se.last(), A.Foldable)(fa); };\nexport function fromFoldableMap(M, F) {\n    return RR.fromFoldableMap(M, F);\n}\n/**\n * Test if every value in a `Record` satisfies the predicate.\n *\n * @example\n * import { every } from \"fp-ts/Record\"\n *\n * assert.deepStrictEqual(every((n: number) => n >= 0)({ a: 1, b: 2 }), true);\n * assert.deepStrictEqual(every((n: number) => n >= 0)({ a: 1, b: -1 }), false);\n *\n * @since 2.0.0\n */\nexport var every = RR.every;\n/**\n * Test if at least one value in a `Record` satisfies the predicate.\n *\n * @example\n * import { some } from \"fp-ts/Record\"\n *\n * assert.deepStrictEqual(some((n: number) => n >= 0)({ a: 1, b: -2 }), true);\n * assert.deepStrictEqual(some((n: number) => n >= 0)({ a: -1, b: -2 }), false);\n *\n * @since 2.0.0\n */\nexport var some = RR.some;\n// TODO: remove non-curried overloading in v3\n/**\n * Given an `Eq` checks if a `Record` contains an entry with\n * value equal to a provided value.\n *\n * @example\n * import { elem } from \"fp-ts/Record\"\n * import { number } from \"fp-ts\"\n *\n * assert.deepStrictEqual(elem(number.Eq)(123, { foo: 123, bar: 234 }), true);\n * assert.deepStrictEqual(elem(number.Eq)(-7, { foo: 123, bar: 234 }), false);\n *\n * @since 2.0.0\n */\nexport var elem = RR.elem;\n/**\n * Union of two `Record`s.\n * Takes two `Record`s and produces a `Record` combining all the\n * entries of the two inputs.\n * It uses the `concat` function of the provided `Magma` to\n * combine the elements with the same key.\n *\n * @example\n * import { union } from \"fp-ts/Record\";\n * import { Magma } from \"fp-ts/Magma\";\n *\n * const m1: Magma<number> = { concat: (x: number, y: number) => x + y };\n * assert.deepStrictEqual(union(m1)({ a: 3, c: 3 })({ a: 1, b: 2 }), { a: 4, b: 2, c: 3 });\n * const m2: Magma<number> = { concat: (x: number) => x };\n * assert.deepStrictEqual(union(m2)({ a: 3, c: 3 })({ a: 1, b: 2 }), { a: 1, b: 2, c: 3 });\n *\n * @since 2.11.0\n */\nexport var union = function (M) {\n    var unionM = RR.union(M);\n    return function (second) { return function (first) {\n        if (isEmpty(first)) {\n            return __assign({}, second);\n        }\n        if (isEmpty(second)) {\n            return __assign({}, first);\n        }\n        return unionM(second)(first);\n    }; };\n};\n/**\n * Intersection of two `Record`s.\n * Takes two `Record`s and produces a `Record` combining only the\n * entries of the two inputswith the same key.\n * It uses the `concat` function of the provided `Magma` to\n * combine the elements.\n *\n * @example\n * import { intersection } from \"fp-ts/Record\";\n * import { Magma } from \"fp-ts/Magma\";\n *\n * const m1: Magma<number> = { concat: (x: number, y: number) => x + y };\n * assert.deepStrictEqual(intersection(m1)({ a: 3, c: 3 })({ a: 1, b: 2 }), { a: 4});\n * const m2: Magma<number> = { concat: (x: number) => x };\n * assert.deepStrictEqual(intersection(m2)({ a: 3, c: 3 })({ a: 1, b: 2 }), { a: 1});\n *\n * @since 2.11.0\n */\nexport var intersection = function (M) {\n    return function (second) {\n        return function (first) {\n            if (isEmpty(first) || isEmpty(second)) {\n                return {};\n            }\n            return RR.intersection(M)(second)(first);\n        };\n    };\n};\n/**\n * Difference between two `Record`s.\n * Takes two `Record`s and produces a `Record` composed by the\n * entries of the two inputs, removing the entries with the same\n * key in both inputs.\n *\n * @example\n * import { difference } from \"fp-ts/Record\";\n *\n * assert.deepStrictEqual(difference({ a: 1 })({ a: 1, b: 2 }), { b: 2 });\n * assert.deepStrictEqual(difference({ a: 3 })({ a: 1, b: 2 }), { b: 2 });\n * assert.deepStrictEqual(difference({ a: 3, c: 3 })({ a: 1, b: 2 }), { b: 2, c: 3 });\n *\n * @since 2.11.0\n */\nexport var difference = function (second) {\n    return function (first) {\n        if (isEmpty(first)) {\n            return __assign({}, second);\n        }\n        if (isEmpty(second)) {\n            return __assign({}, first);\n        }\n        return RR.difference(second)(first);\n    };\n};\nvar _map = RR._map;\nvar _mapWithIndex = RR._mapWithIndex;\nvar _reduce = RR._reduce;\nvar _foldMap = RR._foldMap;\nvar _reduceRight = RR._reduceRight;\nvar _filter = RR._filter;\nvar _filterMap = RR._filterMap;\nvar _partition = RR._partition;\nvar _partitionMap = RR._partitionMap;\nvar _reduceWithIndex = RR._reduceWithIndex;\nvar _foldMapWithIndex = RR._foldMapWithIndex;\nvar _reduceRightWithIndex = RR._reduceRightWithIndex;\nvar _partitionMapWithIndex = RR._partitionMapWithIndex;\nvar _partitionWithIndex = RR._partitionWithIndex;\nvar _filterMapWithIndex = RR._filterMapWithIndex;\nvar _filterWithIndex = RR._filterWithIndex;\nvar _traverse = RR._traverse;\nvar _sequence = RR._sequence;\nvar _traverseWithIndex = function (O) {\n    return function (F) {\n        var keysO = keys_(O);\n        return function (ta, f) {\n            var ks = keysO(ta);\n            if (ks.length === 0) {\n                return F.of({});\n            }\n            var fr = F.of({});\n            var _loop_1 = function (key) {\n                fr = F.ap(F.map(fr, function (r) { return function (b) {\n                    r[key] = b;\n                    return r;\n                }; }), f(key, ta[key]));\n            };\n            for (var _i = 0, ks_1 = ks; _i < ks_1.length; _i++) {\n                var key = ks_1[_i];\n                _loop_1(key);\n            }\n            return fr;\n        };\n    };\n};\n/**\n * Given a `Predicate`, it produces a new `Record` keeping only the entries with a\n * value that satisfies the provided predicate.\n *\n * @example\n * import { filter } from \"fp-ts/Record\"\n *\n * assert.deepStrictEqual(filter((s: string) => s.length < 4)({ a: \"foo\", b: \"bar\", c: \"verylong\" }), {\n *   a: \"foo\",\n *   b: \"bar\",\n * });\n *\n * @category filtering\n * @since 2.0.0\n */\nexport var filter = RR.filter;\n/**\n * Maps a `Record` with an iterating function that returns an `Option`\n * and it keeps only the `Some` values discarding the `None`s.\n *\n * @example\n * import { filterMap } from \"fp-ts/Record\"\n * import { option } from \"fp-ts\"\n *\n * const f = (s: string) => s.length < 4 ? option.some(`${s} is short`): option.none\n * assert.deepStrictEqual(filterMap(f)({ a: \"foo\", b: \"bar\", c: \"verylong\" }), {\n *   a: \"foo is short\",\n *   b: \"bar is short\",\n * });\n *\n * @category filtering\n * @since 2.0.0\n */\nexport var filterMap = RR.filterMap;\n/**\n * Partition a `Record` into two parts according to a `Predicate`.\n *\n * @example\n * import { partition } from \"fp-ts/Record\"\n *\n * assert.deepStrictEqual(partition((s: string) => s.length < 4)({ a: \"foo\", b: \"bar\", c: \"verylong\" }), {\n *   left:{\n *     c: \"verylong\"\n *   },\n *   right: {\n *     a: \"foo\",\n *     b: \"bar\",\n *   },\n * });\n *\n * @category filtering\n * @since 2.0.0\n */\nexport var partition = RR.partition;\n/**\n * Maps a `Record` with a function returning an `Either` and\n * partitions the resulting `Record` into `Left`s and `Right`s.\n *\n * @example\n * import { partitionMap } from \"fp-ts/Record\"\n * import { either } from \"fp-ts\"\n *\n * const f = (s: string) => (s.length < 4 ? either.right(`${s} is short`) : either.left(`${s} is not short`));\n * assert.deepStrictEqual(partitionMap(f)({ a: \"foo\", b: \"bar\", c: \"verylong\" }), {\n *   left: {\n *     c: \"verylong is not short\",\n *   },\n *   right: {\n *     a: \"foo is short\",\n *     b: \"bar is short\",\n *   },\n * });\n *\n * @category filtering\n * @since 2.0.0\n */\nexport var partitionMap = RR.partitionMap;\nexport function reduce() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return args.length === 1 ? RR.reduce(args[0]) : RR.reduce(S.Ord).apply(void 0, args);\n}\nexport function foldMap(O) {\n    return 'compare' in O ? RR.foldMap(O) : RR.foldMap(S.Ord)(O);\n}\nexport function reduceRight() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return args.length === 1 ? RR.reduceRight(args[0]) : RR.reduceRight(S.Ord).apply(void 0, args);\n}\n/**\n * Compact a `Record` of `Option`s discarding the `None` values and\n * keeping the `Some` values.\n *\n * @example\n * import { compact } from 'fp-ts/Record'\n * import { option } from 'fp-ts'\n *\n * assert.deepStrictEqual(compact({ a: option.some(\"foo\"), b: option.none, c: option.some(\"bar\") }), {\n *   a: \"foo\",\n *   c: \"bar\",\n * });\n *\n * @category filtering\n * @since 2.0.0\n */\nexport var compact = RR.compact;\n/**\n * Separate a `Record` of `Either`s into `Left`s and `Right`s.\n *\n * @example\n * import { separate } from 'fp-ts/Record'\n * import { either } from 'fp-ts'\n *\n * assert.deepStrictEqual(\n *   separate({ a: either.right(\"foo\"), b: either.left(\"bar\"), c: either.right(\"baz\") }),\n *   {\n *     right: {\n *       a: \"foo\",\n *       c: \"baz\",\n *     },\n *     left: {\n *       b: \"bar\",\n *     },\n *   }\n * );\n *\n * @category filtering\n * @since 2.0.0\n */\nexport var separate = RR.separate;\n/**\n * @category type lambdas\n * @since 2.0.0\n */\nexport var URI = 'Record';\nexport function getShow(O) {\n    return 'compare' in O ? RR.getShow(O) : RR.getShow(S.Ord)(O);\n}\n/**\n * Given an `Eq` for the base type, it produces an `Eq`\n * for a `Record` of that base type.\n *\n * @example\n * import { getEq } from \"fp-ts/Record\";\n * import { string } from \"fp-ts\";\n * import { Eq } from \"fp-ts/Eq\";\n *\n * const eq: Eq<Record<string, string>> = getEq(string.Eq);\n * assert.deepStrictEqual(eq.equals({ a: \"foo\" }, { b: \"bar\" }), false);\n * assert.deepStrictEqual(eq.equals({ a: \"foo\" }, { a: \"foo\" }), true);\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getEq = RR.getEq;\n/**\n * Returns a `Monoid` instance for `Record`s, given a `Semigroup`\n * instance for the base type.\n * The `Monoid` makes the union of two `Record`s comining the\n * overlapping entries with the provided `Semigroup`.\n *\n * @example\n * import { SemigroupSum } from 'fp-ts/number'\n * import { getMonoid } from 'fp-ts/Record'\n *\n * const M = getMonoid(SemigroupSum);\n * assert.deepStrictEqual(M.concat({ foo: 123, bar: 234 }, { foo: 456, baz: 567 }), { foo: 579 , bar: 234, baz: 567 });\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getMonoid = RR.getMonoid;\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: _map\n};\n/**\n * Takes a value and a `Record` of functions and returns a\n * `Record` by applying each function to the input value.\n *\n * @example\n * import { flap } from \"fp-ts/Record\"\n *\n * const fab = { x: (n: number) => `${n} times 2`, y: (n: number) => `${n * 2}` };\n * assert.deepStrictEqual(flap(3)(fab), {\n *   x: \"3 times 2\",\n *   y: \"6\",\n * });\n *\n * @category mapping\n * @since 2.10.0\n */\nexport var flap = /*#__PURE__*/ flap_(Functor);\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FunctorWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex\n};\n/**\n * Produces a `Foldable` instance for a `Record`, using the\n * provided `Ord` to sort the `Record`'s entries by key.\n *\n * @category folding\n * @since 2.11.0\n */\nexport var getFoldable = function (O) { return ({\n    URI: URI,\n    reduce: _reduce(O),\n    foldMap: _foldMap(O),\n    reduceRight: _reduceRight(O)\n}); };\n/**\n * Produces a `FoldableWithIndex1` instance for a `Record`, using the\n * provided `Ord` to sort the `Record`'s entries by key.\n *\n * @category folding\n * @since 2.11.0\n */\nexport var getFoldableWithIndex = function (O) { return ({\n    URI: URI,\n    reduce: _reduce(O),\n    foldMap: _foldMap(O),\n    reduceRight: _reduceRight(O),\n    reduceWithIndex: _reduceWithIndex(O),\n    foldMapWithIndex: _foldMapWithIndex(O),\n    reduceRightWithIndex: _reduceRightWithIndex(O)\n}); };\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Compactable = {\n    URI: URI,\n    compact: compact,\n    separate: separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Filterable = {\n    URI: URI,\n    map: _map,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FilterableWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex\n};\n/**\n * Produces a `Traversable` instance for a `Record`, using the\n * provided `Ord` to sort the `Record`'s entries by key.\n *\n * @category traversing\n * @since 2.11.0\n */\nexport var getTraversable = function (O) { return ({\n    URI: URI,\n    map: _map,\n    reduce: _reduce(O),\n    foldMap: _foldMap(O),\n    reduceRight: _reduceRight(O),\n    traverse: _traverse(O),\n    sequence: _sequence(O)\n}); };\n/**\n * Produces a `TraversableWithIndex` instance for a `Record`, using the\n * provided `Ord` to sort the `Record`'s entries by key.\n *\n * @category traversing\n * @since 2.11.0\n */\nexport var getTraversableWithIndex = function (O) { return ({\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: _reduce(O),\n    foldMap: _foldMap(O),\n    reduceRight: _reduceRight(O),\n    reduceWithIndex: _reduceWithIndex(O),\n    foldMapWithIndex: _foldMapWithIndex(O),\n    reduceRightWithIndex: _reduceRightWithIndex(O),\n    traverse: _traverse(O),\n    sequence: _sequence(O),\n    traverseWithIndex: _traverseWithIndex(O)\n}); };\n/**\n * @category filtering\n * @since 2.11.0\n */\nexport var getWitherable = function (O) {\n    var T = getTraversable(O);\n    return {\n        URI: URI,\n        map: _map,\n        reduce: _reduce(O),\n        foldMap: _foldMap(O),\n        reduceRight: _reduceRight(O),\n        traverse: T.traverse,\n        sequence: T.sequence,\n        compact: compact,\n        separate: separate,\n        filter: _filter,\n        filterMap: _filterMap,\n        partition: _partition,\n        partitionMap: _partitionMap,\n        wither: witherDefault(T, Compactable),\n        wilt: wiltDefault(T, Compactable)\n    };\n};\n/**\n * Given a `Semigroup` in the base type, it produces a `Semigroup`\n * in the `Record` of the base type.\n * The resulting `Semigroup` concatenates two `Record`s by\n * `union`.\n *\n * @example\n * import { getUnionSemigroup } from \"fp-ts/Record\"\n * import { Semigroup } from \"fp-ts/Semigroup\"\n *\n * const sNumber: Semigroup<number> = { concat: (x, y) => x - y };\n * const sRecord: Semigroup<Record<string, number>> = getUnionSemigroup(sNumber);\n * assert.deepStrictEqual(sRecord.concat({ a: 1, b: 2 }, { b: 3, c: 4 }), { a: 1, b: -1, c: 4 });\n *\n * @category instances\n * @since 2.11.0\n */\nexport var getUnionSemigroup = function (S) {\n    var unionS = union(S);\n    return {\n        concat: function (first, second) { return unionS(second)(first); }\n    };\n};\n/**\n * Same as `getMonoid`.\n * Returns a `Monoid` instance for `Record`s given a `Semigroup`\n * instance for the base type.\n * The `Monoid` makes the union of two `Record`s combining the\n * entries that have the same key with the provided `Semigroup`.\n *\n * @example\n * import { SemigroupSum } from 'fp-ts/number'\n * import { getUnionMonoid } from 'fp-ts/Record'\n *\n * const M = getUnionMonoid(SemigroupSum);\n * assert.deepStrictEqual(M.concat({ foo: 123, bar: 234 }, { foo: 456, baz: 567 }), { foo: 579 , bar: 234, baz: 567 });\n *\n * @category instances\n * @since 2.11.0\n */\nexport var getUnionMonoid = function (S) { return ({\n    concat: getUnionSemigroup(S).concat,\n    empty: {}\n}); };\n/**\n * Given a `Semigroup` in the base type, it produces a `Semigroup`\n * in the `Record` of the base type.\n * The resulting `Semigroup` concatenates two `Record`s by\n * `intersection`.\n *\n * @example\n * import { getIntersectionSemigroup } from \"fp-ts/Record\"\n * import { Semigroup } from \"fp-ts/Semigroup\"\n *\n * const sNumber: Semigroup<number> = { concat: (x, y) => x - y };\n * const sRecord: Semigroup<Record<string, number>> = getIntersectionSemigroup(sNumber);\n * assert.deepStrictEqual(sRecord.concat({ a: 1, b: 2 }, { b: 3, c: 4 }), { b: -1 });\n *\n * @category instances\n * @since 2.11.0\n */\nexport var getIntersectionSemigroup = function (S) {\n    var intersectionS = intersection(S);\n    return {\n        concat: function (first, second) { return intersectionS(second)(first); }\n    };\n};\n/**\n * Produces a `Magma` with a `concat` function that combines\n * two `Record`s by making the `difference`.\n *\n * @example\n * import { getDifferenceMagma, difference } from \"fp-ts/Record\"\n * import { Magma } from \"fp-ts/Magma\"\n *\n * const r1 = { a: 3, c: 3 };\n * const r2 = { a: 1, b: 2 };\n * const m: Magma<Record<string, number>> = getDifferenceMagma<number>();\n * assert.deepStrictEqual(m.concat(r1, r2), difference(r2)(r1));\n * assert.deepStrictEqual(m.concat(r1, r2), { c: 3, b: 2 });\n *\n * @category instances\n * @since 2.11.0\n */\nexport var getDifferenceMagma = function () { return ({\n    concat: function (first, second) { return difference(second)(first); }\n}); };\n// -------------------------------------------------------------------------------------\n// deprecated\n// -------------------------------------------------------------------------------------\n/**\n * Use `getFoldable` instead.\n *\n * @category zone of death\n * @since 2.7.0\n * @deprecated\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: /*#__PURE__*/ _reduce(S.Ord),\n    foldMap: /*#__PURE__*/ _foldMap(S.Ord),\n    reduceRight: /*#__PURE__*/ _reduceRight(S.Ord)\n};\n/**\n * Use `getFoldableWithIndex` instead.\n *\n * @category zone of death\n * @since 2.7.0\n * @deprecated\n */\nexport var FoldableWithIndex = {\n    URI: URI,\n    reduce: /*#__PURE__*/ _reduce(S.Ord),\n    foldMap: /*#__PURE__*/ _foldMap(S.Ord),\n    reduceRight: /*#__PURE__*/ _reduceRight(S.Ord),\n    reduceWithIndex: /*#__PURE__*/ _reduceWithIndex(S.Ord),\n    foldMapWithIndex: /*#__PURE__*/ _foldMapWithIndex(S.Ord),\n    reduceRightWithIndex: /*#__PURE__*/ _reduceRightWithIndex(S.Ord)\n};\n/**\n * Use `getTraversable` instead.\n *\n * @category zone of death\n * @since 2.7.0\n * @deprecated\n */\nexport var Traversable = {\n    URI: URI,\n    map: _map,\n    reduce: /*#__PURE__*/ _reduce(S.Ord),\n    foldMap: /*#__PURE__*/ _foldMap(S.Ord),\n    reduceRight: /*#__PURE__*/ _reduceRight(S.Ord),\n    traverse: /*#__PURE__*/ _traverse(S.Ord),\n    sequence: sequence\n};\n/**\n * Use the `getTraversableWithIndex` instead.\n *\n * @category zone of death\n * @since 2.7.0\n * @deprecated\n */\nexport var TraversableWithIndex = {\n    URI: URI,\n    map: _map,\n    mapWithIndex: _mapWithIndex,\n    reduce: /*#__PURE__*/ _reduce(S.Ord),\n    foldMap: /*#__PURE__*/ _foldMap(S.Ord),\n    reduceRight: /*#__PURE__*/ _reduceRight(S.Ord),\n    reduceWithIndex: /*#__PURE__*/ _reduceWithIndex(S.Ord),\n    foldMapWithIndex: /*#__PURE__*/ _foldMapWithIndex(S.Ord),\n    reduceRightWithIndex: /*#__PURE__*/ _reduceRightWithIndex(S.Ord),\n    traverse: /*#__PURE__*/ _traverse(S.Ord),\n    sequence: sequence,\n    traverseWithIndex: /*#__PURE__*/ _traverseWithIndex(S.Ord)\n};\nvar _wither = /*#__PURE__*/ witherDefault(Traversable, Compactable);\nvar _wilt = /*#__PURE__*/ wiltDefault(Traversable, Compactable);\n/**\n * Use `getWitherable` instead.\n *\n * @category zone of death\n * @since 2.7.0\n * @deprecated\n */\nexport var Witherable = {\n    URI: URI,\n    map: _map,\n    reduce: /*#__PURE__*/ _reduce(S.Ord),\n    foldMap: /*#__PURE__*/ _foldMap(S.Ord),\n    reduceRight: /*#__PURE__*/ _reduceRight(S.Ord),\n    traverse: /*#__PURE__*/ _traverse(S.Ord),\n    sequence: sequence,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    wither: _wither,\n    wilt: _wilt\n};\n/**\n * Use a new `{}` instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var empty = {};\n/**\n * Use [`upsertAt`](#upsertat) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var insertAt = upsertAt;\n/**\n * Use [`has`](#has) instead.\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var hasOwnProperty = RR.hasOwnProperty;\n/**\n * This instance is deprecated, use small, specific instances instead.\n * For example if a function needs a `Functor` instance, pass `R.Functor` instead of `R.record`\n * (where `R` is from `import R from 'fp-ts/Record'`)\n *\n * @category zone of death\n * @since 2.0.0\n * @deprecated\n */\nexport var record = {\n    URI: URI,\n    map: _map,\n    reduce: /*#__PURE__*/ _reduce(S.Ord),\n    foldMap: /*#__PURE__*/ _foldMap(S.Ord),\n    reduceRight: /*#__PURE__*/ _reduceRight(S.Ord),\n    traverse: /*#__PURE__*/ _traverse(S.Ord),\n    sequence: sequence,\n    compact: compact,\n    separate: separate,\n    filter: _filter,\n    filterMap: _filterMap,\n    partition: _partition,\n    partitionMap: _partitionMap,\n    mapWithIndex: _mapWithIndex,\n    reduceWithIndex: /*#__PURE__*/ _reduceWithIndex(S.Ord),\n    foldMapWithIndex: /*#__PURE__*/ _foldMapWithIndex(S.Ord),\n    reduceRightWithIndex: /*#__PURE__*/ _reduceRightWithIndex(S.Ord),\n    filterMapWithIndex: _filterMapWithIndex,\n    filterWithIndex: _filterWithIndex,\n    partitionMapWithIndex: _partitionMapWithIndex,\n    partitionWithIndex: _partitionWithIndex,\n    traverseWithIndex: /*#__PURE__*/ _traverseWithIndex(S.Ord),\n    wither: _wither,\n    wilt: _wilt\n};\n", "import { apFirst as apFirst_, apSecond as apSecond_ } from './Apply';\nimport { chainFirst as chainFirst_ } from './Chain';\nimport { identity, pipe as pipeFromFunctionModule } from './function';\nexport function map(F) {\n    return function (f) { return function (fa) { return F.map(fa, f); }; };\n}\nexport function contramap(F) {\n    return function (f) { return function (fa) { return F.contramap(fa, f); }; };\n}\nexport function mapWithIndex(F) {\n    return function (f) { return function (fa) { return F.mapWithIndex(fa, f); }; };\n}\nexport function ap(F) {\n    return function (fa) { return function (fab) { return F.ap(fab, fa); }; };\n}\nexport function chain(F) {\n    return function (f) { return function (fa) { return F.chain(fa, f); }; };\n}\nexport function bimap(F) {\n    return function (f, g) { return function (fea) { return F.bimap(fea, f, g); }; };\n}\nexport function mapLeft(F) {\n    return function (f) { return function (fea) { return F.mapLeft(fea, f); }; };\n}\nexport function extend(F) {\n    return function (f) { return function (wa) { return F.extend(wa, f); }; };\n}\nexport function reduce(F) {\n    return function (b, f) { return function (fa) { return F.reduce(fa, b, f); }; };\n}\nexport function foldMap(F) {\n    return function (M) {\n        var foldMapM = F.foldMap(M);\n        return function (f) { return function (fa) { return foldMapM(fa, f); }; };\n    };\n}\nexport function reduceRight(F) {\n    return function (b, f) { return function (fa) { return F.reduceRight(fa, b, f); }; };\n}\nexport function reduceWithIndex(F) {\n    return function (b, f) { return function (fa) { return F.reduceWithIndex(fa, b, f); }; };\n}\nexport function foldMapWithIndex(F) {\n    return function (M) {\n        var foldMapWithIndexM = F.foldMapWithIndex(M);\n        return function (f) { return function (fa) { return foldMapWithIndexM(fa, f); }; };\n    };\n}\nexport function reduceRightWithIndex(F) {\n    return function (b, f) { return function (fa) { return F.reduceRightWithIndex(fa, b, f); }; };\n}\nexport function alt(F) {\n    return function (that) { return function (fa) { return F.alt(fa, that); }; };\n}\nexport function filter(F) {\n    return function (predicate) { return function (fa) { return F.filter(fa, predicate); }; };\n}\nexport function filterMap(F) {\n    return function (f) { return function (fa) { return F.filterMap(fa, f); }; };\n}\nexport function partition(F) {\n    return function (f) { return function (fa) { return F.partition(fa, f); }; };\n}\nexport function partitionMap(F) {\n    return function (f) { return function (fa) { return F.partitionMap(fa, f); }; };\n}\nexport function filterWithIndex(F) {\n    return function (predicate) { return function (fa) { return F.filterWithIndex(fa, predicate); }; };\n}\nexport function filterMapWithIndex(F) {\n    return function (f) { return function (fa) { return F.filterMapWithIndex(fa, f); }; };\n}\nexport function partitionWithIndex(F) {\n    return function (f) { return function (fa) { return F.partitionWithIndex(fa, f); }; };\n}\nexport function partitionMapWithIndex(F) {\n    return function (f) { return function (fa) { return F.partitionMapWithIndex(fa, f); }; };\n}\nexport function promap(F) {\n    return function (f, g) { return function (fbc) { return F.promap(fbc, f, g); }; };\n}\nexport function compose(F) {\n    return function (ea) { return function (ab) { return F.compose(ab, ea); }; };\n}\nvar isFunctor = function (I) { return typeof I.map === 'function'; };\nvar isContravariant = function (I) { return typeof I.contramap === 'function'; };\nvar isFunctorWithIndex = function (I) { return typeof I.mapWithIndex === 'function'; };\nvar isApply = function (I) { return typeof I.ap === 'function'; };\nvar isChain = function (I) { return typeof I.chain === 'function'; };\nvar isBifunctor = function (I) { return typeof I.bimap === 'function'; };\nvar isExtend = function (I) { return typeof I.extend === 'function'; };\nvar isFoldable = function (I) { return typeof I.reduce === 'function'; };\nvar isFoldableWithIndex = function (I) { return typeof I.reduceWithIndex === 'function'; };\nvar isAlt = function (I) { return typeof I.alt === 'function'; };\nvar isCompactable = function (I) { return typeof I.compact === 'function'; };\nvar isFilterable = function (I) { return typeof I.filter === 'function'; };\nvar isFilterableWithIndex = function (I) {\n    return typeof I.filterWithIndex === 'function';\n};\nvar isProfunctor = function (I) { return typeof I.promap === 'function'; };\nvar isSemigroupoid = function (I) { return typeof I.compose === 'function'; };\nvar isMonadThrow = function (I) { return typeof I.throwError === 'function'; };\n/** @deprecated */\nexport function pipeable(I) {\n    var r = {};\n    if (isFunctor(I)) {\n        r.map = map(I);\n    }\n    if (isContravariant(I)) {\n        r.contramap = contramap(I);\n    }\n    if (isFunctorWithIndex(I)) {\n        r.mapWithIndex = mapWithIndex(I);\n    }\n    if (isApply(I)) {\n        r.ap = ap(I);\n        r.apFirst = apFirst_(I);\n        r.apSecond = apSecond_(I);\n    }\n    if (isChain(I)) {\n        r.chain = chain(I);\n        r.chainFirst = chainFirst_(I);\n        r.flatten = r.chain(identity);\n    }\n    if (isBifunctor(I)) {\n        r.bimap = bimap(I);\n        r.mapLeft = mapLeft(I);\n    }\n    if (isExtend(I)) {\n        r.extend = extend(I);\n        r.duplicate = r.extend(identity);\n    }\n    if (isFoldable(I)) {\n        r.reduce = reduce(I);\n        r.foldMap = foldMap(I);\n        r.reduceRight = reduceRight(I);\n    }\n    if (isFoldableWithIndex(I)) {\n        r.reduceWithIndex = reduceWithIndex(I);\n        r.foldMapWithIndex = foldMapWithIndex(I);\n        r.reduceRightWithIndex = reduceRightWithIndex(I);\n    }\n    if (isAlt(I)) {\n        r.alt = alt(I);\n    }\n    if (isCompactable(I)) {\n        r.compact = I.compact;\n        r.separate = I.separate;\n    }\n    if (isFilterable(I)) {\n        r.filter = filter(I);\n        r.filterMap = filterMap(I);\n        r.partition = partition(I);\n        r.partitionMap = partitionMap(I);\n    }\n    if (isFilterableWithIndex(I)) {\n        r.filterWithIndex = filterWithIndex(I);\n        r.filterMapWithIndex = filterMapWithIndex(I);\n        r.partitionWithIndex = partitionWithIndex(I);\n        r.partitionMapWithIndex = partitionMapWithIndex(I);\n    }\n    if (isProfunctor(I)) {\n        r.promap = promap(I);\n    }\n    if (isSemigroupoid(I)) {\n        r.compose = compose(I);\n    }\n    if (isMonadThrow(I)) {\n        var fromOption = function (onNone) { return function (ma) {\n            return ma._tag === 'None' ? I.throwError(onNone()) : I.of(ma.value);\n        }; };\n        var fromEither = function (ma) {\n            return ma._tag === 'Left' ? I.throwError(ma.left) : I.of(ma.right);\n        };\n        var fromPredicate = function (predicate, onFalse) {\n            return function (a) {\n                return predicate(a) ? I.of(a) : I.throwError(onFalse(a));\n            };\n        };\n        var filterOrElse = function (predicate, onFalse) {\n            return function (ma) {\n                return I.chain(ma, function (a) { return (predicate(a) ? I.of(a) : I.throwError(onFalse(a))); });\n            };\n        };\n        r.fromOption = fromOption;\n        r.fromEither = fromEither;\n        r.fromPredicate = fromPredicate;\n        r.filterOrElse = filterOrElse;\n    }\n    return r;\n}\n/**\n * Use [`pipe`](https://gcanti.github.io/fp-ts/modules/function.ts.html#pipe) from `function` module instead.\n *\n * @since 2.0.0\n * @deprecated\n */\nexport var pipe = pipeFromFunctionModule;\n", "/**\n * @since 1.1.0\n */\nimport {Predicate} from 'fp-ts/function'\n\n/**\n * @since 1.1.0\n */\n/* eslint-disable @typescript-eslint/array-type */\nexport const takeUntil =\n  <A = unknown>(predicate: Predicate<A>) =>\n  (as: ReadonlyArray<A>): ReadonlyArray<A> => {\n    const init = []\n\n    // eslint-disable-next-line unicorn/no-for-loop\n    for (let i = 0; i < as.length; i++) {\n      init[i] = as[i]\n      if (predicate(as[i])) {\n        return init\n      }\n    }\n\n    return init\n  }\n/* eslint-enable @typescript-eslint/array-type */\n", "/**\n * An [io-ts Reporter](https://gcanti.github.io/io-ts/modules/Reporter.ts.html#reporter-interface).\n *\n * @example\n *\n * import * as t from 'io-ts';\n * import Reporter from 'io-ts-reporters';\n *\n * const User = t.interface({ name: t.string });\n *\n * assert.deepEqual(\n *   Reporter.report(User.decode({ nam: 'Jane' })),\n *   ['Expecting string at name but instead got: undefined'],\n * )\n * assert.deepEqual( Reporter.report(User.decode({ name: 'Jane' })), [])\n *\n * @since 1.2.0\n */\nimport * as A from 'fp-ts/Array'\nimport * as E from 'fp-ts/Either'\nimport * as NEA from 'fp-ts/NonEmptyArray'\nimport * as O from 'fp-ts/Option'\nimport * as R from 'fp-ts/Record'\nimport {pipe} from 'fp-ts/pipeable'\nimport * as t from 'io-ts'\nimport {Reporter} from 'io-ts/lib/Reporter'\n\nimport {takeUntil} from './utils'\n\nconst isUnionType = ({type}: t.ContextEntry) => type instanceof t.UnionType\n\nconst jsToString = (value: t.mixed) =>\n  value === undefined ? 'undefined' : JSON.stringify(value)\n\nconst keyPath = (ctx: t.Context) =>\n  // The context entry with an empty key is the original\n  // type (\"default context\"), not a type error.\n  ctx\n    .map((c) => c.key)\n    .filter(Boolean)\n    .join('.')\n\n// The actual error is last in context\nconst getErrorFromCtx = (validation: t.ValidationError) =>\n  // https://github.com/gcanti/fp-ts/pull/544/files\n  A.last(validation.context as t.ContextEntry[])\n\nconst getValidationContext = (validation: t.ValidationError) =>\n  // https://github.com/gcanti/fp-ts/pull/544/files\n  validation.context as t.ContextEntry[]\n\n/**\n * @category internals\n * @since 1.2.1\n */\nexport const TYPE_MAX_LEN = 160 // Two lines of 80-col text\nconst truncateType = (type: string, options: ReporterOptions = {}): string => {\n  const {truncateLongTypes = true} = options\n\n  if (truncateLongTypes && type.length > TYPE_MAX_LEN) {\n    return `${type.slice(0, TYPE_MAX_LEN - 3)}...`\n  }\n\n  return type\n}\n\nconst errorMessageSimple = (\n  expectedType: string,\n  path: string,\n  error: t.ValidationError,\n  options?: ReporterOptions,\n) =>\n  // https://github.com/elm-lang/core/blob/18c9e84e975ed22649888bfad15d1efdb0128ab2/src/Native/Json.js#L199\n  [\n    `Expecting ${truncateType(expectedType, options)}`,\n    path === '' ? '' : `at ${path}`,\n    `but instead got: ${jsToString(error.value)}`,\n    error.message ? `(${error.message})` : '',\n  ]\n    .filter(Boolean)\n    .join(' ')\n\nconst errorMessageUnion = (\n  expectedTypes: string[],\n  path: string,\n  value: unknown,\n  options?: ReporterOptions,\n) =>\n  // https://github.com/elm-lang/core/blob/18c9e84e975ed22649888bfad15d1efdb0128ab2/src/Native/Json.js#L199\n  [\n    'Expecting one of:\\n',\n    expectedTypes\n      .map((type) => `    ${truncateType(type, options)}`)\n      .join('\\n'),\n    path === '' ? '\\n' : `\\nat ${path} `,\n    `but instead got: ${jsToString(value)}`,\n  ]\n    .filter(Boolean)\n    .join('')\n\n// Find the union type in the list of ContextEntry\n// The next ContextEntry should be the type of this branch of the union\nconst findExpectedType = (ctx: t.ContextEntry[]) =>\n  pipe(\n    ctx,\n    A.findIndex(isUnionType),\n    O.chain((n) => A.lookup(n + 1, ctx)),\n  )\n\nconst formatValidationErrorOfUnion = (\n  path: string,\n  errors: NEA.NonEmptyArray<t.ValidationError>,\n  options?: ReporterOptions,\n) => {\n  const expectedTypes = pipe(\n    errors,\n    A.map(getValidationContext),\n    A.map(findExpectedType),\n    A.compact,\n  )\n\n  const value = pipe(\n    expectedTypes,\n    A.head,\n    O.map((v) => v.actual),\n    O.getOrElse((): unknown => undefined),\n  )\n\n  const expected = expectedTypes.map(({type}) => type.name)\n\n  return expected.length > 0\n    ? O.some(errorMessageUnion(expected, path, value, options))\n    : O.none\n}\n\nconst formatValidationCommonError = (\n  path: string,\n  error: t.ValidationError,\n  options?: ReporterOptions,\n) =>\n  pipe(\n    error,\n    getErrorFromCtx,\n    O.map((errorContext) =>\n      errorMessageSimple(errorContext.type.name, path, error, options),\n    ),\n  )\n\nconst groupByKey = NEA.groupBy((error: t.ValidationError) =>\n  pipe(error.context, takeUntil(isUnionType), keyPath),\n)\n\nconst format = (\n  path: string,\n  errors: NEA.NonEmptyArray<t.ValidationError>,\n  options?: ReporterOptions,\n) =>\n  NEA.tail(errors).length > 0\n    ? formatValidationErrorOfUnion(path, errors, options)\n    : formatValidationCommonError(path, NEA.head(errors), options)\n\n/**\n * Format a single validation error.\n *\n * @category formatters\n * @since 1.0.0\n */\nexport const formatValidationError = (\n  error: t.ValidationError,\n  options?: ReporterOptions,\n) => formatValidationCommonError(keyPath(error.context), error, options)\n\n/**\n * Format validation errors (`t.Errors`).\n *\n * @example\n * import * as E from 'fp-ts/Either'\n * import * as t from 'io-ts'\n * import { formatValidationErrors } from 'io-ts-reporters'\n *\n * const result = t.string.decode(123)\n *\n * assert.deepEqual(\n *   E.mapLeft(formatValidationErrors)(result),\n *   E.left(['Expecting string but instead got: 123'])\n * )\n *\n * @category formatters\n * @since 1.2.0\n */\nexport const formatValidationErrors = (\n  errors: t.Errors,\n  options?: ReporterOptions,\n) =>\n  pipe(\n    errors,\n    groupByKey,\n    R.mapWithIndex((path, errors) => format(path, errors, options)),\n    R.compact,\n    R.toArray,\n    A.map(([_key, error]) => error),\n  )\n\n/**\n * @category formatters\n * @since 1.2.2\n */\nexport interface ReporterOptions {\n  truncateLongTypes?: boolean\n}\n\n/**\n * Deprecated, use the default export instead.\n *\n * @category deprecated\n * @deprecated\n * @since 1.0.0\n */\nexport const reporter = <T>(\n  validation: t.Validation<T>,\n  options?: ReporterOptions,\n) =>\n  pipe(\n    validation,\n    E.mapLeft((errors) => formatValidationErrors(errors, options)),\n    E.fold(\n      (errors) => errors,\n      () => [],\n    ),\n  )\n\ninterface PrettyReporter extends Reporter<string[]> {\n  report: <T>(\n    validation: t.Validation<T>,\n    options?: ReporterOptions,\n  ) => string[]\n}\n\nconst prettyReporter: PrettyReporter = {report: reporter}\nexport default prettyReporter\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InMemoryCache = void 0;\nclass InMemoryCache {\n    constructor() {\n        this.cache = new Map();\n        this.set = async (namespace, key, value) => {\n            if (value !== null) {\n                this.cache.set(namespace + '$$' + key, value);\n            }\n            else {\n                this.cache.delete(namespace + '$$' + key);\n            }\n        };\n        this.get = async (namespace, key) => {\n            let res = this.cache.get(namespace + '$$' + key);\n            if (res !== undefined) {\n                return res;\n            }\n            else {\n                return null;\n            }\n        };\n    }\n}\nexports.InMemoryCache = InMemoryCache;\n", "\"use strict\";\n\n/**\n * Copyright (c) 2019-present, GraphQL Foundation\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n// A Function, which when given an Array of keys, returns a Promise of an Array\n// of values or Errors.\n// Optionally turn off batching or caching or provide a cache key function or a\n// custom cache instance.\n// If a custom cache is provided, it must be of this type (a subset of ES6 Map).\n\n/**\n * A `DataLoader` creates a public API for loading data from a particular\n * data back-end with unique keys such as the `id` column of a SQL table or\n * document name in a MongoDB database, given a batch loading function.\n *\n * Each `DataLoader` instance contains a unique memoized cache. Use caution when\n * used in long-lived applications or those which serve many users with\n * different access permissions and consider creating a new instance per\n * web request.\n */\nvar DataLoader =\n/*#__PURE__*/\nfunction () {\n  function DataLoader(batchLoadFn, options) {\n    if (typeof batchLoadFn !== 'function') {\n      throw new TypeError('DataLoader must be constructed with a function which accepts ' + (\"Array<key> and returns Promise<Array<value>>, but got: \" + batchLoadFn + \".\"));\n    }\n\n    this._batchLoadFn = batchLoadFn;\n    this._maxBatchSize = getValidMaxBatchSize(options);\n    this._batchScheduleFn = getValidBatchScheduleFn(options);\n    this._cacheKeyFn = getValidCacheKeyFn(options);\n    this._cacheMap = getValidCacheMap(options);\n    this._batch = null;\n  } // Private\n\n\n  var _proto = DataLoader.prototype;\n\n  /**\n   * Loads a key, returning a `Promise` for the value represented by that key.\n   */\n  _proto.load = function load(key) {\n    if (key === null || key === undefined) {\n      throw new TypeError('The loader.load() function must be called with a value, ' + (\"but got: \" + String(key) + \".\"));\n    }\n\n    var batch = getCurrentBatch(this);\n    var cacheMap = this._cacheMap;\n\n    var cacheKey = this._cacheKeyFn(key); // If caching and there is a cache-hit, return cached Promise.\n\n\n    if (cacheMap) {\n      var cachedPromise = cacheMap.get(cacheKey);\n\n      if (cachedPromise) {\n        var cacheHits = batch.cacheHits || (batch.cacheHits = []);\n        return new Promise(function (resolve) {\n          cacheHits.push(function () {\n            resolve(cachedPromise);\n          });\n        });\n      }\n    } // Otherwise, produce a new Promise for this key, and enqueue it to be\n    // dispatched along with the current batch.\n\n\n    batch.keys.push(key);\n    var promise = new Promise(function (resolve, reject) {\n      batch.callbacks.push({\n        resolve: resolve,\n        reject: reject\n      });\n    }); // If caching, cache this promise.\n\n    if (cacheMap) {\n      cacheMap.set(cacheKey, promise);\n    }\n\n    return promise;\n  }\n  /**\n   * Loads multiple keys, promising an array of values:\n   *\n   *     var [ a, b ] = await myLoader.loadMany([ 'a', 'b' ]);\n   *\n   * This is similar to the more verbose:\n   *\n   *     var [ a, b ] = await Promise.all([\n   *       myLoader.load('a'),\n   *       myLoader.load('b')\n   *     ]);\n   *\n   * However it is different in the case where any load fails. Where\n   * Promise.all() would reject, loadMany() always resolves, however each result\n   * is either a value or an Error instance.\n   *\n   *     var [ a, b, c ] = await myLoader.loadMany([ 'a', 'b', 'badkey' ]);\n   *     // c instanceof Error\n   *\n   */\n  ;\n\n  _proto.loadMany = function loadMany(keys) {\n    if (!isArrayLike(keys)) {\n      throw new TypeError('The loader.loadMany() function must be called with Array<key> ' + (\"but got: \" + keys + \".\"));\n    } // Support ArrayLike by using only minimal property access\n\n\n    var loadPromises = [];\n\n    for (var i = 0; i < keys.length; i++) {\n      loadPromises.push(this.load(keys[i])[\"catch\"](function (error) {\n        return error;\n      }));\n    }\n\n    return Promise.all(loadPromises);\n  }\n  /**\n   * Clears the value at `key` from the cache, if it exists. Returns itself for\n   * method chaining.\n   */\n  ;\n\n  _proto.clear = function clear(key) {\n    var cacheMap = this._cacheMap;\n\n    if (cacheMap) {\n      var cacheKey = this._cacheKeyFn(key);\n\n      cacheMap[\"delete\"](cacheKey);\n    }\n\n    return this;\n  }\n  /**\n   * Clears the entire cache. To be used when some event results in unknown\n   * invalidations across this particular `DataLoader`. Returns itself for\n   * method chaining.\n   */\n  ;\n\n  _proto.clearAll = function clearAll() {\n    var cacheMap = this._cacheMap;\n\n    if (cacheMap) {\n      cacheMap.clear();\n    }\n\n    return this;\n  }\n  /**\n   * Adds the provided key and value to the cache. If the key already\n   * exists, no change is made. Returns itself for method chaining.\n   *\n   * To prime the cache with an error at a key, provide an Error instance.\n   */\n  ;\n\n  _proto.prime = function prime(key, value) {\n    var cacheMap = this._cacheMap;\n\n    if (cacheMap) {\n      var cacheKey = this._cacheKeyFn(key); // Only add the key if it does not already exist.\n\n\n      if (cacheMap.get(cacheKey) === undefined) {\n        // Cache a rejected promise if the value is an Error, in order to match\n        // the behavior of load(key).\n        var promise;\n\n        if (value instanceof Error) {\n          promise = Promise.reject(value); // Since this is a case where an Error is intentionally being primed\n          // for a given key, we want to disable unhandled promise rejection.\n\n          promise[\"catch\"](function () {});\n        } else {\n          promise = Promise.resolve(value);\n        }\n\n        cacheMap.set(cacheKey, promise);\n      }\n    }\n\n    return this;\n  };\n\n  return DataLoader;\n}(); // Private: Enqueue a Job to be executed after all \"PromiseJobs\" Jobs.\n//\n// ES6 JavaScript uses the concepts Job and JobQueue to schedule work to occur\n// after the current execution context has completed:\n// http://www.ecma-international.org/ecma-262/6.0/#sec-jobs-and-job-queues\n//\n// Node.js uses the `process.nextTick` mechanism to implement the concept of a\n// Job, maintaining a global FIFO JobQueue for all Jobs, which is flushed after\n// the current call stack ends.\n//\n// When calling `then` on a Promise, it enqueues a Job on a specific\n// \"PromiseJobs\" JobQueue which is flushed in Node as a single Job on the\n// global JobQueue.\n//\n// DataLoader batches all loads which occur in a single frame of execution, but\n// should include in the batch all loads which occur during the flushing of the\n// \"PromiseJobs\" JobQueue after that same execution frame.\n//\n// In order to avoid the DataLoader dispatch Job occuring before \"PromiseJobs\",\n// A Promise Job is created with the sole purpose of enqueuing a global Job,\n// ensuring that it always occurs after \"PromiseJobs\" ends.\n//\n// Node.js's job queue is unique. Browsers do not have an equivalent mechanism\n// for enqueuing a job to be performed after promise microtasks and before the\n// next macrotask. For browser environments, a macrotask is used (via\n// setImmediate or setTimeout) at a potential performance penalty.\n\n\nvar enqueuePostPromiseJob = typeof process === 'object' && typeof process.nextTick === 'function' ? function (fn) {\n  if (!resolvedPromise) {\n    resolvedPromise = Promise.resolve();\n  }\n\n  resolvedPromise.then(function () {\n    process.nextTick(fn);\n  });\n} : typeof setImmediate === 'function' ? function (fn) {\n  setImmediate(fn);\n} : function (fn) {\n  setTimeout(fn);\n}; // Private: cached resolved Promise instance\n\nvar resolvedPromise; // Private: Describes a batch of requests\n\n// Private: Either returns the current batch, or creates and schedules a\n// dispatch of a new batch for the given loader.\nfunction getCurrentBatch(loader) {\n  // If there is an existing batch which has not yet dispatched and is within\n  // the limit of the batch size, then return it.\n  var existingBatch = loader._batch;\n\n  if (existingBatch !== null && !existingBatch.hasDispatched && existingBatch.keys.length < loader._maxBatchSize && (!existingBatch.cacheHits || existingBatch.cacheHits.length < loader._maxBatchSize)) {\n    return existingBatch;\n  } // Otherwise, create a new batch for this loader.\n\n\n  var newBatch = {\n    hasDispatched: false,\n    keys: [],\n    callbacks: []\n  }; // Store it on the loader so it may be reused.\n\n  loader._batch = newBatch; // Then schedule a task to dispatch this batch of requests.\n\n  loader._batchScheduleFn(function () {\n    dispatchBatch(loader, newBatch);\n  });\n\n  return newBatch;\n}\n\nfunction dispatchBatch(loader, batch) {\n  // Mark this batch as having been dispatched.\n  batch.hasDispatched = true; // If there's nothing to load, resolve any cache hits and return early.\n\n  if (batch.keys.length === 0) {\n    resolveCacheHits(batch);\n    return;\n  } // Call the provided batchLoadFn for this loader with the batch's keys and\n  // with the loader as the `this` context.\n\n\n  var batchPromise = loader._batchLoadFn(batch.keys); // Assert the expected response from batchLoadFn\n\n\n  if (!batchPromise || typeof batchPromise.then !== 'function') {\n    return failedDispatch(loader, batch, new TypeError('DataLoader must be constructed with a function which accepts ' + 'Array<key> and returns Promise<Array<value>>, but the function did ' + (\"not return a Promise: \" + String(batchPromise) + \".\")));\n  } // Await the resolution of the call to batchLoadFn.\n\n\n  batchPromise.then(function (values) {\n    // Assert the expected resolution from batchLoadFn.\n    if (!isArrayLike(values)) {\n      throw new TypeError('DataLoader must be constructed with a function which accepts ' + 'Array<key> and returns Promise<Array<value>>, but the function did ' + (\"not return a Promise of an Array: \" + String(values) + \".\"));\n    }\n\n    if (values.length !== batch.keys.length) {\n      throw new TypeError('DataLoader must be constructed with a function which accepts ' + 'Array<key> and returns Promise<Array<value>>, but the function did ' + 'not return a Promise of an Array of the same length as the Array ' + 'of keys.' + (\"\\n\\nKeys:\\n\" + String(batch.keys)) + (\"\\n\\nValues:\\n\" + String(values)));\n    } // Resolve all cache hits in the same micro-task as freshly loaded values.\n\n\n    resolveCacheHits(batch); // Step through values, resolving or rejecting each Promise in the batch.\n\n    for (var i = 0; i < batch.callbacks.length; i++) {\n      var value = values[i];\n\n      if (value instanceof Error) {\n        batch.callbacks[i].reject(value);\n      } else {\n        batch.callbacks[i].resolve(value);\n      }\n    }\n  })[\"catch\"](function (error) {\n    failedDispatch(loader, batch, error);\n  });\n} // Private: do not cache individual loads if the entire batch dispatch fails,\n// but still reject each request so they do not hang.\n\n\nfunction failedDispatch(loader, batch, error) {\n  // Cache hits are resolved, even though the batch failed.\n  resolveCacheHits(batch);\n\n  for (var i = 0; i < batch.keys.length; i++) {\n    loader.clear(batch.keys[i]);\n    batch.callbacks[i].reject(error);\n  }\n} // Private: Resolves the Promises for any cache hits in this batch.\n\n\nfunction resolveCacheHits(batch) {\n  if (batch.cacheHits) {\n    for (var i = 0; i < batch.cacheHits.length; i++) {\n      batch.cacheHits[i]();\n    }\n  }\n} // Private: given the DataLoader's options, produce a valid max batch size.\n\n\nfunction getValidMaxBatchSize(options) {\n  var shouldBatch = !options || options.batch !== false;\n\n  if (!shouldBatch) {\n    return 1;\n  }\n\n  var maxBatchSize = options && options.maxBatchSize;\n\n  if (maxBatchSize === undefined) {\n    return Infinity;\n  }\n\n  if (typeof maxBatchSize !== 'number' || maxBatchSize < 1) {\n    throw new TypeError(\"maxBatchSize must be a positive number: \" + maxBatchSize);\n  }\n\n  return maxBatchSize;\n} // Private\n\n\nfunction getValidBatchScheduleFn(options) {\n  var batchScheduleFn = options && options.batchScheduleFn;\n\n  if (batchScheduleFn === undefined) {\n    return enqueuePostPromiseJob;\n  }\n\n  if (typeof batchScheduleFn !== 'function') {\n    throw new TypeError(\"batchScheduleFn must be a function: \" + batchScheduleFn);\n  }\n\n  return batchScheduleFn;\n} // Private: given the DataLoader's options, produce a cache key function.\n\n\nfunction getValidCacheKeyFn(options) {\n  var cacheKeyFn = options && options.cacheKeyFn;\n\n  if (cacheKeyFn === undefined) {\n    return function (key) {\n      return key;\n    };\n  }\n\n  if (typeof cacheKeyFn !== 'function') {\n    throw new TypeError(\"cacheKeyFn must be a function: \" + cacheKeyFn);\n  }\n\n  return cacheKeyFn;\n} // Private: given the DataLoader's options, produce a CacheMap to be used.\n\n\nfunction getValidCacheMap(options) {\n  var shouldCache = !options || options.cache !== false;\n\n  if (!shouldCache) {\n    return null;\n  }\n\n  var cacheMap = options && options.cacheMap;\n\n  if (cacheMap === undefined) {\n    return new Map();\n  }\n\n  if (cacheMap !== null) {\n    var cacheFunctions = ['get', 'set', 'delete', 'clear'];\n    var missingFunctions = cacheFunctions.filter(function (fnName) {\n      return cacheMap && typeof cacheMap[fnName] !== 'function';\n    });\n\n    if (missingFunctions.length !== 0) {\n      throw new TypeError('Custom cacheMap missing methods: ' + missingFunctions.join(', '));\n    }\n  }\n\n  return cacheMap;\n} // Private\n\n\nfunction isArrayLike(x) {\n  return typeof x === 'object' && x !== null && typeof x.length === 'number' && (x.length === 0 || x.length > 0 && Object.prototype.hasOwnProperty.call(x, x.length - 1));\n}\n\nmodule.exports = DataLoader;", "'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n", "'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return Array.isArray(val);\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return toString.call(val) === '[object FormData]';\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return toString.call(val) === '[object URLSearchParams]';\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n", "'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n", "'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  };\n  return error;\n};\n", "'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n", "'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n", "'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n};\n", "'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n", "'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n", "'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n", "'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\nvar defaults = require('../defaults');\nvar Cancel = require('../cancel/Cancel');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      var transitional = config.transitional || defaults.transitional;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(\n        timeoutErrorMessage,\n        config,\n        transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || (cancel && cancel.type) ? new Cancel('canceled') : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n", "'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\nvar enhanceError = require('./core/enhanceError');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: {\n    silentJSONParsing: true,\n    forcedJSONParsing: true,\n    clarifyTimeoutError: false\n  },\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional || defaults.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw enhanceError(e, this, 'E_JSON_PARSE');\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n", "'use strict';\n\nvar utils = require('./../utils');\nvar defaults = require('./../defaults');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n", "'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n", "'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar Cancel = require('../cancel/Cancel');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new Cancel('canceled');\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n", "'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(prop) {\n    if (prop in config2) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  var mergeMap = {\n    'url': valueFromConfig2,\n    'method': valueFromConfig2,\n    'data': valueFromConfig2,\n    'baseURL': defaultToConfig2,\n    'transformRequest': defaultToConfig2,\n    'transformResponse': defaultToConfig2,\n    'paramsSerializer': defaultToConfig2,\n    'timeout': defaultToConfig2,\n    'timeoutMessage': defaultToConfig2,\n    'withCredentials': defaultToConfig2,\n    'adapter': defaultToConfig2,\n    'responseType': defaultToConfig2,\n    'xsrfCookieName': defaultToConfig2,\n    'xsrfHeaderName': defaultToConfig2,\n    'onUploadProgress': defaultToConfig2,\n    'onDownloadProgress': defaultToConfig2,\n    'decompress': defaultToConfig2,\n    'maxContentLength': defaultToConfig2,\n    'maxBodyLength': defaultToConfig2,\n    'transport': defaultToConfig2,\n    'httpAgent': defaultToConfig2,\n    'httpsAgent': defaultToConfig2,\n    'cancelToken': defaultToConfig2,\n    'socketPath': defaultToConfig2,\n    'responseEncoding': defaultToConfig2,\n    'validateStatus': mergeDirectKeys\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    var merge = mergeMap[prop] || mergeDeepProperties;\n    var configValue = merge(prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n};\n", "module.exports = {\n  \"version\": \"0.25.0\"\n};", "'use strict';\n\nvar VERSION = require('../env/data').version;\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new Error(formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')));\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new TypeError('options must be an object');\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new TypeError('option ' + opt + ' must be ' + result);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw Error('Unknown option ' + opt);\n    }\n  }\n}\n\nmodule.exports = {\n  assertOptions: assertOptions,\n  validators: validators\n};\n", "'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\nvar validator = require('../helpers/validator');\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(configOrUrl, config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof configOrUrl === 'string') {\n    config = config || {};\n    config.url = configOrUrl;\n  } else {\n    config = configOrUrl || {};\n  }\n\n  if (!config.url) {\n    throw new Error('Provided config url is not valid');\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean),\n      forcedJSONParsing: validators.transitional(validators.boolean),\n      clarifyTimeoutError: validators.transitional(validators.boolean)\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  if (!config.url) {\n    throw new Error('Provided config url is not valid');\n  }\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n", "'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n\n  // eslint-disable-next-line func-names\n  this.promise.then(function(cancel) {\n    if (!token._listeners) return;\n\n    var i;\n    var l = token._listeners.length;\n\n    for (i = 0; i < l; i++) {\n      token._listeners[i](cancel);\n    }\n    token._listeners = null;\n  });\n\n  // eslint-disable-next-line func-names\n  this.promise.then = function(onfulfilled) {\n    var _resolve;\n    // eslint-disable-next-line func-names\n    var promise = new Promise(function(resolve) {\n      token.subscribe(resolve);\n      _resolve = resolve;\n    }).then(onfulfilled);\n\n    promise.cancel = function reject() {\n      token.unsubscribe(_resolve);\n    };\n\n    return promise;\n  };\n\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Subscribe to the cancel signal\n */\n\nCancelToken.prototype.subscribe = function subscribe(listener) {\n  if (this.reason) {\n    listener(this.reason);\n    return;\n  }\n\n  if (this._listeners) {\n    this._listeners.push(listener);\n  } else {\n    this._listeners = [listener];\n  }\n};\n\n/**\n * Unsubscribe from the cancel signal\n */\n\nCancelToken.prototype.unsubscribe = function unsubscribe(listener) {\n  if (!this._listeners) {\n    return;\n  }\n  var index = this._listeners.indexOf(listener);\n  if (index !== -1) {\n    this._listeners.splice(index, 1);\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n", "'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n};\n", "'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\naxios.VERSION = require('./env/data').version;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n", "module.exports = require('./lib/axios');", "{\n  \"name\": \"ton\",\n  \"version\": \"13.3.0\",\n  \"repository\": \"https://github.com/tonwhales/ton.git\",\n  \"author\": \"Steve Korshakov <steve@korshakov.com>\",\n  \"license\": \"MIT\",\n  \"main\": \"dist/index.js\",\n  \"files\": [\n    \"dist\"\n  ],\n  \"scripts\": {\n    \"build\": \"rm -fr dist && tsc --declaration\",\n    \"test\": \"jest --verbose --runInBand\",\n    \"release\": \"yarn build && yarn release-it --npm.yarn1\"\n  },\n  \"devDependencies\": {\n    \"@release-it/keep-a-changelog\": \"^3.1.0\",\n    \"@types/jest\": \"^27.0.1\",\n    \"@types/node\": \"^16.7.10\",\n    \"buffer\": \"^6.0.3\",\n    \"expect\": \"^27.1.0\",\n    \"jest\": \"^27.1.0\",\n    \"jest-mock\": \"^27.1.0\",\n    \"karma\": \"^6.3.4\",\n    \"karma-chrome-launcher\": \"^3.1.0\",\n    \"karma-jasmine\": \"^4.0.1\",\n    \"karma-typescript\": \"^5.5.2\",\n    \"karma-webpack\": \"^5.0.0\",\n    \"prando\": \"^6.0.1\",\n    \"release-it\": \"^15.5.1\",\n    \"ton-core\": \"^0.32.0\",\n    \"ton-crypto\": \"3.2.0\",\n    \"ts-jest\": \"^27.0.5\",\n    \"ts-loader\": \"^9.2.5\",\n    \"ts-node\": \"^10.7.0\",\n    \"typescript\": \"^4.4.2\",\n    \"webpack\": \"^5.51.2\"\n  },\n  \"dependencies\": {\n    \"axios\": \"^0.25.0\",\n    \"dataloader\": \"^2.0.0\",\n    \"fp-ts\": \"^2.11.1\",\n    \"io-ts\": \"^2.2.16\",\n    \"io-ts-reporters\": \"^2.0.0\",\n    \"symbol.inspect\": \"1.0.1\",\n    \"teslabot\": \"^1.3.0\"\n  },\n  \"peerDependencies\": {\n    \"ton-core\": \">=0.32.0\",\n    \"ton-crypto\": \">=3.2.0\"\n  },\n  \"publishConfig\": {\n    \"access\": \"public\",\n    \"registry\": \"https://registry.npmjs.org/\"\n  },\n  \"release-it\": {\n    \"github\": {\n      \"release\": true\n    },\n    \"plugins\": {\n      \"@release-it/keep-a-changelog\": {\n        \"filename\": \"CHANGELOG.md\"\n      }\n    }\n  }\n}\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpApi = void 0;\nconst t = __importStar(require(\"io-ts\"));\nconst Either_1 = require(\"fp-ts/lib/Either\");\nconst io_ts_reporters_1 = __importDefault(require(\"io-ts-reporters\"));\nconst TonCache_1 = require(\"./TonCache\");\nconst dataloader_1 = __importDefault(require(\"dataloader\"));\nconst axios_1 = __importDefault(require(\"axios\"));\nconst version = require('../../../package.json').version;\nconst blockIdExt = t.type({\n    '@type': t.literal('ton.blockIdExt'),\n    workchain: t.number,\n    shard: t.string,\n    seqno: t.number,\n    root_hash: t.string,\n    file_hash: t.string\n});\nconst addressInformation = t.type({\n    balance: t.union([t.number, t.string]),\n    state: t.union([t.literal('active'), t.literal('uninitialized'), t.literal('frozen')]),\n    data: t.string,\n    code: t.string,\n    last_transaction_id: t.type({\n        '@type': t.literal('internal.transactionId'),\n        lt: t.string,\n        hash: t.string\n    }),\n    block_id: blockIdExt,\n    sync_utime: t.number\n});\nconst bocResponse = t.type({\n    '@type': t.literal('ok')\n});\nconst feeResponse = t.type({\n    '@type': t.literal('query.fees'),\n    source_fees: t.type({\n        '@type': t.literal('fees'),\n        in_fwd_fee: t.number,\n        storage_fee: t.number,\n        gas_fee: t.number,\n        fwd_fee: t.number\n    })\n});\nconst callGetMethod = t.type({\n    gas_used: t.number,\n    exit_code: t.number,\n    stack: t.array(t.unknown)\n});\nconst messageData = t.union([\n    t.type({\n        '@type': t.literal('msg.dataRaw'),\n        'body': t.string\n    }),\n    t.type({\n        '@type': t.literal('msg.dataText'),\n        'text': t.string\n    }),\n    t.type({\n        '@type': t.literal('msg.dataDecryptedText'),\n        'text': t.string\n    }),\n    t.type({\n        '@type': t.literal('msg.dataEncryptedText'),\n        'text': t.string\n    })\n]);\nconst message = t.type({\n    source: t.string,\n    destination: t.string,\n    value: t.string,\n    fwd_fee: t.string,\n    ihr_fee: t.string,\n    created_lt: t.string,\n    body_hash: t.string,\n    msg_data: messageData\n});\nconst transaction = t.type({\n    data: t.string,\n    utime: t.number,\n    transaction_id: t.type({\n        lt: t.string,\n        hash: t.string\n    }),\n    fee: t.string,\n    storage_fee: t.string,\n    other_fee: t.string,\n    in_msg: t.union([t.undefined, message]),\n    out_msgs: t.array(message)\n});\nconst getTransactions = t.array(transaction);\nconst getMasterchain = t.type({\n    state_root_hash: t.string,\n    last: blockIdExt,\n    init: blockIdExt\n});\nconst getShards = t.type({\n    shards: t.array(blockIdExt)\n});\nconst blockShortTxt = t.type({\n    '@type': t.literal('blocks.shortTxId'),\n    mode: t.number,\n    account: t.string,\n    lt: t.string,\n    hash: t.string\n});\nconst getBlockTransactions = t.type({\n    id: blockIdExt,\n    req_count: t.number,\n    incomplete: t.boolean,\n    transactions: t.array(blockShortTxt)\n});\nclass TypedCache {\n    constructor(namespace, cache, codec, keyEncoder) {\n        this.namespace = namespace;\n        this.cache = cache;\n        this.codec = codec;\n        this.keyEncoder = keyEncoder;\n    }\n    async get(key) {\n        let ex = await this.cache.get(this.namespace, this.keyEncoder(key));\n        if (ex) {\n            let decoded = this.codec.decode(JSON.parse(ex));\n            if ((0, Either_1.isRight)(decoded)) {\n                return decoded.right;\n            }\n        }\n        return null;\n    }\n    async set(key, value) {\n        if (value !== null) {\n            await this.cache.set(this.namespace, this.keyEncoder(key), JSON.stringify(value));\n        }\n        else {\n            await this.cache.set(this.namespace, this.keyEncoder(key), null);\n        }\n    }\n}\nclass HttpApi {\n    constructor(endpoint, parameters) {\n        this.endpoint = endpoint;\n        this.cache = new TonCache_1.InMemoryCache();\n        this.parameters = {\n            timeout: parameters?.timeout || 30000,\n            apiKey: parameters?.apiKey\n        };\n        // Shard\n        this.shardCache = new TypedCache('ton-shard', this.cache, t.array(blockIdExt), (src) => src + '');\n        this.shardLoader = new dataloader_1.default(async (src) => {\n            return await Promise.all(src.map(async (v) => {\n                const cached = await this.shardCache.get(v);\n                if (cached) {\n                    return cached;\n                }\n                let loaded = (await this.doCall('shards', { seqno: v }, getShards)).shards;\n                await this.shardCache.set(v, loaded);\n                return loaded;\n            }));\n        });\n        // Shard Transactions\n        this.shardTransactionsCache = new TypedCache('ton-shard-tx', this.cache, getBlockTransactions, (src) => src.workchain + ':' + src.shard + ':' + src.seqno);\n        this.shardTransactionsLoader = new dataloader_1.default(async (src) => {\n            return await Promise.all(src.map(async (v) => {\n                const cached = await this.shardTransactionsCache.get(v);\n                if (cached) {\n                    return cached;\n                }\n                let loaded = await this.doCall('getBlockTransactions', { workchain: v.workchain, seqno: v.seqno, shard: v.shard }, getBlockTransactions);\n                await this.shardTransactionsCache.set(v, loaded);\n                return loaded;\n            }));\n        }, { cacheKeyFn: (src) => src.workchain + ':' + src.shard + ':' + src.seqno });\n    }\n    getAddressInformation(address) {\n        return this.doCall('getAddressInformation', { address: address.toString() }, addressInformation);\n    }\n    async getTransactions(address, opts) {\n        const inclusive = opts.inclusive;\n        delete opts.inclusive;\n        // Convert hash\n        let hash = undefined;\n        if (opts.hash) {\n            hash = Buffer.from(opts.hash, 'base64').toString('hex');\n        }\n        // Adjust limit\n        let limit = opts.limit;\n        if (opts.hash && opts.lt && inclusive !== true) {\n            limit++;\n        }\n        // Do request\n        let res = await this.doCall('getTransactions', { address: address.toString(), ...opts, limit, hash }, getTransactions);\n        if (res.length > limit) {\n            res = res.slice(0, limit);\n        }\n        // Adjust result\n        if (opts.hash && opts.lt && inclusive !== true) {\n            res.shift();\n            return res;\n        }\n        else {\n            return res;\n        }\n    }\n    async getMasterchainInfo() {\n        return await this.doCall('getMasterchainInfo', {}, getMasterchain);\n    }\n    async getShards(seqno) {\n        return await this.shardLoader.load(seqno);\n    }\n    async getBlockTransactions(workchain, seqno, shard) {\n        return await this.shardTransactionsLoader.load({ workchain, seqno, shard });\n    }\n    async getTransaction(address, lt, hash) {\n        let convHash = Buffer.from(hash, 'base64').toString('hex');\n        let res = await this.doCall('getTransactions', { address: address.toString(), lt, hash: convHash, limit: 1 }, getTransactions);\n        let ex = res.find((v) => v.transaction_id.lt === lt && v.transaction_id.hash === hash);\n        if (ex) {\n            return ex;\n        }\n        else {\n            return null;\n        }\n    }\n    async callGetMethod(address, method, stack) {\n        return await this.doCall('runGetMethod', { address: address.toString(), method, stack: serializeStack(stack) }, callGetMethod);\n    }\n    async sendBoc(body) {\n        await this.doCall('sendBoc', { boc: body.toString('base64') }, bocResponse);\n    }\n    async estimateFee(address, args) {\n        return await this.doCall('estimateFee', {\n            address: address.toString(),\n            body: args.body.toBoc().toString('base64'),\n            'init_data': args.initData ? args.initData.toBoc().toString('base64') : '',\n            'init_code': args.initCode ? args.initCode.toBoc().toString('base64') : '',\n            ignore_chksig: args.ignoreSignature\n        }, feeResponse);\n    }\n    async doCall(method, body, codec) {\n        let headers = {\n            'Content-Type': 'application/json',\n            'X-Ton-Client-Version': version,\n        };\n        if (this.parameters.apiKey) {\n            headers['X-API-Key'] = this.parameters.apiKey;\n        }\n        let res = await axios_1.default.post(this.endpoint, JSON.stringify({\n            id: '1',\n            jsonrpc: '2.0',\n            method: method,\n            params: body\n        }), {\n            headers,\n            timeout: this.parameters.timeout,\n        });\n        if (res.status !== 200 || !res.data.ok) {\n            throw Error('Received error: ' + JSON.stringify(res.data));\n        }\n        let decoded = codec.decode(res.data.result);\n        if ((0, Either_1.isRight)(decoded)) {\n            return decoded.right;\n        }\n        else {\n            throw Error('Malformed response: ' + io_ts_reporters_1.default.report(decoded).join(', '));\n        }\n    }\n}\nexports.HttpApi = HttpApi;\nfunction serializeStack(src) {\n    let stack = [];\n    for (let s of src) {\n        if (s.type === 'int') {\n            stack.push(['num', s.value.toString()]);\n        }\n        else if (s.type === 'cell') {\n            stack.push(['tvm.Cell', s.cell.toBoc().toString('base64')]);\n        }\n        else if (s.type === 'slice') {\n            stack.push(['tvm.Slice', s.cell.toBoc().toString('base64')]);\n        }\n        else if (s.type === 'builder') {\n            stack.push(['tvm.Builder', s.cell.toBoc().toString('base64')]);\n        }\n        else {\n            throw Error('Unsupported stack item type: ' + s.type);\n        }\n    }\n    return stack;\n}\n", "\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _TonClient_api;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TonClient = void 0;\nconst HttpApi_1 = require(\"./api/HttpApi\");\nconst ton_core_1 = require(\"ton-core\");\nclass TonClient {\n    constructor(parameters) {\n        _TonClient_api.set(this, void 0);\n        this.parameters = {\n            endpoint: parameters.endpoint\n        };\n        __classPrivateFieldSet(this, _TonClient_api, new HttpApi_1.HttpApi(this.parameters.endpoint, {\n            timeout: parameters.timeout,\n            apiKey: parameters.apiKey,\n            adapter: parameters.httpAdapter\n        }), \"f\");\n    }\n    /**\n     * Get Address Balance\n     * @param address address for balance check\n     * @returns balance\n     */\n    async getBalance(address) {\n        return (await this.getContractState(address)).balance;\n    }\n    /**\n     * Invoke get method\n     * @param address contract address\n     * @param name name of method\n     * @param params optional parameters\n     * @returns stack and gas_used field\n     */\n    async callGetMethod(address, name, stack = []) {\n        let res = await __classPrivateFieldGet(this, _TonClient_api, \"f\").callGetMethod(address, name, stack);\n        if (res.exit_code !== 0) {\n            throw Error('Unable to execute get method. Got exit_code: ' + res.exit_code);\n        }\n        return { gas_used: res.gas_used, stack: parseStack(res.stack) };\n    }\n    /**\n     * Invoke get method that returns error code instead of throwing error\n     * @param address contract address\n     * @param name name of method\n     * @param params optional parameters\n     * @returns stack and gas_used field\n    */\n    async callGetMethodWithError(address, name, params = []) {\n        let res = await __classPrivateFieldGet(this, _TonClient_api, \"f\").callGetMethod(address, name, params);\n        return { gas_used: res.gas_used, stack: parseStack(res.stack), exit_code: res.exit_code };\n    }\n    /**\n     * Get transactions\n     * @param address address\n     */\n    async getTransactions(address, opts) {\n        // Fetch transactions\n        let tx = await __classPrivateFieldGet(this, _TonClient_api, \"f\").getTransactions(address, opts);\n        let res = [];\n        for (let r of tx) {\n            res.push((0, ton_core_1.loadTransaction)(ton_core_1.Cell.fromBoc(Buffer.from(r.data, 'base64'))[0].beginParse()));\n        }\n        return res;\n    }\n    /**\n     * Get transaction by it's id\n     * @param address address\n     * @param lt logical time\n     * @param hash transaction hash\n     * @returns transaction or null if not exist\n     */\n    async getTransaction(address, lt, hash) {\n        let res = await __classPrivateFieldGet(this, _TonClient_api, \"f\").getTransaction(address, lt, hash);\n        if (res) {\n            return (0, ton_core_1.loadTransaction)(ton_core_1.Cell.fromBoc(Buffer.from(res.data, 'base64'))[0].beginParse());\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Fetch latest masterchain info\n     * @returns masterchain info\n     */\n    async getMasterchainInfo() {\n        let r = await __classPrivateFieldGet(this, _TonClient_api, \"f\").getMasterchainInfo();\n        return {\n            workchain: r.init.workchain,\n            shard: r.last.shard,\n            initSeqno: r.init.seqno,\n            latestSeqno: r.last.seqno\n        };\n    }\n    /**\n     * Fetch latest workchain shards\n     * @param seqno masterchain seqno\n     */\n    async getWorkchainShards(seqno) {\n        let r = await __classPrivateFieldGet(this, _TonClient_api, \"f\").getShards(seqno);\n        return r.map((m) => ({\n            workchain: m.workchain,\n            shard: m.shard,\n            seqno: m.seqno\n        }));\n    }\n    /**\n     * Fetch transactions inf shards\n     * @param workchain\n     * @param seqno\n     * @param shard\n     */\n    async getShardTransactions(workchain, seqno, shard) {\n        let tx = await __classPrivateFieldGet(this, _TonClient_api, \"f\").getBlockTransactions(workchain, seqno, shard);\n        if (tx.incomplete) {\n            throw Error('Unsupported');\n        }\n        return tx.transactions.map((v) => ({\n            account: ton_core_1.Address.parseRaw(v.account),\n            lt: v.lt,\n            hash: v.hash\n        }));\n    }\n    /**\n     * Send message to a network\n     * @param src source message\n     */\n    async sendMessage(src) {\n        const boc = (0, ton_core_1.beginCell)()\n            .store((0, ton_core_1.storeMessage)(src))\n            .endCell()\n            .toBoc();\n        await __classPrivateFieldGet(this, _TonClient_api, \"f\").sendBoc(boc);\n    }\n    /**\n     * Send file to a network\n     * @param src source file\n     */\n    async sendFile(src) {\n        await __classPrivateFieldGet(this, _TonClient_api, \"f\").sendBoc(src);\n    }\n    /**\n     * Estimate fees for external message\n     * @param address target address\n     * @returns\n     */\n    async estimateExternalMessageFee(address, args) {\n        return await __classPrivateFieldGet(this, _TonClient_api, \"f\").estimateFee(address, { body: args.body, initCode: args.initCode, initData: args.initData, ignoreSignature: args.ignoreSignature });\n    }\n    /**\n     * Send external message to contract\n     * @param contract contract to send message\n     * @param src message body\n     */\n    async sendExternalMessage(contract, src) {\n        if (await this.isContractDeployed(contract.address) || !contract.init) {\n            const message = (0, ton_core_1.external)({\n                to: contract.address,\n                body: src\n            });\n            await this.sendMessage(message);\n        }\n        else {\n            const message = (0, ton_core_1.external)({\n                to: contract.address,\n                init: { code: contract.init.code, data: contract.init.data },\n                body: src\n            });\n            await this.sendMessage(message);\n        }\n    }\n    /**\n     * Check if contract is deployed\n     * @param address addres to check\n     * @returns true if contract is in active state\n     */\n    async isContractDeployed(address) {\n        return (await this.getContractState(address)).state === 'active';\n    }\n    /**\n     * Resolves contract state\n     * @param address contract address\n     */\n    async getContractState(address) {\n        let info = await __classPrivateFieldGet(this, _TonClient_api, \"f\").getAddressInformation(address);\n        let balance = BigInt(info.balance);\n        let state = info.state;\n        return {\n            balance,\n            state,\n            code: info.code !== '' ? Buffer.from(info.code, 'base64') : null,\n            data: info.data !== '' ? Buffer.from(info.data, 'base64') : null,\n            lastTransaction: info.last_transaction_id.lt !== '0' ? {\n                lt: info.last_transaction_id.lt,\n                hash: info.last_transaction_id.hash,\n            } : null,\n            blockId: {\n                workchain: info.block_id.workchain,\n                shard: info.block_id.shard,\n                seqno: info.block_id.seqno\n            },\n            timestampt: info.sync_utime\n        };\n    }\n    /**\n     * Open contract\n     * @param src source contract\n     * @returns contract\n     */\n    open(src) {\n        return (0, ton_core_1.openContract)(src, (args) => createProvider(this, args.address, args.init));\n    }\n    /**\n     * Create a provider\n     * @param address address\n     * @param init optional init\n     * @returns provider\n     */\n    provider(address, init) {\n        return createProvider(this, address, init);\n    }\n}\nexports.TonClient = TonClient;\n_TonClient_api = new WeakMap();\nfunction parseStack(src) {\n    let stack = [];\n    for (let s of src) {\n        if (s[0] === 'num') {\n            let val = s[1];\n            if (val.startsWith('-')) {\n                stack.push({ type: 'int', value: -BigInt(val.slice(1)) });\n            }\n            else {\n                stack.push({ type: 'int', value: BigInt(val) });\n            }\n        }\n        else if (s[0] === 'null') {\n            stack.push({ type: 'null' });\n        }\n        else if (s[0] === 'cell') {\n            stack.push({ type: 'cell', cell: ton_core_1.Cell.fromBoc(Buffer.from(s[1].bytes, 'base64'))[0] });\n        }\n        else if (s[0] === 'slice') {\n            stack.push({ type: 'slice', cell: ton_core_1.Cell.fromBoc(Buffer.from(s[1].bytes, 'base64'))[0] });\n        }\n        else if (s[0] === 'builder') {\n            stack.push({ type: 'builder', cell: ton_core_1.Cell.fromBoc(Buffer.from(s[1].bytes, 'base64'))[0] });\n        }\n        else {\n            throw Error('Unsupported stack item type: ' + s[0]);\n        }\n    }\n    return new ton_core_1.TupleReader(stack);\n}\nfunction createProvider(client, address, init) {\n    return {\n        async getState() {\n            let state = await client.getContractState(address);\n            let balance = state.balance;\n            let last = state.lastTransaction ? { lt: BigInt(state.lastTransaction.lt), hash: Buffer.from(state.lastTransaction.hash, 'base64') } : null;\n            let storage;\n            if (state.state === 'active') {\n                storage = {\n                    type: 'active',\n                    code: state.code ? state.code : null,\n                    data: state.data ? state.data : null,\n                };\n            }\n            else if (state.state === 'uninitialized') {\n                storage = {\n                    type: 'uninit',\n                };\n            }\n            else if (state.state === 'frozen') {\n                storage = {\n                    type: 'frozen',\n                    stateHash: Buffer.alloc(0),\n                };\n            }\n            else {\n                throw Error('Unsupported state');\n            }\n            return {\n                balance,\n                last,\n                state: storage,\n            };\n        },\n        async get(name, args) {\n            let method = await client.callGetMethod(address, name, args);\n            return { stack: method.stack };\n        },\n        async external(message) {\n            //\n            // Resolve init\n            //\n            let neededInit = null;\n            if (init && !await client.isContractDeployed(address)) {\n                neededInit = init;\n            }\n            //\n            // Send package\n            //\n            const ext = (0, ton_core_1.external)({\n                to: address,\n                init: neededInit ? { code: neededInit.code, data: neededInit.data } : null,\n                body: message\n            });\n            let boc = (0, ton_core_1.beginCell)()\n                .store((0, ton_core_1.storeMessage)(ext))\n                .endCell()\n                .toBoc();\n            await client.sendFile(boc);\n        },\n        async internal(via, message) {\n            // Resolve init\n            let neededInit = null;\n            if (init && (!await client.isContractDeployed(address))) {\n                neededInit = init;\n            }\n            // Resolve bounce\n            let bounce = true;\n            if (message.bounce !== null && message.bounce !== undefined) {\n                bounce = message.bounce;\n            }\n            // Resolve value\n            let value;\n            if (typeof message.value === 'string') {\n                value = (0, ton_core_1.toNano)(message.value);\n            }\n            else {\n                value = message.value;\n            }\n            // Resolve body\n            let body = null;\n            if (typeof message.body === 'string') {\n                body = (0, ton_core_1.comment)(message.body);\n            }\n            else if (message.body) {\n                body = message.body;\n            }\n            // Send internal message\n            await via.send({\n                to: address,\n                value,\n                bounce,\n                sendMode: message.sendMode,\n                init: neededInit,\n                body\n            });\n        }\n    };\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toUrlSafe = void 0;\nfunction toUrlSafe(src) {\n    while (src.indexOf('/') >= 0) {\n        src = src.replace('/', '_');\n    }\n    while (src.indexOf('+') >= 0) {\n        src = src.replace('+', '-');\n    }\n    while (src.indexOf('=') >= 0) {\n        src = src.replace('=', '');\n    }\n    return src;\n}\nexports.toUrlSafe = toUrlSafe;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _TonClient4_endpoint, _TonClient4_timeout, _TonClient4_adapter;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TonClient4 = void 0;\nconst axios_1 = __importDefault(require(\"axios\"));\nconst t = __importStar(require(\"io-ts\"));\nconst ton_core_1 = require(\"ton-core\");\nconst toUrlSafe_1 = require(\"../utils/toUrlSafe\");\nclass TonClient4 {\n    constructor(args) {\n        _TonClient4_endpoint.set(this, void 0);\n        _TonClient4_timeout.set(this, void 0);\n        _TonClient4_adapter.set(this, void 0);\n        __classPrivateFieldSet(this, _TonClient4_endpoint, args.endpoint, \"f\");\n        __classPrivateFieldSet(this, _TonClient4_timeout, args.timeout || 5000, \"f\");\n        __classPrivateFieldSet(this, _TonClient4_adapter, args.httpAdapter, \"f\");\n    }\n    /**\n     * Get Last Block\n     * @returns last block info\n     */\n    async getLastBlock() {\n        let res = await axios_1.default.get(__classPrivateFieldGet(this, _TonClient4_endpoint, \"f\") + '/block/latest', { adapter: __classPrivateFieldGet(this, _TonClient4_adapter, \"f\"), timeout: __classPrivateFieldGet(this, _TonClient4_timeout, \"f\") });\n        if (!lastBlockCodec.is(res.data)) {\n            throw Error('Mailformed response');\n        }\n        return res.data;\n    }\n    /**\n     * Get block info\n     * @param seqno block sequence number\n     * @returns block info\n     */\n    async getBlock(seqno) {\n        let res = await axios_1.default.get(__classPrivateFieldGet(this, _TonClient4_endpoint, \"f\") + '/block/' + seqno, { adapter: __classPrivateFieldGet(this, _TonClient4_adapter, \"f\"), timeout: __classPrivateFieldGet(this, _TonClient4_timeout, \"f\") });\n        if (!blockCodec.is(res.data)) {\n            throw Error('Mailformed response');\n        }\n        if (!res.data.exist) {\n            throw Error('Block is out of scope');\n        }\n        return res.data.block;\n    }\n    /**\n     * Get block info by unix timestamp\n     * @param ts unix timestamp\n     * @returns block info\n     */\n    async getBlockByUtime(ts) {\n        let res = await axios_1.default.get(__classPrivateFieldGet(this, _TonClient4_endpoint, \"f\") + '/block/utime/' + ts, { adapter: __classPrivateFieldGet(this, _TonClient4_adapter, \"f\"), timeout: __classPrivateFieldGet(this, _TonClient4_timeout, \"f\") });\n        if (!blockCodec.is(res.data)) {\n            throw Error('Mailformed response');\n        }\n        if (!res.data.exist) {\n            throw Error('Block is out of scope');\n        }\n        return res.data.block;\n    }\n    /**\n     * Get block info by unix timestamp\n     * @param seqno block sequence number\n     * @param address account address\n     * @returns account info\n     */\n    async getAccount(seqno, address) {\n        let res = await axios_1.default.get(__classPrivateFieldGet(this, _TonClient4_endpoint, \"f\") + '/block/' + seqno + '/' + address.toString({ urlSafe: true }), { adapter: __classPrivateFieldGet(this, _TonClient4_adapter, \"f\"), timeout: __classPrivateFieldGet(this, _TonClient4_timeout, \"f\") });\n        if (!accountCodec.is(res.data)) {\n            throw Error('Mailformed response');\n        }\n        return res.data;\n    }\n    /**\n     * Get account lite info (without code and data)\n     * @param seqno block sequence number\n     * @param address account address\n     * @returns account lite info\n     */\n    async getAccountLite(seqno, address) {\n        let res = await axios_1.default.get(__classPrivateFieldGet(this, _TonClient4_endpoint, \"f\") + '/block/' + seqno + '/' + address.toString({ urlSafe: true }) + '/lite', { adapter: __classPrivateFieldGet(this, _TonClient4_adapter, \"f\"), timeout: __classPrivateFieldGet(this, _TonClient4_timeout, \"f\") });\n        if (!accountLiteCodec.is(res.data)) {\n            throw Error('Mailformed response');\n        }\n        return res.data;\n    }\n    /**\n     * Check if account was updated since\n     * @param seqno block sequence number\n     * @param address account address\n     * @param lt account last transaction lt\n     * @returns account change info\n     */\n    async isAccountChanged(seqno, address, lt) {\n        let res = await axios_1.default.get(__classPrivateFieldGet(this, _TonClient4_endpoint, \"f\") + '/block/' + seqno + '/' + address.toString({ urlSafe: true }) + '/changed/' + lt.toString(10), { adapter: __classPrivateFieldGet(this, _TonClient4_adapter, \"f\"), timeout: __classPrivateFieldGet(this, _TonClient4_timeout, \"f\") });\n        if (!changedCodec.is(res.data)) {\n            throw Error('Mailformed response');\n        }\n        return res.data;\n    }\n    /**\n     * Load one unparsed account transaction\n     * @param seqno block sequence number\n     * @param address account address\n     * @param lt account last transaction lt\n     * @returns one unparsed transaction\n     */\n    async getTransaction(seqno, address, lt) {\n        const urladdr = address.toString({ urlSafe: true });\n        const urlpath = `/block/${seqno}/${urladdr}/tx/${lt.toString(10)}`;\n        const res = await axios_1.default.get(new URL(urlpath, __classPrivateFieldGet(this, _TonClient4_endpoint, \"f\")).href, { adapter: __classPrivateFieldGet(this, _TonClient4_adapter, \"f\"), timeout: __classPrivateFieldGet(this, _TonClient4_timeout, \"f\") });\n        if (!transactionCodec.is(res.data))\n            throw Error('Mailformed response');\n        const txcell = ton_core_1.Cell.fromBoc(Buffer.from(res.data.boc, 'base64'))[0];\n        return { tx: (0, ton_core_1.loadTransaction)(txcell.beginParse()), ...res.data };\n    }\n    /**\n     * Load unparsed account transactions\n     * @param address address\n     * @param lt last transaction lt\n     * @param hash last transaction hash\n     * @returns unparsed transactions\n     */\n    async getAccountTransactions(address, lt, hash) {\n        let res = await axios_1.default.get(__classPrivateFieldGet(this, _TonClient4_endpoint, \"f\") + '/account/' + address.toString({ urlSafe: true }) + '/tx/' + lt.toString(10) + '/' + (0, toUrlSafe_1.toUrlSafe)(hash.toString('base64')), { adapter: __classPrivateFieldGet(this, _TonClient4_adapter, \"f\"), timeout: __classPrivateFieldGet(this, _TonClient4_timeout, \"f\") });\n        if (!transactionsCodec.is(res.data)) {\n            throw Error('Mailformed response');\n        }\n        let data = res.data;\n        let tx = [];\n        let cells = ton_core_1.Cell.fromBoc(Buffer.from(data.boc, 'base64'));\n        for (let i = 0; i < data.blocks.length; i++) {\n            tx.push({\n                block: data.blocks[i],\n                tx: (0, ton_core_1.loadTransaction)(cells[i].beginParse())\n            });\n        }\n        return tx;\n    }\n    /**\n     * Get network config\n     * @param seqno block sequence number\n     * @param ids optional config ids\n     * @returns network config\n     */\n    async getConfig(seqno, ids) {\n        let tail = '';\n        if (ids && ids.length > 0) {\n            tail = '/' + [...ids].sort().join(',');\n        }\n        let res = await axios_1.default.get(__classPrivateFieldGet(this, _TonClient4_endpoint, \"f\") + '/block/' + seqno + '/config' + tail, { adapter: __classPrivateFieldGet(this, _TonClient4_adapter, \"f\"), timeout: __classPrivateFieldGet(this, _TonClient4_timeout, \"f\") });\n        if (!configCodec.is(res.data)) {\n            throw Error('Mailformed response');\n        }\n        return res.data;\n    }\n    /**\n     * Execute run method\n     * @param seqno block sequence number\n     * @param address account address\n     * @param name method name\n     * @param args method arguments\n     * @returns method result\n     */\n    async runMethod(seqno, address, name, args) {\n        let tail = args && args.length > 0 ? '/' + (0, toUrlSafe_1.toUrlSafe)((0, ton_core_1.serializeTuple)(args).toBoc({ idx: false, crc32: false }).toString('base64')) : '';\n        let url = __classPrivateFieldGet(this, _TonClient4_endpoint, \"f\") + '/block/' + seqno + '/' + address.toString({ urlSafe: true }) + '/run/' + name + tail;\n        let res = await axios_1.default.get(url, { adapter: __classPrivateFieldGet(this, _TonClient4_adapter, \"f\"), timeout: __classPrivateFieldGet(this, _TonClient4_timeout, \"f\") });\n        if (!runMethodCodec.is(res.data)) {\n            throw Error('Mailformed response');\n        }\n        return {\n            exitCode: res.data.exitCode,\n            result: res.data.resultRaw ? (0, ton_core_1.parseTuple)(ton_core_1.Cell.fromBoc(Buffer.from(res.data.resultRaw, 'base64'))[0]) : [],\n            resultRaw: res.data.resultRaw,\n            block: res.data.block,\n            shardBlock: res.data.shardBlock,\n        };\n    }\n    /**\n     * Send external message\n     * @param message message boc\n     * @returns message status\n     */\n    async sendMessage(message) {\n        let res = await axios_1.default.post(__classPrivateFieldGet(this, _TonClient4_endpoint, \"f\") + '/send', { boc: message.toString('base64') }, { adapter: __classPrivateFieldGet(this, _TonClient4_adapter, \"f\"), timeout: __classPrivateFieldGet(this, _TonClient4_timeout, \"f\") });\n        if (!sendCodec.is(res.data)) {\n            throw Error('Mailformed response');\n        }\n        return { status: res.data.status };\n    }\n    /**\n     * Open smart contract\n     * @param contract contract\n     * @returns opened contract\n     */\n    open(contract) {\n        return (0, ton_core_1.openContract)(contract, (args) => createProvider(this, null, args.address, args.init));\n    }\n    /**\n     * Open smart contract\n     * @param block block number\n     * @param contract contract\n     * @returns opened contract\n     */\n    openAt(block, contract) {\n        return (0, ton_core_1.openContract)(contract, (args) => createProvider(this, block, args.address, args.init));\n    }\n    /**\n     * Create provider\n     * @param address address\n     * @param init optional init data\n     * @returns provider\n     */\n    provider(address, init) {\n        return createProvider(this, null, address, init ? init : null);\n    }\n    /**\n     * Create provider at specified block number\n     * @param block block number\n     * @param address address\n     * @param init optional init data\n     * @returns provider\n     */\n    providerAt(block, address, init) {\n        return createProvider(this, block, address, init ? init : null);\n    }\n}\nexports.TonClient4 = TonClient4;\n_TonClient4_endpoint = new WeakMap(), _TonClient4_timeout = new WeakMap(), _TonClient4_adapter = new WeakMap();\nfunction createProvider(client, block, address, init) {\n    return {\n        async getState() {\n            // Resolve block\n            let sq = block;\n            if (sq === null) {\n                let res = await client.getLastBlock();\n                sq = res.last.seqno;\n            }\n            // Load state\n            let state = await client.getAccount(sq, address);\n            // Convert state\n            let last = state.account.last ? { lt: BigInt(state.account.last.lt), hash: Buffer.from(state.account.last.hash, 'base64') } : null;\n            let storage;\n            if (state.account.state.type === 'active') {\n                storage = {\n                    type: 'active',\n                    code: state.account.state.code ? Buffer.from(state.account.state.code, 'base64') : null,\n                    data: state.account.state.data ? Buffer.from(state.account.state.data, 'base64') : null,\n                };\n            }\n            else if (state.account.state.type === 'uninit') {\n                storage = {\n                    type: 'uninit',\n                };\n            }\n            else if (state.account.state.type === 'frozen') {\n                storage = {\n                    type: 'frozen',\n                    stateHash: Buffer.from(state.account.state.stateHash, 'base64'),\n                };\n            }\n            else {\n                throw Error('Unsupported state');\n            }\n            return {\n                balance: BigInt(state.account.balance.coins),\n                last: last,\n                state: storage\n            };\n        },\n        async get(name, args) {\n            let sq = block;\n            if (sq === null) {\n                let res = await client.getLastBlock();\n                sq = res.last.seqno;\n            }\n            let method = await client.runMethod(sq, address, name, args);\n            if (method.exitCode !== 0 && method.exitCode !== 1) {\n                throw Error('Exit code: ' + method.exitCode);\n            }\n            return {\n                stack: new ton_core_1.TupleReader(method.result),\n            };\n        },\n        async external(message) {\n            // Resolve last\n            let last = await client.getLastBlock();\n            // Resolve init\n            let neededInit = null;\n            if (init && (await client.getAccountLite(last.last.seqno, address)).account.state.type !== 'active') {\n                neededInit = init;\n            }\n            // Send with state init\n            const ext = (0, ton_core_1.external)({\n                to: address,\n                init: neededInit ? { code: neededInit.code, data: neededInit.data } : null,\n                body: message\n            });\n            let pkg = (0, ton_core_1.beginCell)()\n                .store((0, ton_core_1.storeMessage)(ext))\n                .endCell()\n                .toBoc();\n            await client.sendMessage(pkg);\n        },\n        async internal(via, message) {\n            // Resolve last\n            let last = await client.getLastBlock();\n            // Resolve init\n            let neededInit = null;\n            if (init && (await client.getAccountLite(last.last.seqno, address)).account.state.type !== 'active') {\n                neededInit = init;\n            }\n            // Resolve bounce\n            let bounce = true;\n            if (message.bounce !== null && message.bounce !== undefined) {\n                bounce = message.bounce;\n            }\n            // Resolve value\n            let value;\n            if (typeof message.value === 'string') {\n                value = (0, ton_core_1.toNano)(message.value);\n            }\n            else {\n                value = message.value;\n            }\n            // Resolve body\n            let body = null;\n            if (typeof message.body === 'string') {\n                body = (0, ton_core_1.comment)(message.body);\n            }\n            else if (message.body) {\n                body = message.body;\n            }\n            // Send internal message\n            await via.send({\n                to: address,\n                value,\n                bounce,\n                sendMode: message.sendMode,\n                init: neededInit,\n                body\n            });\n        }\n    };\n}\n//\n// Codecs\n//\nconst lastBlockCodec = t.type({\n    last: t.type({\n        seqno: t.number,\n        shard: t.string,\n        workchain: t.number,\n        fileHash: t.string,\n        rootHash: t.string\n    }),\n    init: t.type({\n        fileHash: t.string,\n        rootHash: t.string\n    }),\n    stateRootHash: t.string,\n    now: t.number\n});\nconst blockCodec = t.union([t.type({\n        exist: t.literal(false)\n    }), t.type({\n        exist: t.literal(true),\n        block: t.type({\n            shards: t.array(t.type({\n                workchain: t.number,\n                seqno: t.number,\n                shard: t.string,\n                rootHash: t.string,\n                fileHash: t.string,\n                transactions: t.array(t.type({\n                    account: t.string,\n                    hash: t.string,\n                    lt: t.string\n                }))\n            }))\n        })\n    })]);\n// {\"lastPaid\":1653099243,\"duePayment\":null,\"used\":{\"bits\":119,\"cells\":1,\"publicCells\":0}}\nconst storageStatCodec = t.type({\n    lastPaid: t.number,\n    duePayment: t.union([t.null, t.string]),\n    used: t.type({\n        bits: t.number,\n        cells: t.number,\n        publicCells: t.number\n    })\n});\nconst accountCodec = t.type({\n    account: t.type({\n        state: t.union([\n            t.type({ type: t.literal('uninit') }),\n            t.type({ type: t.literal('active'), code: t.union([t.string, t.null]), data: t.union([t.string, t.null]) }),\n            t.type({ type: t.literal('frozen'), stateHash: t.string })\n        ]),\n        balance: t.type({\n            coins: t.string\n        }),\n        last: t.union([\n            t.null,\n            t.type({\n                lt: t.string,\n                hash: t.string\n            })\n        ]),\n        storageStat: t.union([t.null, storageStatCodec])\n    }),\n    block: t.type({\n        workchain: t.number,\n        seqno: t.number,\n        shard: t.string,\n        rootHash: t.string,\n        fileHash: t.string\n    })\n});\nconst accountLiteCodec = t.type({\n    account: t.type({\n        state: t.union([\n            t.type({ type: t.literal('uninit') }),\n            t.type({ type: t.literal('active'), codeHash: t.string, dataHash: t.string }),\n            t.type({ type: t.literal('frozen'), stateHash: t.string })\n        ]),\n        balance: t.type({\n            coins: t.string\n        }),\n        last: t.union([\n            t.null,\n            t.type({\n                lt: t.string,\n                hash: t.string\n            })\n        ]),\n        storageStat: t.union([t.null, storageStatCodec])\n    })\n});\nconst changedCodec = t.type({\n    changed: t.boolean,\n    block: t.type({\n        workchain: t.number,\n        seqno: t.number,\n        shard: t.string,\n        rootHash: t.string,\n        fileHash: t.string\n    })\n});\nconst runMethodCodec = t.type({\n    exitCode: t.number,\n    resultRaw: t.union([t.string, t.null]),\n    block: t.type({\n        workchain: t.number,\n        seqno: t.number,\n        shard: t.string,\n        rootHash: t.string,\n        fileHash: t.string\n    }),\n    shardBlock: t.type({\n        workchain: t.number,\n        seqno: t.number,\n        shard: t.string,\n        rootHash: t.string,\n        fileHash: t.string\n    })\n});\nconst configCodec = t.type({\n    config: t.type({\n        cell: t.string,\n        address: t.string,\n        globalBalance: t.type({\n            coins: t.string\n        })\n    })\n});\nconst sendCodec = t.type({\n    status: t.number\n});\nconst transactionsCodec = t.type({\n    blocks: t.array(t.type({\n        workchain: t.number,\n        seqno: t.number,\n        shard: t.string,\n        rootHash: t.string,\n        fileHash: t.string\n    })),\n    boc: t.string\n});\nconst transactionCodec = t.type({\n    block: t.type({\n        workchain: t.number,\n        seqno: t.number,\n        shard: t.string,\n        rootHash: t.string,\n    }),\n    boc: t.string,\n    proof: t.string\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createWalletTransferV4 = exports.createWalletTransferV3 = exports.createWalletTransferV2 = exports.createWalletTransferV1 = void 0;\nconst ton_core_1 = require(\"ton-core\");\nconst ton_crypto_1 = require(\"ton-crypto\");\nfunction createWalletTransferV1(args) {\n    // Create message\n    let signingMessage = (0, ton_core_1.beginCell)()\n        .storeUint(args.seqno, 32);\n    if (args.message) {\n        signingMessage.storeUint(args.sendMode, 8);\n        signingMessage.storeRef((0, ton_core_1.beginCell)().store((0, ton_core_1.storeMessageRelaxed)(args.message)));\n    }\n    // Sign message\n    let signature = (0, ton_crypto_1.sign)(signingMessage.endCell().hash(), args.secretKey);\n    // Body\n    const body = (0, ton_core_1.beginCell)()\n        .storeBuffer(signature)\n        .storeBuilder(signingMessage)\n        .endCell();\n    return body;\n}\nexports.createWalletTransferV1 = createWalletTransferV1;\nfunction createWalletTransferV2(args) {\n    // Check number of messages\n    if (args.messages.length > 4) {\n        throw new Error(\"Maximum number of messages in a single transfer is 4\");\n    }\n    // Create message\n    let signingMessage = (0, ton_core_1.beginCell)()\n        .storeUint(args.seqno, 32);\n    if (args.seqno === 0) {\n        for (let i = 0; i < 32; i++) {\n            signingMessage.storeBit(1);\n        }\n    }\n    else {\n        signingMessage.storeUint(args.timeout || Math.floor(Date.now() / 1e3) + 60, 32); // Default timeout: 60 seconds\n    }\n    for (let m of args.messages) {\n        signingMessage.storeUint(args.sendMode, 8);\n        signingMessage.storeRef((0, ton_core_1.beginCell)().store((0, ton_core_1.storeMessageRelaxed)(m)));\n    }\n    // Sign message\n    let signature = (0, ton_crypto_1.sign)(signingMessage.endCell().hash(), args.secretKey);\n    // Body\n    const body = (0, ton_core_1.beginCell)()\n        .storeBuffer(signature)\n        .storeBuilder(signingMessage)\n        .endCell();\n    return body;\n}\nexports.createWalletTransferV2 = createWalletTransferV2;\nfunction createWalletTransferV3(args) {\n    // Check number of messages\n    if (args.messages.length > 4) {\n        throw new Error(\"Maximum number of messages in a single transfer is 4\");\n    }\n    // Create message to sign\n    let signingMessage = (0, ton_core_1.beginCell)()\n        .storeUint(args.walletId, 32);\n    if (args.seqno === 0) {\n        for (let i = 0; i < 32; i++) {\n            signingMessage.storeBit(1);\n        }\n    }\n    else {\n        signingMessage.storeUint(args.timeout || Math.floor(Date.now() / 1e3) + 60, 32); // Default timeout: 60 seconds\n    }\n    signingMessage.storeUint(args.seqno, 32);\n    for (let m of args.messages) {\n        signingMessage.storeUint(args.sendMode, 8);\n        signingMessage.storeRef((0, ton_core_1.beginCell)().store((0, ton_core_1.storeMessageRelaxed)(m)));\n    }\n    // Sign message\n    let signature = (0, ton_crypto_1.sign)(signingMessage.endCell().hash(), args.secretKey);\n    // Body\n    const body = (0, ton_core_1.beginCell)()\n        .storeBuffer(signature)\n        .storeBuilder(signingMessage)\n        .endCell();\n    return body;\n}\nexports.createWalletTransferV3 = createWalletTransferV3;\nfunction createWalletTransferV4(args) {\n    // Check number of messages\n    if (args.messages.length > 4) {\n        throw new Error(\"Maximum number of messages in a single transfer is 4\");\n    }\n    let signingMessage = (0, ton_core_1.beginCell)()\n        .storeUint(args.walletId, 32);\n    if (args.seqno === 0) {\n        for (let i = 0; i < 32; i++) {\n            signingMessage.storeBit(1);\n        }\n    }\n    else {\n        signingMessage.storeUint(args.timeout || Math.floor(Date.now() / 1e3) + 60, 32); // Default timeout: 60 seconds\n    }\n    signingMessage.storeUint(args.seqno, 32);\n    signingMessage.storeUint(0, 8); // Simple order\n    for (let m of args.messages) {\n        signingMessage.storeUint(args.sendMode, 8);\n        signingMessage.storeRef((0, ton_core_1.beginCell)().store((0, ton_core_1.storeMessageRelaxed)(m)));\n    }\n    // Sign message\n    let signature = (0, ton_crypto_1.sign)(signingMessage.endCell().hash(), args.secretKey);\n    // Body\n    const body = (0, ton_core_1.beginCell)()\n        .storeBuffer(signature)\n        .storeBuilder(signingMessage)\n        .endCell();\n    return body;\n}\nexports.createWalletTransferV4 = createWalletTransferV4;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletContractV1R1 = void 0;\nconst ton_core_1 = require(\"ton-core\");\nconst createWalletTransfer_1 = require(\"./signing/createWalletTransfer\");\nclass WalletContractV1R1 {\n    constructor(workchain, publicKey) {\n        this.workchain = workchain;\n        this.publicKey = publicKey;\n        // Build initial code and data\n        let code = ton_core_1.Cell.fromBoc(Buffer.from('te6cckEBAQEARAAAhP8AIN2k8mCBAgDXGCDXCx/tRNDTH9P/0VESuvKhIvkBVBBE+RDyovgAAdMfMSDXSpbTB9QC+wDe0aTIyx/L/8ntVEH98Ik=', 'base64'))[0];\n        let data = (0, ton_core_1.beginCell)()\n            .storeUint(0, 32) // Seqno\n            .storeBuffer(publicKey)\n            .endCell();\n        this.init = { code, data };\n        this.address = (0, ton_core_1.contractAddress)(workchain, { code, data });\n    }\n    static create(args) {\n        return new WalletContractV1R1(args.workchain, args.publicKey);\n    }\n    /**\n     * Get Wallet Balance\n     */\n    async getBalance(provider) {\n        let state = await provider.getState();\n        return state.balance;\n    }\n    /**\n     * Get Wallet Seqno\n     */\n    async getSeqno(provider) {\n        let state = await provider.getState();\n        if (state.state.type === 'active') {\n            return ton_core_1.Cell.fromBoc(state.state.data)[0].beginParse().loadUint(32);\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * Send signed transfer\n     */\n    async send(provider, message) {\n        await provider.external(message);\n    }\n    /**\n     * Sign and send transfer\n     */\n    async sendTransfer(provider, args) {\n        let transfer = this.createTransfer(args);\n        await this.send(provider, transfer);\n    }\n    /**\n     * Create signed transfer\n     */\n    createTransfer(args) {\n        let sendMode = ton_core_1.SendMode.PAY_GAS_SEPARATLY;\n        if (args.sendMode !== null && args.sendMode !== undefined) {\n            sendMode = args.sendMode;\n        }\n        return (0, createWalletTransfer_1.createWalletTransferV1)({\n            seqno: args.seqno,\n            sendMode,\n            secretKey: args.secretKey,\n            message: args.message\n        });\n    }\n    /**\n     * Create sender\n     */\n    sender(provider, secretKey) {\n        return {\n            send: async (args) => {\n                let seqno = await this.getSeqno(provider);\n                let transfer = this.createTransfer({\n                    seqno,\n                    secretKey,\n                    sendMode: args.sendMode,\n                    message: (0, ton_core_1.internal)({\n                        to: args.to,\n                        value: args.value,\n                        init: args.init,\n                        body: args.body,\n                        bounce: args.bounce\n                    })\n                });\n                await this.send(provider, transfer);\n            }\n        };\n    }\n}\nexports.WalletContractV1R1 = WalletContractV1R1;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletContractV1R2 = void 0;\nconst ton_core_1 = require(\"ton-core\");\nconst createWalletTransfer_1 = require(\"./signing/createWalletTransfer\");\nclass WalletContractV1R2 {\n    constructor(workchain, publicKey) {\n        this.workchain = workchain;\n        this.publicKey = publicKey;\n        // Build initial code and data\n        let code = ton_core_1.Cell.fromBoc(Buffer.from('te6cckEBAQEAUwAAov8AIN0gggFMl7qXMO1E0NcLH+Ck8mCBAgDXGCDXCx/tRNDTH9P/0VESuvKhIvkBVBBE+RDyovgAAdMfMSDXSpbTB9QC+wDe0aTIyx/L/8ntVNDieG8=', 'base64'))[0];\n        let data = (0, ton_core_1.beginCell)()\n            .storeUint(0, 32) // Seqno\n            .storeBuffer(publicKey)\n            .endCell();\n        this.init = { code, data };\n        this.address = (0, ton_core_1.contractAddress)(workchain, { code, data });\n    }\n    static create(args) {\n        return new WalletContractV1R2(args.workchain, args.publicKey);\n    }\n    /**\n     * Get Wallet Balance\n     */\n    async getBalance(provider) {\n        let state = await provider.getState();\n        return state.balance;\n    }\n    /**\n     * Get Wallet Seqno\n     */\n    async getSeqno(provider) {\n        let state = await provider.getState();\n        if (state.state.type === 'active') {\n            let res = await provider.get('seqno', []);\n            return res.stack.readNumber();\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * Send signed transfer\n     */\n    async send(provider, message) {\n        await provider.external(message);\n    }\n    /**\n     * Sign and send transfer\n     */\n    async sendTransfer(provider, args) {\n        let transfer = this.createTransfer(args);\n        await this.send(provider, transfer);\n    }\n    /**\n     * Create signed transfer\n     */\n    createTransfer(args) {\n        let sendMode = ton_core_1.SendMode.PAY_GAS_SEPARATLY;\n        if (args.sendMode !== null && args.sendMode !== undefined) {\n            sendMode = args.sendMode;\n        }\n        return (0, createWalletTransfer_1.createWalletTransferV1)({\n            seqno: args.seqno,\n            sendMode,\n            secretKey: args.secretKey,\n            message: args.message\n        });\n    }\n    /**\n     * Create sender\n     */\n    sender(provider, secretKey) {\n        return {\n            send: async (args) => {\n                let seqno = await this.getSeqno(provider);\n                let transfer = this.createTransfer({\n                    seqno,\n                    secretKey,\n                    sendMode: args.sendMode,\n                    message: (0, ton_core_1.internal)({\n                        to: args.to,\n                        value: args.value,\n                        init: args.init,\n                        body: args.body,\n                        bounce: args.bounce\n                    })\n                });\n                await this.send(provider, transfer);\n            }\n        };\n    }\n}\nexports.WalletContractV1R2 = WalletContractV1R2;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletContractV1R3 = void 0;\nconst ton_core_1 = require(\"ton-core\");\nconst createWalletTransfer_1 = require(\"./signing/createWalletTransfer\");\nclass WalletContractV1R3 {\n    constructor(workchain, publicKey) {\n        this.workchain = workchain;\n        this.publicKey = publicKey;\n        // Build initial code and data\n        let code = ton_core_1.Cell.fromBoc(Buffer.from('te6cckEBAQEAXwAAuv8AIN0gggFMl7ohggEznLqxnHGw7UTQ0x/XC//jBOCk8mCBAgDXGCDXCx/tRNDTH9P/0VESuvKhIvkBVBBE+RDyovgAAdMfMSDXSpbTB9QC+wDe0aTIyx/L/8ntVLW4bkI=', 'base64'))[0];\n        let data = (0, ton_core_1.beginCell)()\n            .storeUint(0, 32) // Seqno\n            .storeBuffer(publicKey)\n            .endCell();\n        this.init = { code, data };\n        this.address = (0, ton_core_1.contractAddress)(workchain, { code, data });\n    }\n    static create(args) {\n        return new WalletContractV1R3(args.workchain, args.publicKey);\n    }\n    /**\n     * Get Wallet Balance\n     */\n    async getBalance(provider) {\n        let state = await provider.getState();\n        return state.balance;\n    }\n    /**\n     * Get Wallet Seqno\n     */\n    async getSeqno(provider) {\n        let state = await provider.getState();\n        if (state.state.type === 'active') {\n            let res = await provider.get('seqno', []);\n            return res.stack.readNumber();\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * Send signed transfer\n     */\n    async send(executor, message) {\n        await executor.external(message);\n    }\n    /**\n     * Sign and send transfer\n     */\n    async sendTransfer(provider, args) {\n        let transfer = this.createTransfer(args);\n        await this.send(provider, transfer);\n    }\n    /**\n     * Create signed transfer\n     */\n    createTransfer(args) {\n        let sendMode = ton_core_1.SendMode.PAY_GAS_SEPARATLY;\n        if (args.sendMode !== null && args.sendMode !== undefined) {\n            sendMode = args.sendMode;\n        }\n        return (0, createWalletTransfer_1.createWalletTransferV1)({\n            seqno: args.seqno,\n            sendMode: sendMode,\n            secretKey: args.secretKey,\n            message: args.message\n        });\n    }\n    /**\n     * Create sender\n     */\n    sender(provider, secretKey) {\n        return {\n            send: async (args) => {\n                let seqno = await this.getSeqno(provider);\n                let transfer = this.createTransfer({\n                    seqno,\n                    secretKey,\n                    sendMode: args.sendMode,\n                    message: (0, ton_core_1.internal)({\n                        to: args.to,\n                        value: args.value,\n                        init: args.init,\n                        body: args.body,\n                        bounce: args.bounce\n                    })\n                });\n                await this.send(provider, transfer);\n            }\n        };\n    }\n}\nexports.WalletContractV1R3 = WalletContractV1R3;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletContractV2R1 = void 0;\nconst ton_core_1 = require(\"ton-core\");\nconst createWalletTransfer_1 = require(\"./signing/createWalletTransfer\");\nclass WalletContractV2R1 {\n    constructor(workchain, publicKey) {\n        this.workchain = workchain;\n        this.publicKey = publicKey;\n        // Build initial code and data\n        let code = ton_core_1.Cell.fromBoc(Buffer.from('te6cckEBAQEAVwAAqv8AIN0gggFMl7qXMO1E0NcLH+Ck8mCDCNcYINMf0x8B+CO78mPtRNDTH9P/0VExuvKhA/kBVBBC+RDyovgAApMg10qW0wfUAvsA6NGkyMsfy//J7VShNwu2', 'base64'))[0];\n        let data = (0, ton_core_1.beginCell)()\n            .storeUint(0, 32) // Seqno\n            .storeBuffer(publicKey)\n            .endCell();\n        this.init = { code, data };\n        this.address = (0, ton_core_1.contractAddress)(workchain, { code, data });\n    }\n    static create(args) {\n        return new WalletContractV2R1(args.workchain, args.publicKey);\n    }\n    /**\n     * Get Wallet Balance\n     */\n    async getBalance(provider) {\n        let state = await provider.getState();\n        return state.balance;\n    }\n    /**\n     * Get Wallet Seqno\n     */\n    async getSeqno(provider) {\n        let state = await provider.getState();\n        if (state.state.type === 'active') {\n            let res = await provider.get('seqno', []);\n            return res.stack.readNumber();\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * Send signed transfer\n     */\n    async send(provider, message) {\n        await provider.external(message);\n    }\n    /**\n     * Sign and send transfer\n     */\n    async sendTransfer(provider, args) {\n        let transfer = this.createTransfer(args);\n        await this.send(provider, transfer);\n    }\n    /**\n     * Create signed transfer\n     */\n    createTransfer(args) {\n        let sendMode = ton_core_1.SendMode.PAY_GAS_SEPARATLY;\n        if (args.sendMode !== null && args.sendMode !== undefined) {\n            sendMode = args.sendMode;\n        }\n        return (0, createWalletTransfer_1.createWalletTransferV2)({\n            seqno: args.seqno,\n            sendMode,\n            secretKey: args.secretKey,\n            messages: args.messages,\n            timeout: args.timeout\n        });\n    }\n    /**\n     * Create sender\n     */\n    sender(provider, secretKey) {\n        return {\n            send: async (args) => {\n                let seqno = await this.getSeqno(provider);\n                let transfer = this.createTransfer({\n                    seqno,\n                    secretKey,\n                    sendMode: args.sendMode,\n                    messages: [(0, ton_core_1.internal)({\n                            to: args.to,\n                            value: args.value,\n                            init: args.init,\n                            body: args.body,\n                            bounce: args.bounce\n                        })]\n                });\n                await this.send(provider, transfer);\n            }\n        };\n    }\n}\nexports.WalletContractV2R1 = WalletContractV2R1;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletContractV2R2 = void 0;\nconst ton_core_1 = require(\"ton-core\");\nconst createWalletTransfer_1 = require(\"./signing/createWalletTransfer\");\nclass WalletContractV2R2 {\n    constructor(workchain, publicKey) {\n        this.workchain = workchain;\n        this.publicKey = publicKey;\n        // Build initial code and data\n        let code = ton_core_1.Cell.fromBoc(Buffer.from('te6cckEBAQEAYwAAwv8AIN0gggFMl7ohggEznLqxnHGw7UTQ0x/XC//jBOCk8mCDCNcYINMf0x8B+CO78mPtRNDTH9P/0VExuvKhA/kBVBBC+RDyovgAApMg10qW0wfUAvsA6NGkyMsfy//J7VQETNeh', 'base64'))[0];\n        let data = (0, ton_core_1.beginCell)()\n            .storeUint(0, 32) // Seqno\n            .storeBuffer(publicKey)\n            .endCell();\n        this.init = { code, data };\n        this.address = (0, ton_core_1.contractAddress)(workchain, { code, data });\n    }\n    static create(args) {\n        return new WalletContractV2R2(args.workchain, args.publicKey);\n    }\n    /**\n     * Get Wallet Balance\n     */\n    async getBalance(provider) {\n        let state = await provider.getState();\n        return state.balance;\n    }\n    /**\n     * Get Wallet Seqno\n     */\n    async getSeqno(provider) {\n        let state = await provider.getState();\n        if (state.state.type === 'active') {\n            let res = await provider.get('seqno', []);\n            return res.stack.readNumber();\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * Send signed transfer\n     */\n    async send(provider, message) {\n        await provider.external(message);\n    }\n    /**\n     * Sign and send transfer\n     */\n    async sendTransfer(provider, args) {\n        let transfer = this.createTransfer(args);\n        await this.send(provider, transfer);\n    }\n    /**\n     * Create signed transfer\n     */\n    createTransfer(args) {\n        let sendMode = ton_core_1.SendMode.PAY_GAS_SEPARATLY;\n        if (args.sendMode !== null && args.sendMode !== undefined) {\n            sendMode = args.sendMode;\n        }\n        return (0, createWalletTransfer_1.createWalletTransferV2)({\n            seqno: args.seqno,\n            sendMode,\n            secretKey: args.secretKey,\n            messages: args.messages,\n            timeout: args.timeout\n        });\n    }\n    /**\n     * Create sender\n     */\n    sender(provider, secretKey) {\n        return {\n            send: async (args) => {\n                let seqno = await this.getSeqno(provider);\n                let transfer = this.createTransfer({\n                    seqno,\n                    secretKey,\n                    sendMode: args.sendMode,\n                    messages: [(0, ton_core_1.internal)({\n                            to: args.to,\n                            value: args.value,\n                            init: args.init,\n                            body: args.body,\n                            bounce: args.bounce\n                        })]\n                });\n                await this.send(provider, transfer);\n            }\n        };\n    }\n}\nexports.WalletContractV2R2 = WalletContractV2R2;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletContractV3R1 = void 0;\nconst ton_core_1 = require(\"ton-core\");\nconst createWalletTransfer_1 = require(\"./signing/createWalletTransfer\");\nclass WalletContractV3R1 {\n    constructor(workchain, publicKey, walletId) {\n        // Resolve parameters\n        this.workchain = workchain;\n        this.publicKey = publicKey;\n        if (walletId !== null && walletId !== undefined) {\n            this.walletId = walletId;\n        }\n        else {\n            this.walletId = 698983191 + workchain;\n        }\n        // Build initial code and data\n        let code = ton_core_1.Cell.fromBoc(Buffer.from('te6cckEBAQEAYgAAwP8AIN0gggFMl7qXMO1E0NcLH+Ck8mCDCNcYINMf0x/TH/gjE7vyY+1E0NMf0x/T/9FRMrryoVFEuvKiBPkBVBBV+RDyo/gAkyDXSpbTB9QC+wDo0QGkyMsfyx/L/8ntVD++buA=', 'base64'))[0];\n        let data = (0, ton_core_1.beginCell)()\n            .storeUint(0, 32) // Seqno\n            .storeUint(this.walletId, 32)\n            .storeBuffer(publicKey)\n            .endCell();\n        this.init = { code, data };\n        this.address = (0, ton_core_1.contractAddress)(workchain, { code, data });\n    }\n    static create(args) {\n        return new WalletContractV3R1(args.workchain, args.publicKey, args.walletId);\n    }\n    /**\n     * Get wallet balance\n     */\n    async getBalance(provider) {\n        let state = await provider.getState();\n        return state.balance;\n    }\n    /**\n     * Get Wallet Seqno\n     */\n    async getSeqno(provider) {\n        let state = await provider.getState();\n        if (state.state.type === 'active') {\n            let res = await provider.get('seqno', []);\n            return res.stack.readNumber();\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * Send signed transfer\n     */\n    async send(provider, message) {\n        await provider.external(message);\n    }\n    /**\n     * Sign and send transfer\n     */\n    async sendTransfer(provider, args) {\n        let transfer = this.createTransfer(args);\n        await this.send(provider, transfer);\n    }\n    /**\n     * Create transfer\n     */\n    createTransfer(args) {\n        let sendMode = ton_core_1.SendMode.PAY_GAS_SEPARATLY;\n        if (args.sendMode !== null && args.sendMode !== undefined) {\n            sendMode = args.sendMode;\n        }\n        return (0, createWalletTransfer_1.createWalletTransferV3)({\n            seqno: args.seqno,\n            sendMode,\n            secretKey: args.secretKey,\n            messages: args.messages,\n            timeout: args.timeout,\n            walletId: this.walletId\n        });\n    }\n    /**\n     * Create sender\n     */\n    sender(provider, secretKey) {\n        return {\n            send: async (args) => {\n                let seqno = await this.getSeqno(provider);\n                let transfer = this.createTransfer({\n                    seqno,\n                    secretKey,\n                    sendMode: args.sendMode,\n                    messages: [(0, ton_core_1.internal)({\n                            to: args.to,\n                            value: args.value,\n                            init: args.init,\n                            body: args.body,\n                            bounce: args.bounce\n                        })]\n                });\n                await this.send(provider, transfer);\n            }\n        };\n    }\n}\nexports.WalletContractV3R1 = WalletContractV3R1;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletContractV3R2 = void 0;\nconst ton_core_1 = require(\"ton-core\");\nconst createWalletTransfer_1 = require(\"./signing/createWalletTransfer\");\nclass WalletContractV3R2 {\n    constructor(workchain, publicKey, walletId) {\n        // Resolve parameters\n        this.workchain = workchain;\n        this.publicKey = publicKey;\n        if (walletId !== null && walletId !== undefined) {\n            this.walletId = walletId;\n        }\n        else {\n            this.walletId = 698983191 + workchain;\n        }\n        // Build initial code and data\n        let code = ton_core_1.Cell.fromBoc(Buffer.from('te6cckEBAQEAcQAA3v8AIN0gggFMl7ohggEznLqxn3Gw7UTQ0x/THzHXC//jBOCk8mCDCNcYINMf0x/TH/gjE7vyY+1E0NMf0x/T/9FRMrryoVFEuvKiBPkBVBBV+RDyo/gAkyDXSpbTB9QC+wDo0QGkyMsfyx/L/8ntVBC9ba0=', 'base64'))[0];\n        let data = (0, ton_core_1.beginCell)()\n            .storeUint(0, 32) // Seqno\n            .storeUint(this.walletId, 32)\n            .storeBuffer(publicKey)\n            .endCell();\n        this.init = { code, data };\n        this.address = (0, ton_core_1.contractAddress)(workchain, { code, data });\n    }\n    static create(args) {\n        return new WalletContractV3R2(args.workchain, args.publicKey, args.walletId);\n    }\n    /**\n     * Get wallet balance\n     */\n    async getBalance(provider) {\n        let state = await provider.getState();\n        return state.balance;\n    }\n    /**\n     * Get Wallet Seqno\n     */\n    async getSeqno(provider) {\n        let state = await provider.getState();\n        if (state.state.type === 'active') {\n            let res = await provider.get('seqno', []);\n            return res.stack.readNumber();\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * Send signed transfer\n     */\n    async send(provider, message) {\n        await provider.external(message);\n    }\n    /**\n     * Sign and send transfer\n     */\n    async sendTransfer(provider, args) {\n        let transfer = this.createTransfer(args);\n        await this.send(provider, transfer);\n    }\n    /**\n     * Create transfer\n     */\n    createTransfer(args) {\n        let sendMode = ton_core_1.SendMode.PAY_GAS_SEPARATLY;\n        if (args.sendMode !== null && args.sendMode !== undefined) {\n            sendMode = args.sendMode;\n        }\n        return (0, createWalletTransfer_1.createWalletTransferV3)({\n            seqno: args.seqno,\n            sendMode,\n            secretKey: args.secretKey,\n            messages: args.messages,\n            timeout: args.timeout,\n            walletId: this.walletId\n        });\n    }\n    /**\n     * Create sender\n     */\n    sender(provider, secretKey) {\n        return {\n            send: async (args) => {\n                let seqno = await this.getSeqno(provider);\n                let transfer = this.createTransfer({\n                    seqno,\n                    secretKey,\n                    sendMode: args.sendMode,\n                    messages: [(0, ton_core_1.internal)({\n                            to: args.to,\n                            value: args.value,\n                            init: args.init,\n                            body: args.body,\n                            bounce: args.bounce\n                        })]\n                });\n                await this.send(provider, transfer);\n            }\n        };\n    }\n}\nexports.WalletContractV3R2 = WalletContractV3R2;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletContractV4 = void 0;\nconst ton_core_1 = require(\"ton-core\");\nconst createWalletTransfer_1 = require(\"./signing/createWalletTransfer\");\nclass WalletContractV4 {\n    constructor(workchain, publicKey, walletId) {\n        // Resolve parameters\n        this.workchain = workchain;\n        this.publicKey = publicKey;\n        if (walletId !== null && walletId !== undefined) {\n            this.walletId = walletId;\n        }\n        else {\n            this.walletId = 698983191 + workchain;\n        }\n        // Build initial code and data\n        let code = ton_core_1.Cell.fromBoc(Buffer.from('te6ccgECFAEAAtQAART/APSkE/S88sgLAQIBIAIDAgFIBAUE+PKDCNcYINMf0x/THwL4I7vyZO1E0NMf0x/T//QE0VFDuvKhUVG68qIF+QFUEGT5EPKj+AAkpMjLH1JAyx9SMMv/UhD0AMntVPgPAdMHIcAAn2xRkyDXSpbTB9QC+wDoMOAhwAHjACHAAuMAAcADkTDjDQOkyMsfEssfy/8QERITAubQAdDTAyFxsJJfBOAi10nBIJJfBOAC0x8hghBwbHVnvSKCEGRzdHK9sJJfBeAD+kAwIPpEAcjKB8v/ydDtRNCBAUDXIfQEMFyBAQj0Cm+hMbOSXwfgBdM/yCWCEHBsdWe6kjgw4w0DghBkc3RyupJfBuMNBgcCASAICQB4AfoA9AQw+CdvIjBQCqEhvvLgUIIQcGx1Z4MesXCAGFAEywUmzxZY+gIZ9ADLaRfLH1Jgyz8gyYBA+wAGAIpQBIEBCPRZMO1E0IEBQNcgyAHPFvQAye1UAXKwjiOCEGRzdHKDHrFwgBhQBcsFUAPPFiP6AhPLassfyz/JgED7AJJfA+ICASAKCwBZvSQrb2omhAgKBrkPoCGEcNQICEekk30pkQzmkD6f+YN4EoAbeBAUiYcVnzGEAgFYDA0AEbjJftRNDXCx+AA9sp37UTQgQFA1yH0BDACyMoHy//J0AGBAQj0Cm+hMYAIBIA4PABmtznaiaEAga5Drhf/AABmvHfaiaEAQa5DrhY/AAG7SB/oA1NQi+QAFyMoHFcv/ydB3dIAYyMsFywIizxZQBfoCFMtrEszMyXP7AMhAFIEBCPRR8qcCAHCBAQjXGPoA0z/IVCBHgQEI9FHyp4IQbm90ZXB0gBjIywXLAlAGzxZQBPoCFMtqEssfyz/Jc/sAAgBsgQEI1xj6ANM/MFIkgQEI9Fnyp4IQZHN0cnB0gBjIywXLAlAFzxZQA/oCE8tqyx8Syz/Jc/sAAAr0AMntVA==', 'base64'))[0];\n        let data = (0, ton_core_1.beginCell)()\n            .storeUint(0, 32) // Seqno\n            .storeUint(this.walletId, 32)\n            .storeBuffer(this.publicKey)\n            .storeBit(0) // Empty plugins dict\n            .endCell();\n        this.init = { code, data };\n        this.address = (0, ton_core_1.contractAddress)(workchain, { code, data });\n    }\n    static create(args) {\n        return new WalletContractV4(args.workchain, args.publicKey, args.walletId);\n    }\n    /**\n     * Get Wallet Balance\n     */\n    async getBalance(provider) {\n        let state = await provider.getState();\n        return state.balance;\n    }\n    /**\n     * Get Wallet Seqno\n     */\n    async getSeqno(provider) {\n        let state = await provider.getState();\n        if (state.state.type === 'active') {\n            let res = await provider.get('seqno', []);\n            return res.stack.readNumber();\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * Send signed transfer\n     */\n    async send(provider, message) {\n        await provider.external(message);\n    }\n    /**\n     * Sign and send transfer\n     */\n    async sendTransfer(provider, args) {\n        let transfer = this.createTransfer(args);\n        await this.send(provider, transfer);\n    }\n    /**\n     * Create signed transfer\n     */\n    createTransfer(args) {\n        let sendMode = ton_core_1.SendMode.PAY_GAS_SEPARATLY;\n        if (args.sendMode !== null && args.sendMode !== undefined) {\n            sendMode = args.sendMode;\n        }\n        return (0, createWalletTransfer_1.createWalletTransferV4)({\n            seqno: args.seqno,\n            sendMode,\n            secretKey: args.secretKey,\n            messages: args.messages,\n            timeout: args.timeout,\n            walletId: this.walletId\n        });\n    }\n    /**\n     * Create sender\n     */\n    sender(provider, secretKey) {\n        return {\n            send: async (args) => {\n                let seqno = await this.getSeqno(provider);\n                let transfer = this.createTransfer({\n                    seqno,\n                    secretKey,\n                    sendMode: args.sendMode,\n                    messages: [(0, ton_core_1.internal)({\n                            to: args.to,\n                            value: args.value,\n                            init: args.init,\n                            body: args.body,\n                            bounce: args.bounce\n                        })]\n                });\n                await this.send(provider, transfer);\n            }\n        };\n    }\n}\nexports.WalletContractV4 = WalletContractV4;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JettonMaster = void 0;\nconst ton_core_1 = require(\"ton-core\");\nclass JettonMaster {\n    constructor(address) {\n        this.address = address;\n    }\n    static create(address) {\n        return new JettonMaster(address);\n    }\n    async getWalletAddress(provider, owner) {\n        let res = await provider.get('get_wallet_address', [{ type: 'slice', cell: (0, ton_core_1.beginCell)().storeAddress(owner).endCell() }]);\n        return res.stack.readAddress();\n    }\n    async getJettonData(provider) {\n        let res = await provider.get('get_jetton_data', []);\n        let totalSupply = res.stack.readBigNumber();\n        let mintable = res.stack.readBoolean();\n        let adminAddress = res.stack.readAddress();\n        let content = res.stack.readCell();\n        let walletCode = res.stack.readCell();\n        return {\n            totalSupply,\n            mintable,\n            adminAddress,\n            content,\n            walletCode\n        };\n    }\n}\nexports.JettonMaster = JettonMaster;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JettonWallet = void 0;\nclass JettonWallet {\n    constructor(address) {\n        this.address = address;\n    }\n    static create(address) {\n        return new JettonWallet(address);\n    }\n    async getBalance(provider) {\n        let state = await provider.getState();\n        if (state.state.type !== 'active') {\n            return 0n;\n        }\n        let res = await provider.get('get_wallet_data', []);\n        return res.stack.readBigNumber();\n    }\n}\nexports.JettonWallet = JettonWallet;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JettonWallet = exports.JettonMaster = exports.WalletContractV4 = exports.WalletContractV3R2 = exports.WalletContractV3R1 = exports.WalletContractV2R2 = exports.WalletContractV2R1 = exports.WalletContractV1R3 = exports.WalletContractV1R2 = exports.WalletContractV1R1 = exports.TonClient4 = exports.TonClient = exports.HttpApi = void 0;\n__exportStar(require(\"ton-core\"), exports);\n//\n// toncenter Client\n//\nvar HttpApi_1 = require(\"./client/api/HttpApi\");\nObject.defineProperty(exports, \"HttpApi\", { enumerable: true, get: function () { return HttpApi_1.HttpApi; } });\nvar TonClient_1 = require(\"./client/TonClient\");\nObject.defineProperty(exports, \"TonClient\", { enumerable: true, get: function () { return TonClient_1.TonClient; } });\n//\n// API V4 Client\n//\nvar TonClient4_1 = require(\"./client/TonClient4\");\nObject.defineProperty(exports, \"TonClient4\", { enumerable: true, get: function () { return TonClient4_1.TonClient4; } });\n//\n// Wallets\n//\nvar WalletContractV1R1_1 = require(\"./wallets/WalletContractV1R1\");\nObject.defineProperty(exports, \"WalletContractV1R1\", { enumerable: true, get: function () { return WalletContractV1R1_1.WalletContractV1R1; } });\nvar WalletContractV1R2_1 = require(\"./wallets/WalletContractV1R2\");\nObject.defineProperty(exports, \"WalletContractV1R2\", { enumerable: true, get: function () { return WalletContractV1R2_1.WalletContractV1R2; } });\nvar WalletContractV1R3_1 = require(\"./wallets/WalletContractV1R3\");\nObject.defineProperty(exports, \"WalletContractV1R3\", { enumerable: true, get: function () { return WalletContractV1R3_1.WalletContractV1R3; } });\nvar WalletContractV2R1_1 = require(\"./wallets/WalletContractV2R1\");\nObject.defineProperty(exports, \"WalletContractV2R1\", { enumerable: true, get: function () { return WalletContractV2R1_1.WalletContractV2R1; } });\nvar WalletContractV2R2_1 = require(\"./wallets/WalletContractV2R2\");\nObject.defineProperty(exports, \"WalletContractV2R2\", { enumerable: true, get: function () { return WalletContractV2R2_1.WalletContractV2R2; } });\nvar WalletContractV3R1_1 = require(\"./wallets/WalletContractV3R1\");\nObject.defineProperty(exports, \"WalletContractV3R1\", { enumerable: true, get: function () { return WalletContractV3R1_1.WalletContractV3R1; } });\nvar WalletContractV3R2_1 = require(\"./wallets/WalletContractV3R2\");\nObject.defineProperty(exports, \"WalletContractV3R2\", { enumerable: true, get: function () { return WalletContractV3R2_1.WalletContractV3R2; } });\nvar WalletContractV4_1 = require(\"./wallets/WalletContractV4\");\nObject.defineProperty(exports, \"WalletContractV4\", { enumerable: true, get: function () { return WalletContractV4_1.WalletContractV4; } });\n//\n// Jettons\n//\nvar JettonMaster_1 = require(\"./jetton/JettonMaster\");\nObject.defineProperty(exports, \"JettonMaster\", { enumerable: true, get: function () { return JettonMaster_1.JettonMaster; } });\nvar JettonWallet_1 = require(\"./jetton/JettonWallet\");\nObject.defineProperty(exports, \"JettonWallet\", { enumerable: true, get: function () { return JettonWallet_1.JettonWallet; } });\n"],
  "mappings": "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",
  "names": ["first", "first", "flap", "left", "right", "Functor", "URI", "ap", "apFirst", "apS", "apSecond", "bind", "bindTo", "chainFirst", "chainOptionK", "filterOrElse", "flap", "fromOption", "fromOptionK", "fromPredicate", "getApplySemigroup", "isLeft", "isRight", "left", "let_", "map", "right", "ma", "alt", "_map", "empty", "compact", "separate", "filter", "partition", "identity", "tuple", "keys", "isLeft", "type", "__spreadArray", "isNonEmpty", "tags", "codec", "k", "right", "d", "b", "left", "Type", "NullType", "UndefinedType", "VoidType", "UnknownType", "StringType", "NumberType", "BigIntType", "BooleanType", "AnyArrayType", "AnyDictionaryType", "LiteralType", "KeyofType", "RefinementType", "RecursiveType", "ArrayType", "InterfaceType", "PartialType", "DictionaryType", "UnionType", "IntersectionType", "TupleType", "ReadonlyType", "ReadonlyArrayType", "ExactType", "FunctionType", "NeverType", "AnyType", "TaggedUnionType", "ObjectType", "StrictType", "getSemigroup", "getMonoid", "identity", "constant", "flow", "tuple", "pipe", "SK", "not", "first", "__spreadArray", "isNone", "isSome", "some", "isLeft", "isRight", "left", "right", "singleton", "isNonEmpty", "head", "tail", "fromReadonlyNonEmptyArray", "ap", "apFirst", "first", "apSecond", "apS", "getApplySemigroup", "keys", "map", "flap", "bindTo", "let_", "getFunctorComposition", "_map", "getApplicativeMonoid", "map", "_ap", "chainFirst", "first", "bind", "tailRec", "fromOption", "fromPredicate", "fromOptionK", "chainOptionK", "fromEitherK", "chainEitherK", "chainFirstEitherK", "filterOrElse", "separated", "left", "right", "_map", "_mapLeft", "_bimap", "map", "mapLeft", "bimap", "wiltDefault", "witherDefault", "filterE", "_map", "_ap", "_chain", "_reduce", "_foldMap", "_reduceRight", "_traverse", "_bimap", "_mapLeft", "_alt", "_extend", "_chainRec", "getShow", "getEq", "getSemigroup", "getCompactable", "empty", "getFilterable", "compact", "separate", "filter", "partition", "getWitherable", "getApplicativeValidation", "getAltValidation", "map", "apW", "chainW", "reduce", "foldMap", "reduceRight", "traverse", "sequence", "bimap", "mapLeft", "altW", "extend", "matchW", "getOrElseW", "swap", "orElseW", "fromNullable", "tryCatch", "tryCatchK", "fromNullableK", "chainNullableK", "toError", "elem", "ma", "exists", "let_", "traverseReadonlyNonEmptyArrayWithIndex", "traverseReadonlyArrayWithIndex", "traverseArray", "_", "parseJSON", "stringifyJSON", "getValidationSemigroup", "getValidationMonoid", "getValidation", "ap", "alt", "first", "getSemigroup", "compare", "min", "max", "constant", "__spreadArray", "isNonEmpty", "_map", "_ap", "_chain", "of", "ap", "chain", "extend", "duplicate", "flatten", "map", "reduce", "foldMap", "reduceRight", "URI", "getShow", "getEq", "Functor", "flap", "Apply", "apFirst", "apSecond", "Chain", "chainFirst", "Do", "bindTo", "let_", "bind", "apS", "head", "tail", "last", "min", "max", "concatAll", "init", "b", "Alt", "Applicative", "Apply", "Chain", "Do", "Foldable", "Functor", "Monad", "Pointed", "Traversable", "URI", "alt", "altW", "ap", "apFirst", "apS", "apSecond", "append", "appendW", "bind", "bindTo", "chain", "chainFirst", "chainWithIndex", "concatAll", "duplicate", "extend", "extract", "flap", "flatten", "fold", "foldMap", "foldMapWithIndex", "fromReadonlyNonEmptyArray", "getEq", "getSemigroup", "getShow", "head", "intercalate", "intersperse", "isNonEmpty", "isOutOfBound", "last", "let_", "map", "mapWithIndex", "max", "min", "of", "prepend", "prependAll", "prependW", "reduce", "reduceRight", "reduceRightWithIndex", "reduceWithIndex", "reverse", "sequence", "tail", "traverse", "union", "first", "y", "bs", "__spreadArray", "_map", "_ap", "_chain", "_extend", "_reduce", "_foldMap", "_reduceRight", "_traverse", "_alt", "init", "a", "first", "as", "isOutOfBound", "elem", "__spreadArray", "isNonEmpty", "append", "matchW", "match", "chainWithIndex", "head", "last", "_map", "_ap", "_chain", "_reduce", "_foldMap", "_reduceRight", "_traverse", "of", "ap", "chain", "flatten", "map", "filter", "extend", "duplicate", "foldMapWithIndex", "reduce", "foldMap", "reduceWithIndex", "reduceRight", "reduceRightWithIndex", "traverse", "sequence", "traverseWithIndex", "URI", "getShow", "getEq", "Functor", "flap", "Pointed", "Apply", "apFirst", "apSecond", "Chain", "chainFirst", "guard", "Traversable", "filterE", "FromEither", "fromEitherK", "empty", "intercalate", "Do", "bindTo", "let_", "bind", "apS", "left", "right", "b", "e", "Alt", "Applicative", "Apply", "Chain", "Compactable", "Do", "Extend", "Foldable", "FoldableWithIndex", "FromEither", "Functor", "FunctorWithIndex", "Monad", "Pointed", "Traversable", "TraversableWithIndex", "URI", "Witherable", "Zero", "alt", "altW", "ap", "apFirst", "apS", "apSecond", "append", "appendW", "array", "bind", "bindTo", "chain", "chainFirst", "chainRecBreadthFirst", "chainRecDepthFirst", "chainWithIndex", "chop", "chunksOf", "compact", "concat", "concatW", "cons", "copy", "duplicate", "elem", "empty", "every", "exists", "extend", "filter", "filterE", "filterMap", "filterMapWithIndex", "filterWithIndex", "findFirst", "findFirstMap", "findIndex", "findLast", "findLastIndex", "findLastMap", "flap", "flatten", "foldMap", "foldMapWithIndex", "fromEither", "fromEitherK", "fromOption", "fromOptionK", "fromPredicate", "getEq", "getMonoid", "getOrd", "getSemigroup", "getShow", "getUnionSemigroup", "guard", "head", "init", "insertAt", "intercalate", "intersection", "intersperse", "isEmpty", "isNonEmpty", "isOutOfBound", "last", "let_", "lookup", "makeBy", "map", "mapWithIndex", "match", "matchLeft", "matchRight", "matchW", "modifyAt", "of", "partition", "partitionMap", "partitionMapWithIndex", "partitionWithIndex", "prepend", "prependAll", "prependToAll", "prependW", "range", "reduce", "reduceRight", "reduceRightWithIndex", "reduceWithIndex", "replicate", "reverse", "rotate", "separate", "sequence", "snoc", "some", "sort", "sortBy", "splitAt", "tail", "traverse", "traverseWithIndex", "union", "uniq", "unsafeInsertAt", "unsafeUpdateAt", "unzip", "updateAt", "zero", "zip", "zipWith", "bs", "input", "first", "second", "ys", "_map", "_mapWithIndex", "_ap", "_chain", "_filter", "_filterMap", "_partition", "_partitionMap", "_alt", "_reduce", "_foldMap", "_reduceRight", "_reduceWithIndex", "_foldMapWithIndex", "_reduceRightWithIndex", "_extend", "_traverse", "_traverseWithIndex", "_chainRecDepthFirst", "_chainRecBreadthFirst", "_wither", "_wilt", "left", "right", "Alt", "Alternative", "ApT", "Applicative", "Apply", "Chain", "Compactable", "Do", "Extend", "Filterable", "Foldable", "FromEither", "Functor", "Monad", "MonadThrow", "Pointed", "Traversable", "URI", "Witherable", "Zero", "alt", "altW", "ap", "apFirst", "apS", "apSecond", "bind", "bindTo", "chain", "chainEitherK", "chainFirst", "chainFirstEitherK", "chainNullableK", "compact", "duplicate", "elem", "exists", "extend", "filter", "filterMap", "flap", "flatten", "fold", "foldMap", "foldW", "fromEither", "fromEitherK", "fromNullable", "fromNullableK", "fromPredicate", "getApplyMonoid", "getApplySemigroup", "getEq", "getMonoid", "getOrElse", "getOrElseW", "getOrd", "getShow", "guard", "isNone", "isSome", "let_", "map", "match", "matchW", "none", "of", "partition", "partitionMap", "reduce", "reduceRight", "separate", "sequence", "sequenceArray", "some", "throwError", "traverse", "traverseArray", "traverseArrayWithIndex", "traverseReadonlyArrayWithIndex", "traverseReadonlyNonEmptyArrayWithIndex", "tryCatch", "tryCatchK", "wilt", "wither", "zero", "ma", "_map", "_ap", "_chain", "_reduce", "_foldMap", "_reduceRight", "_traverse", "_alt", "_filter", "_filterMap", "_extend", "_partition", "_partitionMap", "_wither", "_wilt", "Eq", "empty", "Ord", "first", "Ord", "that", "lookup", "r", "mapWithIndex", "map", "reduceWithIndex", "foldMapWithIndex", "reduceRightWithIndex", "traverseWithIndex", "_traverseWithIndex", "traverse", "_traverse", "sequence", "partitionMapWithIndex", "left", "right", "partitionWithIndex", "filterMapWithIndex", "filterWithIndex", "every", "some", "elem", "fa", "reduce", "b", "foldMap", "reduceRight", "getShow", "getEq", "getMonoid", "first", "isEmpty", "empty", "hasOwnProperty", "size", "has", "singleton", "union", "intersection", "difference", "_map", "_mapWithIndex", "_reduce", "_foldMap", "_reduceRight", "_filter", "_filterMap", "_partition", "_partitionMap", "_reduceWithIndex", "_foldMapWithIndex", "_reduceRightWithIndex", "_partitionMapWithIndex", "_partitionWithIndex", "_filterMapWithIndex", "_filterWithIndex", "filter", "filterMap", "partition", "partitionMap", "compact", "separate", "URI", "Functor", "flap", "Compactable", "Foldable", "FoldableWithIndex", "Traversable", "TraversableWithIndex", "_wither", "_wilt", "Witherable", "key", "Compactable", "Filterable", "FilterableWithIndex", "Foldable", "FoldableWithIndex", "Functor", "FunctorWithIndex", "Traversable", "TraversableWithIndex", "URI", "Witherable", "collect", "compact", "deleteAt", "difference", "elem", "empty", "every", "filter", "filterMap", "filterMapWithIndex", "filterWithIndex", "flap", "foldMap", "foldMapWithIndex", "fromFoldable", "fromFoldableMap", "getDifferenceMagma", "getEq", "getIntersectionSemigroup", "getMonoid", "getShow", "getUnionMonoid", "getUnionSemigroup", "getWitherable", "has", "hasOwnProperty", "insertAt", "intersection", "isEmpty", "isSubrecord", "keys", "lookup", "map", "mapWithIndex", "modifyAt", "partition", "partitionMap", "partitionMapWithIndex", "partitionWithIndex", "record", "reduce", "reduceRight", "reduceRightWithIndex", "reduceWithIndex", "separate", "sequence", "singleton", "size", "some", "traverse", "traverseWithIndex", "union", "updateAt", "upsertAt", "wilt", "wither", "Ord", "keys_", "__assign", "_map", "_mapWithIndex", "_reduce", "_foldMap", "_reduceRight", "_filter", "_filterMap", "_partition", "_partitionMap", "_reduceWithIndex", "_foldMapWithIndex", "_reduceRightWithIndex", "_partitionMapWithIndex", "_partitionWithIndex", "_filterMapWithIndex", "_filterWithIndex", "_traverse", "_sequence", "_traverseWithIndex", "_wither", "_wilt", "first", "key", "alt", "ap", "bimap", "chain", "contramap", "extend", "filter", "filterMap", "filterMapWithIndex", "filterWithIndex", "foldMap", "foldMapWithIndex", "map", "mapLeft", "mapWithIndex", "partition", "partitionMap", "partitionMapWithIndex", "partitionWithIndex", "pipe", "reduce", "reduceRight", "reduceRightWithIndex", "reduceWithIndex", "fromOption", "fromEither", "fromPredicate", "filterOrElse", "init", "type", "errors", "DataLoader", "keys", "process", "bind", "require_utils", "bind", "extend", "match", "process", "type", "keys", "chain", "bind", "require_axios", "init", "last", "tail", "init", "last", "require_dist", "exports"]
}
